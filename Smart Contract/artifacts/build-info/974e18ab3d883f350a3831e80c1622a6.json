{
	"id": "974e18ab3d883f350a3831e80c1622a6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTIncentives_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC4906.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        _update(address(0), tokenId, _msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n\n// File: NFTIncentives.sol\n\n\npragma solidity ^0.8.7;\n\n\n\n\n    interface IProgress{\n        \n    }\n\ncontract IncentiveNFTs is ERC721URIStorage, Ownable(msg.sender){\n\n    IProgress public Progress;\n    uint public tokenCount;\n    constructor () ERC721(\"Incentives\", \"INFT\"){} // The constructor uses the imported ERC721 contract which requires two inputs in its constructor, the name and symbol of the NFT\n    \n\n    \n    function setProgressSC(address _progressSC) external onlyOwner{\n        Progress = IProgress(_progressSC);\n    }\n\n    //Optional: Make only authorized users mint Raw Genomics Data NFT\n    function mint(string memory _tokenURI) external returns(uint){\n        require(msg.sender == address(Progress), \"The caller cannot run this function\");\n        tokenCount++;\n        _safeMint(msg.sender, tokenCount); \n        _setTokenURI(tokenCount, _tokenURI);\n        return(tokenCount);\n    } \n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"NFTIncentives_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1943,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1945,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1949,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1953,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1957,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1963,
								"contract": "NFTIncentives_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be burned (destroyed).",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be burned (destroyed).\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"ERC721Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1943,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1945,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1949,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1953,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1957,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1963,
								"contract": "NFTIncentives_flattened.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1943,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1945,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1949,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1953,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1957,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1963,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2962,
								"contract": "NFTIncentives_flattened.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IProgress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IProgress\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IncentiveNFTs": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Progress",
							"outputs": [
								{
									"internalType": "contract IProgress",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenURI",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_progressSC",
									"type": "address"
								}
							],
							"name": "setProgressSC",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTIncentives_flattened.sol\":59993:60801  contract IncentiveNFTs is ERC721URIStorage, Ownable(msg.sender){... */\n  mstore(0x40, 0x80)\n    /* \"NFTIncentives_flattened.sol\":60122:60167  constructor () ERC721(\"Incentives\", \"INFT\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"NFTIncentives_flattened.sol\":60045:60055  msg.sender */\n  caller\n    /* \"NFTIncentives_flattened.sol\":40798:40911  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x496e63656e746976657300000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x494e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"NFTIncentives_flattened.sol\":40872:40877  name_ */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":40864:40869  _name */\n  0x00\n    /* \"NFTIncentives_flattened.sol\":40864:40877  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"NFTIncentives_flattened.sol\":40897:40904  symbol_ */\n  dup1\n    /* \"NFTIncentives_flattened.sol\":40887:40894  _symbol */\n  0x01\n    /* \"NFTIncentives_flattened.sol\":40887:40904  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"NFTIncentives_flattened.sol\":40798:40911  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NFTIncentives_flattened.sol\":28327:28328  0 */\n  0x00\n    /* \"NFTIncentives_flattened.sol\":28303:28329  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTIncentives_flattened.sol\":28303:28315  initialOwner */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":28303:28329  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"NFTIncentives_flattened.sol\":28299:28394  if (initialOwner == address(0)) {... */\n  tag_10\n  jumpi\n    /* \"NFTIncentives_flattened.sol\":28380:28381  0 */\n  0x00\n    /* \"NFTIncentives_flattened.sol\":28352:28383  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"NFTIncentives_flattened.sol\":28299:28394  if (initialOwner == address(0)) {... */\ntag_10:\n    /* \"NFTIncentives_flattened.sol\":28403:28435  _transferOwnership(initialOwner) */\n  tag_13\n    /* \"NFTIncentives_flattened.sol\":28422:28434  initialOwner */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":28403:28421  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"NFTIncentives_flattened.sol\":28403:28435  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n    /* \"NFTIncentives_flattened.sol\":28255:28442  constructor(address initialOwner) {... */\n  pop\n    /* \"NFTIncentives_flattened.sol\":59993:60801  contract IncentiveNFTs is ERC721URIStorage, Ownable(msg.sender){... */\n  jump(tag_16)\n    /* \"NFTIncentives_flattened.sol\":29942:30129  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"NFTIncentives_flattened.sol\":30015:30031  address oldOwner */\n  0x00\n    /* \"NFTIncentives_flattened.sol\":30034:30040  _owner */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTIncentives_flattened.sol\":30015:30040  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"NFTIncentives_flattened.sol\":30059:30067  newOwner */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":30050:30056  _owner */\n  0x07\n  0x00\n    /* \"NFTIncentives_flattened.sol\":30050:30067  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTIncentives_flattened.sol\":30113:30121  newOwner */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":30082:30122  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTIncentives_flattened.sol\":30103:30111  oldOwner */\n  dup2\n    /* \"NFTIncentives_flattened.sol\":30082:30122  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"NFTIncentives_flattened.sol\":30005:30129  {... */\n  pop\n    /* \"NFTIncentives_flattened.sol\":29942:30129  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_18:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_19:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_20:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_21:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_46:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_48\n  tag_20\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":714:798   */\ntag_47:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_22:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_23:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_24:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_25:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_53\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_24\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1429:1468   */\n  tag_54\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_24\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_26:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_27:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_28:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_58\n    /* \"#utility.yul\":1818:1852   */\n  tag_59\n    /* \"#utility.yul\":1827:1851   */\n  tag_60\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_26\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1818:1852   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1800:1853   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_29:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_30:\n    /* \"#utility.yul\":2056:2095   */\n  tag_63\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_28\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2117:2208   */\n  tag_64\n    /* \"#utility.yul\":2166:2207   */\n  tag_65\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_25\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_31:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_32:\n    /* \"#utility.yul\":2377:2409   */\n  tag_68\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2418:2483   */\n  tag_69\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_33:\n    /* \"#utility.yul\":2555:2675   */\ntag_71:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_74\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_32\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_71)\ntag_73:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_34:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_77\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_22\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2906:2935   */\n  tag_78\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_23\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_79:\n    /* \"#utility.yul\":3133:3213   */\n  tag_80\n    /* \"#utility.yul\":3189:3211   */\n  tag_81\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_23\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_33\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_76:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_35:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_36:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_84\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_35\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_37:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_86\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_36\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_7:\n    /* \"#utility.yul\":3950:3987   */\n  tag_88\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_18\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_90\n  tag_19\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4038:4094   */\ntag_89:\n    /* \"#utility.yul\":4118:4156   */\n  tag_91\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_21\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4203:4270   */\n  tag_92\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_94\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_95:\n    /* \"#utility.yul\":5144:5211   */\n  tag_96\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_37\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_93)\n    /* \"#utility.yul\":4365:4983   */\ntag_94:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_97\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_22\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_98:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_98)\ntag_100:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_102\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_36\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_101:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_93:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_38:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_39:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_105\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_38\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_40:\n    /* \"#utility.yul\":5555:5579   */\n  tag_107\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_12:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_109\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_40\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"NFTIncentives_flattened.sol\":59993:60801  contract IncentiveNFTs is ERC721URIStorage, Ownable(msg.sender){... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTIncentives_flattened.sol\":59993:60801  contract IncentiveNFTs is ERC721URIStorage, Ownable(msg.sender){... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd85d3d27\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f181b5e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb876e3b6\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x42842e0e\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5f53575f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"NFTIncentives_flattened.sol\":58739:58946  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":41782:41871  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":42914:43068  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":42740:42853  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"NFTIncentives_flattened.sol\":43560:44138  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"NFTIncentives_flattened.sol\":44204:44336  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"NFTIncentives_flattened.sol\":60063:60088  IProgress public Progress */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":41602:41720  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":41337:41545  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":29323:29424  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"NFTIncentives_flattened.sol\":28668:28753  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":41935:42028  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":60094:60116  uint public tokenCount */\n    tag_15:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":43135:43279  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_16:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"NFTIncentives_flattened.sol\":60313:60425  function setProgressSC(address _progressSC) external onlyOwner{... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"NFTIncentives_flattened.sol\":44402:44610  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"NFTIncentives_flattened.sol\":59012:59605  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_19:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":60501:60797  function mint(string memory _tokenURI) external returns(uint){... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":43345:43498  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTIncentives_flattened.sol\":29573:29788  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"NFTIncentives_flattened.sol\":58739:58946  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"NFTIncentives_flattened.sol\":58841:58845  bool */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":58562:58572  0x49064906 */\n      0x49064906\n        /* \"NFTIncentives_flattened.sol\":58555:58573  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"NFTIncentives_flattened.sol\":58864:58899  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTIncentives_flattened.sol\":58864:58875  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":58864:58899  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":58864:58939  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":58903:58939  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"NFTIncentives_flattened.sol\":58927:58938  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":58903:58926  super.supportsInterface */\n      tag_109\n        /* \"NFTIncentives_flattened.sol\":58903:58939  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"NFTIncentives_flattened.sol\":58864:58939  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"NFTIncentives_flattened.sol\":58857:58939  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":58739:58946  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":41782:41871  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"NFTIncentives_flattened.sol\":41827:41840  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":41859:41864  _name */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41852:41864  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":41782:41871  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":42914:43068  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"NFTIncentives_flattened.sol\":42981:42988  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43000:43022  _requireOwned(tokenId) */\n      tag_118\n        /* \"NFTIncentives_flattened.sol\":43014:43021  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":43000:43013  _requireOwned */\n      tag_119\n        /* \"NFTIncentives_flattened.sol\":43000:43022  _requireOwned(tokenId) */\n      jump\t// in\n    tag_118:\n      pop\n        /* \"NFTIncentives_flattened.sol\":43040:43061  _getApproved(tokenId) */\n      tag_120\n        /* \"NFTIncentives_flattened.sol\":43053:43060  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":43040:43052  _getApproved */\n      tag_121\n        /* \"NFTIncentives_flattened.sol\":43040:43061  _getApproved(tokenId) */\n      jump\t// in\n    tag_120:\n        /* \"NFTIncentives_flattened.sol\":43033:43061  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":42914:43068  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":42740:42853  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_45:\n        /* \"NFTIncentives_flattened.sol\":42811:42846  _approve(to, tokenId, _msgSender()) */\n      tag_123\n        /* \"NFTIncentives_flattened.sol\":42820:42822  to */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":42824:42831  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":42833:42845  _msgSender() */\n      tag_124\n        /* \"NFTIncentives_flattened.sol\":42833:42843  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":42833:42845  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"NFTIncentives_flattened.sol\":42811:42819  _approve */\n      tag_126\n        /* \"NFTIncentives_flattened.sol\":42811:42846  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_123:\n        /* \"NFTIncentives_flattened.sol\":42740:42853  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":43560:44138  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_49:\n        /* \"NFTIncentives_flattened.sol\":43668:43669  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43654:43670  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":43654:43656  to */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":43654:43670  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":43650:43737  if (to == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":43723:43724  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43693:43726  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":43650:43737  if (to == address(0)) {... */\n    tag_128:\n        /* \"NFTIncentives_flattened.sol\":43955:43976  address previousOwner */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43979:44013  _update(to, tokenId, _msgSender()) */\n      tag_130\n        /* \"NFTIncentives_flattened.sol\":43987:43989  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":43991:43998  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44000:44012  _msgSender() */\n      tag_131\n        /* \"NFTIncentives_flattened.sol\":44000:44010  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":44000:44012  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"NFTIncentives_flattened.sol\":43979:43986  _update */\n      tag_132\n        /* \"NFTIncentives_flattened.sol\":43979:44013  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_130:\n        /* \"NFTIncentives_flattened.sol\":43955:44013  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":44044:44048  from */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44027:44048  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":44027:44040  previousOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":44027:44048  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":44023:44132  if (previousOwner != from) {... */\n      tag_133\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":44092:44096  from */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44098:44105  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":44107:44120  previousOwner */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":44071:44121  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":44023:44132  if (previousOwner != from) {... */\n    tag_133:\n        /* \"NFTIncentives_flattened.sol\":43640:44138  {... */\n      pop\n        /* \"NFTIncentives_flattened.sol\":43560:44138  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":44204:44336  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_52:\n        /* \"NFTIncentives_flattened.sol\":44290:44329  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_137\n        /* \"NFTIncentives_flattened.sol\":44307:44311  from */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44313:44315  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44317:44324  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":44290:44329  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":44290:44306  safeTransferFrom */\n      tag_88\n        /* \"NFTIncentives_flattened.sol\":44290:44329  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_137:\n        /* \"NFTIncentives_flattened.sol\":44204:44336  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":60063:60088  IProgress public Progress */\n    tag_54:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":41602:41720  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_59:\n        /* \"NFTIncentives_flattened.sol\":41665:41672  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41691:41713  _requireOwned(tokenId) */\n      tag_139\n        /* \"NFTIncentives_flattened.sol\":41705:41712  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":41691:41704  _requireOwned */\n      tag_119\n        /* \"NFTIncentives_flattened.sol\":41691:41713  _requireOwned(tokenId) */\n      jump\t// in\n    tag_139:\n        /* \"NFTIncentives_flattened.sol\":41684:41713  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":41602:41720  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":41337:41545  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"NFTIncentives_flattened.sol\":41400:41407  uint256 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41440:41441  0 */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":41423:41442  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":41423:41428  owner */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":41423:41442  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":41419:41506  if (owner == address(0)) {... */\n      tag_141\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":41492:41493  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41465:41495  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":41419:41506  if (owner == address(0)) {... */\n    tag_141:\n        /* \"NFTIncentives_flattened.sol\":41522:41531  _balances */\n      0x03\n        /* \"NFTIncentives_flattened.sol\":41522:41538  _balances[owner] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41532:41537  owner */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":41522:41538  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTIncentives_flattened.sol\":41515:41538  return _balances[owner] */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":41337:41545  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":29323:29424  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      tag_144\n        /* \"NFTIncentives_flattened.sol\":28561:28572  _checkOwner */\n      tag_145\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"NFTIncentives_flattened.sol\":29387:29417  _transferOwnership(address(0)) */\n      tag_147\n        /* \"NFTIncentives_flattened.sol\":29414:29415  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":29387:29405  _transferOwnership */\n      tag_148\n        /* \"NFTIncentives_flattened.sol\":29387:29417  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"NFTIncentives_flattened.sol\":29323:29424  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":28668:28753  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"NFTIncentives_flattened.sol\":28714:28721  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":28740:28746  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":28733:28746  return _owner */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":28668:28753  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":41935:42028  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"NFTIncentives_flattened.sol\":41982:41995  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":42014:42021  _symbol */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":42007:42021  return _symbol */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_112\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_112\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":41935:42028  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":60094:60116  uint public tokenCount */\n    tag_76:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":43135:43279  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_81:\n        /* \"NFTIncentives_flattened.sol\":43220:43272  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_157\n        /* \"NFTIncentives_flattened.sol\":43239:43251  _msgSender() */\n      tag_158\n        /* \"NFTIncentives_flattened.sol\":43239:43249  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":43239:43251  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"NFTIncentives_flattened.sol\":43253:43261  operator */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":43263:43271  approved */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":43220:43238  _setApprovalForAll */\n      tag_159\n        /* \"NFTIncentives_flattened.sol\":43220:43272  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_157:\n        /* \"NFTIncentives_flattened.sol\":43135:43279  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":60313:60425  function setProgressSC(address _progressSC) external onlyOwner{... */\n    tag_84:\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      tag_161\n        /* \"NFTIncentives_flattened.sol\":28561:28572  _checkOwner */\n      tag_145\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"NFTIncentives_flattened.sol\":60406:60417  _progressSC */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":60385:60393  Progress */\n      0x08\n      0x00\n        /* \"NFTIncentives_flattened.sol\":60385:60418  Progress = IProgress(_progressSC) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":60313:60425  function setProgressSC(address _progressSC) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":44402:44610  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_88:\n        /* \"NFTIncentives_flattened.sol\":44515:44546  transferFrom(from, to, tokenId) */\n      tag_164\n        /* \"NFTIncentives_flattened.sol\":44528:44532  from */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44534:44536  to */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44538:44545  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44515:44527  transferFrom */\n      tag_49\n        /* \"NFTIncentives_flattened.sol\":44515:44546  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"NFTIncentives_flattened.sol\":44556:44603  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_165\n        /* \"NFTIncentives_flattened.sol\":44579:44583  from */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44585:44587  to */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44589:44596  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44598:44602  data */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":44556:44578  _checkOnERC721Received */\n      tag_166\n        /* \"NFTIncentives_flattened.sol\":44556:44603  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_165:\n        /* \"NFTIncentives_flattened.sol\":44402:44610  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":59012:59605  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_91:\n        /* \"NFTIncentives_flattened.sol\":59085:59098  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":59110:59132  _requireOwned(tokenId) */\n      tag_168\n        /* \"NFTIncentives_flattened.sol\":59124:59131  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":59110:59123  _requireOwned */\n      tag_119\n        /* \"NFTIncentives_flattened.sol\":59110:59132  _requireOwned(tokenId) */\n      jump\t// in\n    tag_168:\n      pop\n        /* \"NFTIncentives_flattened.sol\":59143:59166  string memory _tokenURI */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59169:59179  _tokenURIs */\n      0x06\n        /* \"NFTIncentives_flattened.sol\":59169:59188  _tokenURIs[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59180:59187  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":59169:59188  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTIncentives_flattened.sol\":59143:59188  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_112\n      jump\t// in\n    tag_169:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_170\n      swap1\n      tag_112\n      jump\t// in\n    tag_170:\n      dup1\n      iszero\n      tag_171\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_172\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_171)\n    tag_172:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_173:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_173\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":59198:59216  string memory base */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59219:59229  _baseURI() */\n      tag_174\n        /* \"NFTIncentives_flattened.sol\":59219:59227  _baseURI */\n      tag_175\n        /* \"NFTIncentives_flattened.sol\":59219:59229  _baseURI() */\n      jump\t// in\n    tag_174:\n        /* \"NFTIncentives_flattened.sol\":59198:59229  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":59324:59325  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59308:59312  base */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":59302:59320  bytes(base).length */\n      mload\n        /* \"NFTIncentives_flattened.sol\":59302:59325  bytes(base).length == 0 */\n      sub\n        /* \"NFTIncentives_flattened.sol\":59298:59368  if (bytes(base).length == 0) {... */\n      tag_176\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":59348:59357  _tokenURI */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":59341:59357  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_167)\n        /* \"NFTIncentives_flattened.sol\":59298:59368  if (bytes(base).length == 0) {... */\n    tag_176:\n        /* \"NFTIncentives_flattened.sol\":59493:59494  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59473:59482  _tokenURI */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":59467:59490  bytes(_tokenURI).length */\n      mload\n        /* \"NFTIncentives_flattened.sol\":59467:59494  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"NFTIncentives_flattened.sol\":59463:59558  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":59531:59535  base */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":59537:59546  _tokenURI */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":59517:59547  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_178\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NFTIncentives_flattened.sol\":59510:59547  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_167)\n        /* \"NFTIncentives_flattened.sol\":59463:59558  if (bytes(_tokenURI).length > 0) {... */\n    tag_177:\n        /* \"NFTIncentives_flattened.sol\":59575:59598  super.tokenURI(tokenId) */\n      tag_180\n        /* \"NFTIncentives_flattened.sol\":59590:59597  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":59575:59589  super.tokenURI */\n      tag_181\n        /* \"NFTIncentives_flattened.sol\":59575:59598  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"NFTIncentives_flattened.sol\":59568:59598  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":59012:59605  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_167:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":60501:60797  function mint(string memory _tokenURI) external returns(uint){... */\n    tag_96:\n        /* \"NFTIncentives_flattened.sol\":60557:60561  uint */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":60602:60610  Progress */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":60580:60611  msg.sender == address(Progress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":60580:60590  msg.sender */\n      caller\n        /* \"NFTIncentives_flattened.sol\":60580:60611  msg.sender == address(Progress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":60572:60651  require(msg.sender == address(Progress), \"The caller cannot run this function\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"NFTIncentives_flattened.sol\":60661:60671  tokenCount */\n      0x09\n      0x00\n        /* \"NFTIncentives_flattened.sol\":60661:60673  tokenCount++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":60683:60716  _safeMint(msg.sender, tokenCount) */\n      tag_188\n        /* \"NFTIncentives_flattened.sol\":60693:60703  msg.sender */\n      caller\n        /* \"NFTIncentives_flattened.sol\":60705:60715  tokenCount */\n      sload(0x09)\n        /* \"NFTIncentives_flattened.sol\":60683:60692  _safeMint */\n      tag_189\n        /* \"NFTIncentives_flattened.sol\":60683:60716  _safeMint(msg.sender, tokenCount) */\n      jump\t// in\n    tag_188:\n        /* \"NFTIncentives_flattened.sol\":60727:60762  _setTokenURI(tokenCount, _tokenURI) */\n      tag_190\n        /* \"NFTIncentives_flattened.sol\":60740:60750  tokenCount */\n      sload(0x09)\n        /* \"NFTIncentives_flattened.sol\":60752:60761  _tokenURI */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":60727:60739  _setTokenURI */\n      tag_191\n        /* \"NFTIncentives_flattened.sol\":60727:60762  _setTokenURI(tokenCount, _tokenURI) */\n      jump\t// in\n    tag_190:\n        /* \"NFTIncentives_flattened.sol\":60779:60789  tokenCount */\n      sload(0x09)\n        /* \"NFTIncentives_flattened.sol\":60772:60790  return(tokenCount) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":60501:60797  function mint(string memory _tokenURI) external returns(uint){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":43345:43498  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"NFTIncentives_flattened.sol\":43433:43437  bool */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43456:43474  _operatorApprovals */\n      0x05\n        /* \"NFTIncentives_flattened.sol\":43456:43481  _operatorApprovals[owner] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43475:43480  owner */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":43456:43481  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTIncentives_flattened.sol\":43456:43491  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":43482:43490  operator */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":43456:43491  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTIncentives_flattened.sol\":43449:43491  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":43345:43498  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":29573:29788  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      tag_194\n        /* \"NFTIncentives_flattened.sol\":28561:28572  _checkOwner */\n      tag_145\n        /* \"NFTIncentives_flattened.sol\":28561:28574  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"NFTIncentives_flattened.sol\":29677:29678  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":29657:29679  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":29657:29665  newOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":29657:29679  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":29653:29744  if (newOwner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":29730:29731  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":29702:29733  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":29653:29744  if (newOwner == address(0)) {... */\n    tag_196:\n        /* \"NFTIncentives_flattened.sol\":29753:29781  _transferOwnership(newOwner) */\n      tag_198\n        /* \"NFTIncentives_flattened.sol\":29772:29780  newOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":29753:29771  _transferOwnership */\n      tag_148\n        /* \"NFTIncentives_flattened.sol\":29753:29781  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_198:\n        /* \"NFTIncentives_flattened.sol\":29573:29788  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":40978:41278  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_109:\n        /* \"NFTIncentives_flattened.sol\":41080:41084  bool */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":41130:41155  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"NFTIncentives_flattened.sol\":41115:41155  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTIncentives_flattened.sol\":41115:41126  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":41115:41155  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":41115:41219  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_200\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":41186:41219  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"NFTIncentives_flattened.sol\":41171:41219  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTIncentives_flattened.sol\":41171:41182  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":41171:41219  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":41115:41219  interfaceId == type(IERC721).interfaceId ||... */\n    tag_200:\n        /* \"NFTIncentives_flattened.sol\":41115:41271  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_201\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":41235:41271  super.supportsInterface(interfaceId) */\n      tag_202\n        /* \"NFTIncentives_flattened.sol\":41259:41270  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":41235:41258  super.supportsInterface */\n      tag_203\n        /* \"NFTIncentives_flattened.sol\":41235:41271  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_202:\n        /* \"NFTIncentives_flattened.sol\":41115:41271  interfaceId == type(IERC721).interfaceId ||... */\n    tag_201:\n        /* \"NFTIncentives_flattened.sol\":41096:41271  return... */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":40978:41278  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":55555:55796  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_119:\n        /* \"NFTIncentives_flattened.sol\":55618:55625  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55637:55650  address owner */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":55653:55670  _ownerOf(tokenId) */\n      tag_205\n        /* \"NFTIncentives_flattened.sol\":55662:55669  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":55653:55661  _ownerOf */\n      tag_206\n        /* \"NFTIncentives_flattened.sol\":55653:55670  _ownerOf(tokenId) */\n      jump\t// in\n    tag_205:\n        /* \"NFTIncentives_flattened.sol\":55637:55670  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":55701:55702  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55684:55703  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":55684:55689  owner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":55684:55703  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":55680:55768  if (owner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":55749:55756  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":55726:55757  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":55680:55768  if (owner == address(0)) {... */\n    tag_207:\n        /* \"NFTIncentives_flattened.sol\":55784:55789  owner */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":55777:55789  return owner */\n      swap2\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":55555:55796  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":45355:45482  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_121:\n        /* \"NFTIncentives_flattened.sol\":45425:45432  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":45451:45466  _tokenApprovals */\n      0x04\n        /* \"NFTIncentives_flattened.sol\":45451:45475  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":45467:45474  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":45451:45475  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":45444:45475  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":45355:45482  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":26746:26842  function _msgSender() internal view virtual returns (address) {... */\n    tag_125:\n        /* \"NFTIncentives_flattened.sol\":26799:26806  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":26825:26835  msg.sender */\n      caller\n        /* \"NFTIncentives_flattened.sol\":26818:26835  return msg.sender */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":26746:26842  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":53835:53955  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_126:\n        /* \"NFTIncentives_flattened.sol\":53915:53948  _approve(to, tokenId, auth, true) */\n      tag_212\n        /* \"NFTIncentives_flattened.sol\":53924:53926  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":53928:53935  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":53937:53941  auth */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":53943:53947  true */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":53915:53923  _approve */\n      tag_213\n        /* \"NFTIncentives_flattened.sol\":53915:53948  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_212:\n        /* \"NFTIncentives_flattened.sol\":53835:53955  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":48255:49050  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_132:\n        /* \"NFTIncentives_flattened.sol\":48341:48348  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48360:48372  address from */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":48375:48392  _ownerOf(tokenId) */\n      tag_215\n        /* \"NFTIncentives_flattened.sol\":48384:48391  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":48375:48383  _ownerOf */\n      tag_206\n        /* \"NFTIncentives_flattened.sol\":48375:48392  _ownerOf(tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"NFTIncentives_flattened.sol\":48360:48392  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":48468:48469  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48452:48470  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":48452:48456  auth */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":48452:48470  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":48448:48534  if (auth != address(0)) {... */\n      tag_216\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":48486:48523  _checkAuthorized(from, auth, tokenId) */\n      tag_217\n        /* \"NFTIncentives_flattened.sol\":48503:48507  from */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":48509:48513  auth */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":48515:48522  tokenId */\n      dup7\n        /* \"NFTIncentives_flattened.sol\":48486:48502  _checkAuthorized */\n      tag_218\n        /* \"NFTIncentives_flattened.sol\":48486:48523  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_217:\n        /* \"NFTIncentives_flattened.sol\":48448:48534  if (auth != address(0)) {... */\n    tag_216:\n        /* \"NFTIncentives_flattened.sol\":48594:48595  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48578:48596  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":48578:48582  from */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":48578:48596  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":48574:48830  if (from != address(0)) {... */\n      tag_219\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":48694:48742  _approve(address(0), tokenId, address(0), false) */\n      tag_220\n        /* \"NFTIncentives_flattened.sol\":48711:48712  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48715:48722  tokenId */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":48732:48733  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48736:48741  false */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":48694:48702  _approve */\n      tag_213\n        /* \"NFTIncentives_flattened.sol\":48694:48742  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_220:\n        /* \"NFTIncentives_flattened.sol\":48804:48805  1 */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":48785:48794  _balances */\n      0x03\n        /* \"NFTIncentives_flattened.sol\":48785:48800  _balances[from] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48795:48799  from */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":48785:48800  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48785:48805  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":48574:48830  if (from != address(0)) {... */\n    tag_219:\n        /* \"NFTIncentives_flattened.sol\":48858:48859  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48844:48860  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":48844:48846  to */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":48844:48860  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":48840:48947  if (to != address(0)) {... */\n      tag_221\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":48921:48922  1 */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":48904:48913  _balances */\n      0x03\n        /* \"NFTIncentives_flattened.sol\":48904:48917  _balances[to] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48914:48916  to */\n      dup8\n        /* \"NFTIncentives_flattened.sol\":48904:48917  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48904:48922  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":48840:48947  if (to != address(0)) {... */\n    tag_221:\n        /* \"NFTIncentives_flattened.sol\":48976:48978  to */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":48957:48964  _owners */\n      0x02\n        /* \"NFTIncentives_flattened.sol\":48957:48973  _owners[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48965:48972  tokenId */\n      dup7\n        /* \"NFTIncentives_flattened.sol\":48957:48973  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTIncentives_flattened.sol\":48957:48978  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":49013:49020  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":49009:49011  to */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":48994:49021  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":49003:49007  from */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":48994:49021  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTIncentives_flattened.sol\":49039:49043  from */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":49032:49043  return from */\n      swap2\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":48255:49050  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":28826:28988  function _checkOwner() internal view virtual {... */\n    tag_145:\n        /* \"NFTIncentives_flattened.sol\":28896:28908  _msgSender() */\n      tag_223\n        /* \"NFTIncentives_flattened.sol\":28896:28906  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":28896:28908  _msgSender() */\n      jump\t// in\n    tag_223:\n        /* \"NFTIncentives_flattened.sol\":28885:28908  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":28885:28892  owner() */\n      tag_224\n        /* \"NFTIncentives_flattened.sol\":28885:28890  owner */\n      tag_70\n        /* \"NFTIncentives_flattened.sol\":28885:28892  owner() */\n      jump\t// in\n    tag_224:\n        /* \"NFTIncentives_flattened.sol\":28885:28908  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":28881:28982  if (owner() != _msgSender()) {... */\n      tag_225\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":28958:28970  _msgSender() */\n      tag_226\n        /* \"NFTIncentives_flattened.sol\":28958:28968  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":28958:28970  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"NFTIncentives_flattened.sol\":28931:28971  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":28881:28982  if (owner() != _msgSender()) {... */\n    tag_225:\n        /* \"NFTIncentives_flattened.sol\":28826:28988  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":29942:30129  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"NFTIncentives_flattened.sol\":30015:30031  address oldOwner */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":30034:30040  _owner */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":30015:30040  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":30059:30067  newOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":30050:30056  _owner */\n      0x07\n      0x00\n        /* \"NFTIncentives_flattened.sol\":30050:30067  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":30113:30121  newOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":30082:30122  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":30103:30111  oldOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":30082:30122  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NFTIncentives_flattened.sol\":30005:30129  {... */\n      pop\n        /* \"NFTIncentives_flattened.sol\":29942:30129  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":55008:55320  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_159:\n        /* \"NFTIncentives_flattened.sol\":55135:55136  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55115:55137  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":55115:55123  operator */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":55115:55137  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":55111:55202  if (operator == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":55182:55190  operator */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":55160:55191  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":55111:55202  if (operator == address(0)) {... */\n    tag_230:\n        /* \"NFTIncentives_flattened.sol\":55249:55257  approved */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":55211:55229  _operatorApprovals */\n      0x05\n        /* \"NFTIncentives_flattened.sol\":55211:55236  _operatorApprovals[owner] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55230:55235  owner */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":55211:55236  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTIncentives_flattened.sol\":55211:55246  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55237:55245  operator */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":55211:55246  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTIncentives_flattened.sol\":55211:55257  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":55294:55302  operator */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":55272:55313  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":55287:55292  owner */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":55272:55313  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"NFTIncentives_flattened.sol\":55304:55312  approved */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":55272:55313  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NFTIncentives_flattened.sol\":55008:55320  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":56335:57117  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_166:\n        /* \"NFTIncentives_flattened.sol\":56468:56469  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":56451:56453  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":56451:56465  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"NFTIncentives_flattened.sol\":56451:56469  to.code.length > 0 */\n      gt\n        /* \"NFTIncentives_flattened.sol\":56447:57111  if (to.code.length > 0) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":56505:56507  to */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":56489:56525  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"NFTIncentives_flattened.sol\":56526:56538  _msgSender() */\n      tag_235\n        /* \"NFTIncentives_flattened.sol\":56526:56536  _msgSender */\n      tag_125\n        /* \"NFTIncentives_flattened.sol\":56526:56538  _msgSender() */\n      jump\t// in\n    tag_235:\n        /* \"NFTIncentives_flattened.sol\":56540:56544  from */\n      dup7\n        /* \"NFTIncentives_flattened.sol\":56546:56553  tokenId */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":56555:56559  data */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":56489:56560  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_238\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      0x01\n    tag_238:\n        /* \"NFTIncentives_flattened.sol\":56485:57101  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_241\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_246\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_245)\n    tag_246:\n      0x60\n      swap2\n      pop\n    tag_245:\n      pop\n        /* \"NFTIncentives_flattened.sol\":56815:56816  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":56798:56804  reason */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":56798:56811  reason.length */\n      mload\n        /* \"NFTIncentives_flattened.sol\":56798:56816  reason.length == 0 */\n      sub\n        /* \"NFTIncentives_flattened.sol\":56794:57087  if (reason.length == 0) {... */\n      tag_247\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":56869:56871  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":56847:56872  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":56794:57087  if (reason.length == 0) {... */\n    tag_247:\n        /* \"NFTIncentives_flattened.sol\":57039:57045  reason */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":57033:57046  mload(reason) */\n      mload\n        /* \"NFTIncentives_flattened.sol\":57024:57030  reason */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":57020:57022  32 */\n      0x20\n        /* \"NFTIncentives_flattened.sol\":57016:57031  add(32, reason) */\n      add\n        /* \"NFTIncentives_flattened.sol\":57009:57047  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"NFTIncentives_flattened.sol\":56485:57101  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_241:\n        /* \"NFTIncentives_flattened.sol\":56617:56658  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"NFTIncentives_flattened.sol\":56607:56658  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTIncentives_flattened.sol\":56607:56613  retval */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":56607:56658  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":56603:56733  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_251\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":56711:56713  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":56689:56714  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":56603:56733  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_251:\n        /* \"NFTIncentives_flattened.sol\":56561:56747  returns (bytes4 retval) {... */\n      pop\n        /* \"NFTIncentives_flattened.sol\":56447:57111  if (to.code.length > 0) {... */\n    tag_234:\n        /* \"NFTIncentives_flattened.sol\":56335:57117  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":42591:42683  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_175:\n        /* \"NFTIncentives_flattened.sol\":42642:42655  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":42667:42676  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":42591:42683  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":42094:42349  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_181:\n        /* \"NFTIncentives_flattened.sol\":42158:42171  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":42183:42205  _requireOwned(tokenId) */\n      tag_255\n        /* \"NFTIncentives_flattened.sol\":42197:42204  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":42183:42196  _requireOwned */\n      tag_119\n        /* \"NFTIncentives_flattened.sol\":42183:42205  _requireOwned(tokenId) */\n      jump\t// in\n    tag_255:\n      pop\n        /* \"NFTIncentives_flattened.sol\":42216:42237  string memory baseURI */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":42240:42250  _baseURI() */\n      tag_256\n        /* \"NFTIncentives_flattened.sol\":42240:42248  _baseURI */\n      tag_175\n        /* \"NFTIncentives_flattened.sol\":42240:42250  _baseURI() */\n      jump\t// in\n    tag_256:\n        /* \"NFTIncentives_flattened.sol\":42216:42250  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":42291:42292  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":42273:42280  baseURI */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":42267:42288  bytes(baseURI).length */\n      mload\n        /* \"NFTIncentives_flattened.sol\":42267:42292  bytes(baseURI).length > 0 */\n      gt\n        /* \"NFTIncentives_flattened.sol\":42267:42342  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_257\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_258)\n    tag_257:\n        /* \"NFTIncentives_flattened.sol\":42309:42316  baseURI */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":42318:42336  tokenId.toString() */\n      tag_259\n        /* \"NFTIncentives_flattened.sol\":42318:42325  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":42318:42334  tokenId.toString */\n      tag_260\n        /* \"NFTIncentives_flattened.sol\":42318:42336  tokenId.toString() */\n      jump\t// in\n    tag_259:\n        /* \"NFTIncentives_flattened.sol\":42295:42337  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_261\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NFTIncentives_flattened.sol\":42267:42342  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_258:\n        /* \"NFTIncentives_flattened.sol\":42260:42342  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":42094:42349  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":50050:50150  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_189:\n        /* \"NFTIncentives_flattened.sol\":50117:50143  _safeMint(to, tokenId, \"\") */\n      tag_263\n        /* \"NFTIncentives_flattened.sol\":50127:50129  to */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":50131:50138  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":50117:50143  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":50117:50126  _safeMint */\n      tag_264\n        /* \"NFTIncentives_flattened.sol\":50117:50143  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_263:\n        /* \"NFTIncentives_flattened.sol\":50050:50150  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":59724:59891  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_191:\n        /* \"NFTIncentives_flattened.sol\":59837:59846  _tokenURI */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":59815:59825  _tokenURIs */\n      0x06\n        /* \"NFTIncentives_flattened.sol\":59815:59834  _tokenURIs[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":59826:59833  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":59815:59834  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTIncentives_flattened.sol\":59815:59846  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_266\n      swap2\n      swap1\n      tag_267\n      jump\t// in\n    tag_266:\n      pop\n        /* \"NFTIncentives_flattened.sol\":59861:59884  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"NFTIncentives_flattened.sol\":59876:59883  tokenId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":59861:59884  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFTIncentives_flattened.sol\":59724:59891  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":32986:33132  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_203:\n        /* \"NFTIncentives_flattened.sol\":33062:33066  bool */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":33100:33125  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"NFTIncentives_flattened.sol\":33085:33125  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTIncentives_flattened.sol\":33085:33096  interfaceId */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":33085:33125  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":33078:33125  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":32986:33132  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":45124:45239  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_206:\n        /* \"NFTIncentives_flattened.sol\":45190:45197  address */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":45216:45223  _owners */\n      0x02\n        /* \"NFTIncentives_flattened.sol\":45216:45232  _owners[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":45224:45231  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":45216:45232  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":45209:45232  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":45124:45239  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":54137:54799  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_213:\n        /* \"NFTIncentives_flattened.sol\":54297:54306  emitEvent */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":54297:54328  emitEvent || auth != address(0) */\n      dup1\n      tag_272\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":54326:54327  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":54310:54328  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":54310:54314  auth */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":54310:54328  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTIncentives_flattened.sol\":54297:54328  emitEvent || auth != address(0) */\n    tag_272:\n        /* \"NFTIncentives_flattened.sol\":54293:54753  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":54344:54357  address owner */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":54360:54382  _requireOwned(tokenId) */\n      tag_274\n        /* \"NFTIncentives_flattened.sol\":54374:54381  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":54360:54373  _requireOwned */\n      tag_119\n        /* \"NFTIncentives_flattened.sol\":54360:54382  _requireOwned(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"NFTIncentives_flattened.sol\":54344:54382  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":54526:54527  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":54510:54528  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":54510:54514  auth */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":54510:54528  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTIncentives_flattened.sol\":54510:54545  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":54541:54545  auth */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":54532:54545  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":54532:54537  owner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":54532:54545  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTIncentives_flattened.sol\":54510:54545  auth != address(0) && owner != auth */\n    tag_275:\n        /* \"NFTIncentives_flattened.sol\":54510:54579  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":54550:54579  isApprovedForAll(owner, auth) */\n      tag_277\n        /* \"NFTIncentives_flattened.sol\":54567:54572  owner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":54574:54578  auth */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":54550:54566  isApprovedForAll */\n      tag_101\n        /* \"NFTIncentives_flattened.sol\":54550:54579  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_277:\n        /* \"NFTIncentives_flattened.sol\":54549:54579  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"NFTIncentives_flattened.sol\":54510:54579  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_276:\n        /* \"NFTIncentives_flattened.sol\":54506:54648  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":54628:54632  auth */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":54606:54633  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":54506:54648  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_278:\n        /* \"NFTIncentives_flattened.sol\":54666:54675  emitEvent */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":54662:54743  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":54720:54727  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":54716:54718  to */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":54700:54728  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":54709:54714  owner */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":54700:54728  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTIncentives_flattened.sol\":54662:54743  if (emitEvent) {... */\n    tag_280:\n        /* \"NFTIncentives_flattened.sol\":54330:54753  {... */\n      pop\n        /* \"NFTIncentives_flattened.sol\":54293:54753  if (emitEvent || auth != address(0)) {... */\n    tag_273:\n        /* \"NFTIncentives_flattened.sol\":54790:54792  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":54763:54778  _tokenApprovals */\n      0x04\n        /* \"NFTIncentives_flattened.sol\":54763:54787  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":54779:54786  tokenId */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":54763:54787  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTIncentives_flattened.sol\":54763:54792  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTIncentives_flattened.sol\":54137:54799  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":46499:46867  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_218:\n        /* \"NFTIncentives_flattened.sol\":46611:46649  _isAuthorized(owner, spender, tokenId) */\n      tag_282\n        /* \"NFTIncentives_flattened.sol\":46625:46630  owner */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":46632:46639  spender */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":46641:46648  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":46611:46624  _isAuthorized */\n      tag_283\n        /* \"NFTIncentives_flattened.sol\":46611:46649  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_282:\n        /* \"NFTIncentives_flattened.sol\":46606:46861  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_284\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":46686:46687  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":46669:46688  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":46669:46674  owner */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":46669:46688  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":46665:46851  if (owner == address(0)) {... */\n      tag_285\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":46738:46745  tokenId */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":46715:46746  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":46665:46851  if (owner == address(0)) {... */\n    tag_285:\n        /* \"NFTIncentives_flattened.sol\":46819:46826  spender */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":46828:46835  tokenId */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":46792:46836  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap3\n      swap2\n      swap1\n      tag_289\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":46606:46861  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_284:\n        /* \"NFTIncentives_flattened.sol\":46499:46867  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":23606:24304  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_260:\n        /* \"NFTIncentives_flattened.sol\":23662:23675  string memory */\n      0x60\n        /* \"NFTIncentives_flattened.sol\":23711:23725  uint256 length */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":23748:23749  1 */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":23728:23745  Math.log10(value) */\n      tag_291\n        /* \"NFTIncentives_flattened.sol\":23739:23744  value */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":23728:23738  Math.log10 */\n      tag_292\n        /* \"NFTIncentives_flattened.sol\":23728:23745  Math.log10(value) */\n      jump\t// in\n    tag_291:\n        /* \"NFTIncentives_flattened.sol\":23728:23749  Math.log10(value) + 1 */\n      add\n        /* \"NFTIncentives_flattened.sol\":23711:23749  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":23763:23783  string memory buffer */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":23797:23803  length */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":23786:23804  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_293\n      jumpi\n      tag_294\n      tag_295\n      jump\t// in\n    tag_294:\n    tag_293:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_296\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_296:\n      pop\n        /* \"NFTIncentives_flattened.sol\":23763:23804  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":23818:23829  uint256 ptr */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":23944:23950  length */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":23940:23942  32 */\n      0x20\n        /* \"NFTIncentives_flattened.sol\":23936:23951  add(32, length) */\n      add\n        /* \"NFTIncentives_flattened.sol\":23928:23934  buffer */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":23924:23952  add(buffer, add(32, length)) */\n      add\n        /* \"NFTIncentives_flattened.sol\":23917:23952  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":23979:24261  while (true) {... */\n    tag_297:\n        /* \"NFTIncentives_flattened.sol\":23986:23990  true */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":23979:24261  while (true) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":24010:24015  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":24149:24159  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"NFTIncentives_flattened.sol\":24144:24146  10 */\n      0x0a\n        /* \"NFTIncentives_flattened.sol\":24137:24142  value */\n      dup7\n        /* \"NFTIncentives_flattened.sol\":24133:24147  mod(value, 10) */\n      mod\n        /* \"NFTIncentives_flattened.sol\":24128:24160  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"NFTIncentives_flattened.sol\":24123:24126  ptr */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":24115:24161  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"NFTIncentives_flattened.sol\":24205:24207  10 */\n      0x0a\n        /* \"NFTIncentives_flattened.sol\":24196:24207  value /= 10 */\n      dup6\n      dup2\n      tag_299\n      jumpi\n      tag_300\n      tag_301\n      jump\t// in\n    tag_300:\n    tag_299:\n      div\n      swap5\n      pop\n        /* \"NFTIncentives_flattened.sol\":24238:24239  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":24229:24234  value */\n      dup6\n        /* \"NFTIncentives_flattened.sol\":24229:24239  value == 0 */\n      sub\n        /* \"NFTIncentives_flattened.sol\":23979:24261  while (true) {... */\n      tag_297\n        /* \"NFTIncentives_flattened.sol\":24225:24246  if (value == 0) break */\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":23979:24261  while (true) {... */\n    tag_298:\n        /* \"NFTIncentives_flattened.sol\":24281:24287  buffer */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":24274:24287  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":23606:24304  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":50371:50553  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_264:\n        /* \"NFTIncentives_flattened.sol\":50465:50483  _mint(to, tokenId) */\n      tag_304\n        /* \"NFTIncentives_flattened.sol\":50471:50473  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":50475:50482  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":50465:50470  _mint */\n      tag_305\n        /* \"NFTIncentives_flattened.sol\":50465:50483  _mint(to, tokenId) */\n      jump\t// in\n    tag_304:\n        /* \"NFTIncentives_flattened.sol\":50493:50546  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_306\n        /* \"NFTIncentives_flattened.sol\":50524:50525  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":50528:50530  to */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":50532:50539  tokenId */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":50541:50545  data */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":50493:50515  _checkOnERC721Received */\n      tag_166\n        /* \"NFTIncentives_flattened.sol\":50493:50546  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_306:\n        /* \"NFTIncentives_flattened.sol\":50371:50553  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":45793:46065  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_283:\n        /* \"NFTIncentives_flattened.sol\":45896:45900  bool */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":45950:45951  0 */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":45931:45952  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":45931:45938  spender */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":45931:45952  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTIncentives_flattened.sol\":45931:46058  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_308\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":45978:45985  spender */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":45969:45985  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":45969:45974  owner */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":45969:45985  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":45969:46021  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_309\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":45989:46021  isApprovedForAll(owner, spender) */\n      tag_310\n        /* \"NFTIncentives_flattened.sol\":46006:46011  owner */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":46013:46020  spender */\n      dup5\n        /* \"NFTIncentives_flattened.sol\":45989:46005  isApprovedForAll */\n      tag_101\n        /* \"NFTIncentives_flattened.sol\":45989:46021  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_310:\n        /* \"NFTIncentives_flattened.sol\":45969:46021  owner == spender || isApprovedForAll(owner, spender) */\n    tag_309:\n        /* \"NFTIncentives_flattened.sol\":45969:46057  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_311\n      jumpi\n      pop\n        /* \"NFTIncentives_flattened.sol\":46050:46057  spender */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":46025:46057  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":46025:46046  _getApproved(tokenId) */\n      tag_312\n        /* \"NFTIncentives_flattened.sol\":46038:46045  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":46025:46037  _getApproved */\n      tag_121\n        /* \"NFTIncentives_flattened.sol\":46025:46046  _getApproved(tokenId) */\n      jump\t// in\n    tag_312:\n        /* \"NFTIncentives_flattened.sol\":46025:46057  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":45969:46057  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_311:\n        /* \"NFTIncentives_flattened.sol\":45931:46058  spender != address(0) &&... */\n    tag_308:\n        /* \"NFTIncentives_flattened.sol\":45912:46058  return... */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":45793:46065  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":20130:21046  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_292:\n        /* \"NFTIncentives_flattened.sol\":20183:20190  uint256 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":20202:20216  uint256 result */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":20219:20220  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":20202:20220  uint256 result = 0 */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20267:20275  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NFTIncentives_flattened.sol\":20258:20263  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20258:20275  value >= 10 ** 64 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20254:20357  if (value >= 10 ** 64) {... */\n      tag_314\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20304:20312  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NFTIncentives_flattened.sol\":20295:20312  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_315\n      jumpi\n      tag_316\n      tag_301\n      jump\t// in\n    tag_316:\n    tag_315:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20340:20342  64 */\n      0x40\n        /* \"NFTIncentives_flattened.sol\":20330:20342  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20254:20357  if (value >= 10 ** 64) {... */\n    tag_314:\n        /* \"NFTIncentives_flattened.sol\":20383:20391  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NFTIncentives_flattened.sol\":20374:20379  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20374:20391  value >= 10 ** 32 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20370:20473  if (value >= 10 ** 32) {... */\n      tag_317\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20420:20428  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NFTIncentives_flattened.sol\":20411:20428  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_318\n      jumpi\n      tag_319\n      tag_301\n      jump\t// in\n    tag_319:\n    tag_318:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20456:20458  32 */\n      0x20\n        /* \"NFTIncentives_flattened.sol\":20446:20458  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20370:20473  if (value >= 10 ** 32) {... */\n    tag_317:\n        /* \"NFTIncentives_flattened.sol\":20499:20507  10 ** 16 */\n      0x2386f26fc10000\n        /* \"NFTIncentives_flattened.sol\":20490:20495  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20490:20507  value >= 10 ** 16 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20486:20589  if (value >= 10 ** 16) {... */\n      tag_320\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20536:20544  10 ** 16 */\n      0x2386f26fc10000\n        /* \"NFTIncentives_flattened.sol\":20527:20544  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_321\n      jumpi\n      tag_322\n      tag_301\n      jump\t// in\n    tag_322:\n    tag_321:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20572:20574  16 */\n      0x10\n        /* \"NFTIncentives_flattened.sol\":20562:20574  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20486:20589  if (value >= 10 ** 16) {... */\n    tag_320:\n        /* \"NFTIncentives_flattened.sol\":20615:20622  10 ** 8 */\n      0x05f5e100\n        /* \"NFTIncentives_flattened.sol\":20606:20611  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20606:20622  value >= 10 ** 8 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20602:20702  if (value >= 10 ** 8) {... */\n      tag_323\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20651:20658  10 ** 8 */\n      0x05f5e100\n        /* \"NFTIncentives_flattened.sol\":20642:20658  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_324\n      jumpi\n      tag_325\n      tag_301\n      jump\t// in\n    tag_325:\n    tag_324:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20686:20687  8 */\n      0x08\n        /* \"NFTIncentives_flattened.sol\":20676:20687  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20602:20702  if (value >= 10 ** 8) {... */\n    tag_323:\n        /* \"NFTIncentives_flattened.sol\":20728:20735  10 ** 4 */\n      0x2710\n        /* \"NFTIncentives_flattened.sol\":20719:20724  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20719:20735  value >= 10 ** 4 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20715:20815  if (value >= 10 ** 4) {... */\n      tag_326\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20764:20771  10 ** 4 */\n      0x2710\n        /* \"NFTIncentives_flattened.sol\":20755:20771  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_327\n      jumpi\n      tag_328\n      tag_301\n      jump\t// in\n    tag_328:\n    tag_327:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20799:20800  4 */\n      0x04\n        /* \"NFTIncentives_flattened.sol\":20789:20800  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20715:20815  if (value >= 10 ** 4) {... */\n    tag_326:\n        /* \"NFTIncentives_flattened.sol\":20841:20848  10 ** 2 */\n      0x64\n        /* \"NFTIncentives_flattened.sol\":20832:20837  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20832:20848  value >= 10 ** 2 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20828:20928  if (value >= 10 ** 2) {... */\n      tag_329\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20877:20884  10 ** 2 */\n      0x64\n        /* \"NFTIncentives_flattened.sol\":20868:20884  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_330\n      jumpi\n      tag_331\n      tag_301\n      jump\t// in\n    tag_331:\n    tag_330:\n      div\n      swap3\n      pop\n        /* \"NFTIncentives_flattened.sol\":20912:20913  2 */\n      0x02\n        /* \"NFTIncentives_flattened.sol\":20902:20913  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20828:20928  if (value >= 10 ** 2) {... */\n    tag_329:\n        /* \"NFTIncentives_flattened.sol\":20954:20961  10 ** 1 */\n      0x0a\n        /* \"NFTIncentives_flattened.sol\":20945:20950  value */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":20945:20961  value >= 10 ** 1 */\n      lt\n        /* \"NFTIncentives_flattened.sol\":20941:21007  if (value >= 10 ** 1) {... */\n      tag_332\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":20991:20992  1 */\n      0x01\n        /* \"NFTIncentives_flattened.sol\":20981:20992  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":20941:21007  if (value >= 10 ** 1) {... */\n    tag_332:\n        /* \"NFTIncentives_flattened.sol\":21033:21039  result */\n      dup1\n        /* \"NFTIncentives_flattened.sol\":21026:21039  return result */\n      swap2\n      pop\n      pop\n        /* \"NFTIncentives_flattened.sol\":20130:21046  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTIncentives_flattened.sol\":49372:49699  function _mint(address to, uint256 tokenId) internal {... */\n    tag_305:\n        /* \"NFTIncentives_flattened.sol\":49453:49454  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49439:49455  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":49439:49441  to */\n      dup3\n        /* \"NFTIncentives_flattened.sol\":49439:49455  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTIncentives_flattened.sol\":49435:49522  if (to == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":49508:49509  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49478:49511  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":49435:49522  if (to == address(0)) {... */\n    tag_334:\n        /* \"NFTIncentives_flattened.sol\":49531:49552  address previousOwner */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49555:49587  _update(to, tokenId, address(0)) */\n      tag_336\n        /* \"NFTIncentives_flattened.sol\":49563:49565  to */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":49567:49574  tokenId */\n      dup4\n        /* \"NFTIncentives_flattened.sol\":49584:49585  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49555:49562  _update */\n      tag_132\n        /* \"NFTIncentives_flattened.sol\":49555:49587  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_336:\n        /* \"NFTIncentives_flattened.sol\":49531:49587  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"NFTIncentives_flattened.sol\":49626:49627  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49601:49628  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTIncentives_flattened.sol\":49601:49614  previousOwner */\n      dup2\n        /* \"NFTIncentives_flattened.sol\":49601:49628  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTIncentives_flattened.sol\":49597:49693  if (previousOwner != address(0)) {... */\n      tag_337\n      jumpi\n        /* \"NFTIncentives_flattened.sol\":49679:49680  0 */\n      0x00\n        /* \"NFTIncentives_flattened.sol\":49651:49682  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_338\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_338:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTIncentives_flattened.sol\":49597:49693  if (previousOwner != address(0)) {... */\n    tag_337:\n        /* \"NFTIncentives_flattened.sol\":49425:49699  {... */\n      pop\n        /* \"NFTIncentives_flattened.sol\":49372:49699  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_339:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_340:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_341:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_342:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_343:\n        /* \"#utility.yul\":561:584   */\n      tag_409\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_342\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_410:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_344:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_412\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_343\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_415\n      tag_340\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":833:952   */\n    tag_414:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_416\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_344\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_345:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_346:\n        /* \"#utility.yul\":1268:1289   */\n      tag_419\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_345\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_421\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_346\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_347:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_348:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_349:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_425:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_425)\n    tag_427:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_350:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_351:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_430\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_347\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2329:2400   */\n      tag_431\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_348\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_432\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_349\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2499:2528   */\n      tag_433\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_350\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_35:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_435\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_351\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_352:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_353:\n        /* \"#utility.yul\":3016:3040   */\n      tag_438\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_352\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_439:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_354:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_441\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_353\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_38:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_444\n      tag_340\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":3292:3411   */\n    tag_443:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_445\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_354\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_355:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_356:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_448\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_355\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_357:\n        /* \"#utility.yul\":3872:3896   */\n      tag_450\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_356\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_41:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_452\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_357\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_358:\n        /* \"#utility.yul\":4210:4234   */\n      tag_454\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_356\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_455:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_359:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_457\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_358\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_44:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_460\n      tag_340\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4503:4622   */\n    tag_459:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_461\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_359\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_462\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_354\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_48:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_465\n      tag_340\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5000:5119   */\n    tag_464:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_466\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_359\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_467\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_359\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_468\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_354\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5575   */\n    tag_360:\n        /* \"#utility.yul\":5543:5546   */\n      0x00\n        /* \"#utility.yul\":5564:5569   */\n      dup2\n        /* \"#utility.yul\":5557:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5581:5723   */\n    tag_361:\n        /* \"#utility.yul\":5631:5640   */\n      0x00\n        /* \"#utility.yul\":5664:5717   */\n      tag_471\n        /* \"#utility.yul\":5682:5716   */\n      tag_472\n        /* \"#utility.yul\":5691:5715   */\n      tag_473\n        /* \"#utility.yul\":5709:5714   */\n      dup5\n        /* \"#utility.yul\":5691:5715   */\n      tag_355\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":5682:5716   */\n      tag_360\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5664:5717   */\n      tag_355\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":5651:5717   */\n      swap1\n      pop\n        /* \"#utility.yul\":5581:5723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5729:5855   */\n    tag_362:\n        /* \"#utility.yul\":5779:5788   */\n      0x00\n        /* \"#utility.yul\":5812:5849   */\n      tag_475\n        /* \"#utility.yul\":5843:5848   */\n      dup3\n        /* \"#utility.yul\":5812:5849   */\n      tag_361\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5799:5849   */\n      swap1\n      pop\n        /* \"#utility.yul\":5729:5855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5861:6005   */\n    tag_363:\n        /* \"#utility.yul\":5929:5938   */\n      0x00\n        /* \"#utility.yul\":5962:5999   */\n      tag_477\n        /* \"#utility.yul\":5993:5998   */\n      dup3\n        /* \"#utility.yul\":5962:5999   */\n      tag_362\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5949:5999   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:6005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6011:6178   */\n    tag_364:\n        /* \"#utility.yul\":6116:6171   */\n      tag_479\n        /* \"#utility.yul\":6165:6170   */\n      dup2\n        /* \"#utility.yul\":6116:6171   */\n      tag_363\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6111:6114   */\n      dup3\n        /* \"#utility.yul\":6104:6172   */\n      mstore\n        /* \"#utility.yul\":6011:6178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6184:6442   */\n    tag_56:\n        /* \"#utility.yul\":6295:6299   */\n      0x00\n        /* \"#utility.yul\":6333:6335   */\n      0x20\n        /* \"#utility.yul\":6322:6331   */\n      dup3\n        /* \"#utility.yul\":6318:6336   */\n      add\n        /* \"#utility.yul\":6310:6336   */\n      swap1\n      pop\n        /* \"#utility.yul\":6346:6435   */\n      tag_481\n        /* \"#utility.yul\":6432:6433   */\n      0x00\n        /* \"#utility.yul\":6421:6430   */\n      dup4\n        /* \"#utility.yul\":6417:6434   */\n      add\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6346:6435   */\n      tag_364\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6184:6442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6448:6777   */\n    tag_63:\n        /* \"#utility.yul\":6507:6513   */\n      0x00\n        /* \"#utility.yul\":6556:6558   */\n      0x20\n        /* \"#utility.yul\":6544:6553   */\n      dup3\n        /* \"#utility.yul\":6535:6542   */\n      dup5\n        /* \"#utility.yul\":6531:6554   */\n      sub\n        /* \"#utility.yul\":6527:6559   */\n      slt\n        /* \"#utility.yul\":6524:6643   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6562:6641   */\n      tag_484\n      tag_340\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6524:6643   */\n    tag_483:\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6707:6760   */\n      tag_485\n        /* \"#utility.yul\":6752:6759   */\n      dup5\n        /* \"#utility.yul\":6743:6749   */\n      dup3\n        /* \"#utility.yul\":6732:6741   */\n      dup6\n        /* \"#utility.yul\":6728:6750   */\n      add\n        /* \"#utility.yul\":6707:6760   */\n      tag_359\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6697:6760   */\n      swap2\n      pop\n        /* \"#utility.yul\":6653:6770   */\n      pop\n        /* \"#utility.yul\":6448:6777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6783:6901   */\n    tag_365:\n        /* \"#utility.yul\":6870:6894   */\n      tag_487\n        /* \"#utility.yul\":6888:6893   */\n      dup2\n        /* \"#utility.yul\":6870:6894   */\n      tag_352\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":6865:6868   */\n      dup3\n        /* \"#utility.yul\":6858:6895   */\n      mstore\n        /* \"#utility.yul\":6783:6901   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6907:7129   */\n    tag_66:\n        /* \"#utility.yul\":7000:7004   */\n      0x00\n        /* \"#utility.yul\":7038:7040   */\n      0x20\n        /* \"#utility.yul\":7027:7036   */\n      dup3\n        /* \"#utility.yul\":7023:7041   */\n      add\n        /* \"#utility.yul\":7015:7041   */\n      swap1\n      pop\n        /* \"#utility.yul\":7051:7122   */\n      tag_489\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7108:7117   */\n      dup4\n        /* \"#utility.yul\":7104:7121   */\n      add\n        /* \"#utility.yul\":7095:7101   */\n      dup5\n        /* \"#utility.yul\":7051:7122   */\n      tag_365\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":6907:7129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7135:7251   */\n    tag_366:\n        /* \"#utility.yul\":7205:7226   */\n      tag_491\n        /* \"#utility.yul\":7220:7225   */\n      dup2\n        /* \"#utility.yul\":7205:7226   */\n      tag_345\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7198:7203   */\n      dup2\n        /* \"#utility.yul\":7195:7227   */\n      eq\n        /* \"#utility.yul\":7185:7245   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":7241:7242   */\n      0x00\n        /* \"#utility.yul\":7238:7239   */\n      dup1\n        /* \"#utility.yul\":7231:7243   */\n      revert\n        /* \"#utility.yul\":7185:7245   */\n    tag_492:\n        /* \"#utility.yul\":7135:7251   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7257:7390   */\n    tag_367:\n        /* \"#utility.yul\":7300:7305   */\n      0x00\n        /* \"#utility.yul\":7338:7344   */\n      dup2\n        /* \"#utility.yul\":7325:7345   */\n      calldataload\n        /* \"#utility.yul\":7316:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":7354:7384   */\n      tag_494\n        /* \"#utility.yul\":7378:7383   */\n      dup2\n        /* \"#utility.yul\":7354:7384   */\n      tag_366\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7257:7390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:7864   */\n    tag_80:\n        /* \"#utility.yul\":7461:7467   */\n      0x00\n        /* \"#utility.yul\":7469:7475   */\n      dup1\n        /* \"#utility.yul\":7518:7520   */\n      0x40\n        /* \"#utility.yul\":7506:7515   */\n      dup4\n        /* \"#utility.yul\":7497:7504   */\n      dup6\n        /* \"#utility.yul\":7493:7516   */\n      sub\n        /* \"#utility.yul\":7489:7521   */\n      slt\n        /* \"#utility.yul\":7486:7605   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":7524:7603   */\n      tag_497\n      tag_340\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":7486:7605   */\n    tag_496:\n        /* \"#utility.yul\":7644:7645   */\n      0x00\n        /* \"#utility.yul\":7669:7722   */\n      tag_498\n        /* \"#utility.yul\":7714:7721   */\n      dup6\n        /* \"#utility.yul\":7705:7711   */\n      dup3\n        /* \"#utility.yul\":7694:7703   */\n      dup7\n        /* \"#utility.yul\":7690:7712   */\n      add\n        /* \"#utility.yul\":7669:7722   */\n      tag_359\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7659:7722   */\n      swap3\n      pop\n        /* \"#utility.yul\":7615:7732   */\n      pop\n        /* \"#utility.yul\":7771:7773   */\n      0x20\n        /* \"#utility.yul\":7797:7847   */\n      tag_499\n        /* \"#utility.yul\":7839:7846   */\n      dup6\n        /* \"#utility.yul\":7830:7836   */\n      dup3\n        /* \"#utility.yul\":7819:7828   */\n      dup7\n        /* \"#utility.yul\":7815:7837   */\n      add\n        /* \"#utility.yul\":7797:7847   */\n      tag_367\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7787:7847   */\n      swap2\n      pop\n        /* \"#utility.yul\":7742:7857   */\n      pop\n        /* \"#utility.yul\":7396:7864   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7870:7987   */\n    tag_368:\n        /* \"#utility.yul\":7979:7980   */\n      0x00\n        /* \"#utility.yul\":7976:7977   */\n      dup1\n        /* \"#utility.yul\":7969:7981   */\n      revert\n        /* \"#utility.yul\":7993:8110   */\n    tag_369:\n        /* \"#utility.yul\":8102:8103   */\n      0x00\n        /* \"#utility.yul\":8099:8100   */\n      dup1\n        /* \"#utility.yul\":8092:8104   */\n      revert\n        /* \"#utility.yul\":8116:8296   */\n    tag_295:\n        /* \"#utility.yul\":8164:8241   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8161:8162   */\n      0x00\n        /* \"#utility.yul\":8154:8242   */\n      mstore\n        /* \"#utility.yul\":8261:8265   */\n      0x41\n        /* \"#utility.yul\":8258:8259   */\n      0x04\n        /* \"#utility.yul\":8251:8266   */\n      mstore\n        /* \"#utility.yul\":8285:8289   */\n      0x24\n        /* \"#utility.yul\":8282:8283   */\n      0x00\n        /* \"#utility.yul\":8275:8290   */\n      revert\n        /* \"#utility.yul\":8302:8583   */\n    tag_370:\n        /* \"#utility.yul\":8385:8412   */\n      tag_504\n        /* \"#utility.yul\":8407:8411   */\n      dup3\n        /* \"#utility.yul\":8385:8412   */\n      tag_350\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8377:8383   */\n      dup2\n        /* \"#utility.yul\":8373:8413   */\n      add\n        /* \"#utility.yul\":8515:8521   */\n      dup2\n        /* \"#utility.yul\":8503:8513   */\n      dup2\n        /* \"#utility.yul\":8500:8522   */\n      lt\n        /* \"#utility.yul\":8479:8497   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8467:8477   */\n      dup3\n        /* \"#utility.yul\":8464:8498   */\n      gt\n        /* \"#utility.yul\":8461:8523   */\n      or\n        /* \"#utility.yul\":8458:8546   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":8526:8544   */\n      tag_506\n      tag_295\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8458:8546   */\n    tag_505:\n        /* \"#utility.yul\":8566:8576   */\n      dup1\n        /* \"#utility.yul\":8562:8564   */\n      0x40\n        /* \"#utility.yul\":8555:8577   */\n      mstore\n        /* \"#utility.yul\":8345:8583   */\n      pop\n        /* \"#utility.yul\":8302:8583   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8589:8718   */\n    tag_371:\n        /* \"#utility.yul\":8623:8629   */\n      0x00\n        /* \"#utility.yul\":8650:8670   */\n      tag_508\n      tag_339\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":8640:8670   */\n      swap1\n      pop\n        /* \"#utility.yul\":8679:8712   */\n      tag_509\n        /* \"#utility.yul\":8707:8711   */\n      dup3\n        /* \"#utility.yul\":8699:8705   */\n      dup3\n        /* \"#utility.yul\":8679:8712   */\n      tag_370\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8589:8718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8724:9031   */\n    tag_372:\n        /* \"#utility.yul\":8785:8789   */\n      0x00\n        /* \"#utility.yul\":8875:8893   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8867:8873   */\n      dup3\n        /* \"#utility.yul\":8864:8894   */\n      gt\n        /* \"#utility.yul\":8861:8917   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":8897:8915   */\n      tag_512\n      tag_295\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8861:8917   */\n    tag_511:\n        /* \"#utility.yul\":8935:8964   */\n      tag_513\n        /* \"#utility.yul\":8957:8963   */\n      dup3\n        /* \"#utility.yul\":8935:8964   */\n      tag_350\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":8927:8964   */\n      swap1\n      pop\n        /* \"#utility.yul\":9019:9023   */\n      0x20\n        /* \"#utility.yul\":9013:9017   */\n      dup2\n        /* \"#utility.yul\":9009:9024   */\n      add\n        /* \"#utility.yul\":9001:9024   */\n      swap1\n      pop\n        /* \"#utility.yul\":8724:9031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9037:9183   */\n    tag_373:\n        /* \"#utility.yul\":9134:9140   */\n      dup3\n        /* \"#utility.yul\":9129:9132   */\n      dup2\n        /* \"#utility.yul\":9124:9127   */\n      dup4\n        /* \"#utility.yul\":9111:9141   */\n      calldatacopy\n        /* \"#utility.yul\":9175:9176   */\n      0x00\n        /* \"#utility.yul\":9166:9172   */\n      dup4\n        /* \"#utility.yul\":9161:9164   */\n      dup4\n        /* \"#utility.yul\":9157:9173   */\n      add\n        /* \"#utility.yul\":9150:9177   */\n      mstore\n        /* \"#utility.yul\":9037:9183   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9189:9612   */\n    tag_374:\n        /* \"#utility.yul\":9266:9271   */\n      0x00\n        /* \"#utility.yul\":9291:9356   */\n      tag_516\n        /* \"#utility.yul\":9307:9355   */\n      tag_517\n        /* \"#utility.yul\":9348:9354   */\n      dup5\n        /* \"#utility.yul\":9307:9355   */\n      tag_372\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9291:9356   */\n      tag_371\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9282:9356   */\n      swap1\n      pop\n        /* \"#utility.yul\":9379:9385   */\n      dup3\n        /* \"#utility.yul\":9372:9377   */\n      dup2\n        /* \"#utility.yul\":9365:9386   */\n      mstore\n        /* \"#utility.yul\":9417:9421   */\n      0x20\n        /* \"#utility.yul\":9410:9415   */\n      dup2\n        /* \"#utility.yul\":9406:9422   */\n      add\n        /* \"#utility.yul\":9455:9458   */\n      dup5\n        /* \"#utility.yul\":9446:9452   */\n      dup5\n        /* \"#utility.yul\":9441:9444   */\n      dup5\n        /* \"#utility.yul\":9437:9453   */\n      add\n        /* \"#utility.yul\":9434:9459   */\n      gt\n        /* \"#utility.yul\":9431:9543   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":9462:9541   */\n      tag_519\n      tag_369\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9431:9543   */\n    tag_518:\n        /* \"#utility.yul\":9552:9606   */\n      tag_520\n        /* \"#utility.yul\":9599:9605   */\n      dup5\n        /* \"#utility.yul\":9594:9597   */\n      dup3\n        /* \"#utility.yul\":9589:9592   */\n      dup6\n        /* \"#utility.yul\":9552:9606   */\n      tag_373\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9272:9612   */\n      pop\n        /* \"#utility.yul\":9189:9612   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9631:9969   */\n    tag_375:\n        /* \"#utility.yul\":9686:9691   */\n      0x00\n        /* \"#utility.yul\":9735:9738   */\n      dup3\n        /* \"#utility.yul\":9728:9732   */\n      0x1f\n        /* \"#utility.yul\":9720:9726   */\n      dup4\n        /* \"#utility.yul\":9716:9733   */\n      add\n        /* \"#utility.yul\":9712:9739   */\n      slt\n        /* \"#utility.yul\":9702:9824   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":9743:9822   */\n      tag_523\n      tag_368\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":9702:9824   */\n    tag_522:\n        /* \"#utility.yul\":9860:9866   */\n      dup2\n        /* \"#utility.yul\":9847:9867   */\n      calldataload\n        /* \"#utility.yul\":9885:9963   */\n      tag_524\n        /* \"#utility.yul\":9959:9962   */\n      dup5\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9944:9948   */\n      0x20\n        /* \"#utility.yul\":9936:9942   */\n      dup7\n        /* \"#utility.yul\":9932:9949   */\n      add\n        /* \"#utility.yul\":9885:9963   */\n      tag_374\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9876:9963   */\n      swap2\n      pop\n        /* \"#utility.yul\":9692:9969   */\n      pop\n        /* \"#utility.yul\":9631:9969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9975:10918   */\n    tag_87:\n        /* \"#utility.yul\":10070:10076   */\n      0x00\n        /* \"#utility.yul\":10078:10084   */\n      dup1\n        /* \"#utility.yul\":10086:10092   */\n      0x00\n        /* \"#utility.yul\":10094:10100   */\n      dup1\n        /* \"#utility.yul\":10143:10146   */\n      0x80\n        /* \"#utility.yul\":10131:10140   */\n      dup6\n        /* \"#utility.yul\":10122:10129   */\n      dup8\n        /* \"#utility.yul\":10118:10141   */\n      sub\n        /* \"#utility.yul\":10114:10147   */\n      slt\n        /* \"#utility.yul\":10111:10231   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":10150:10229   */\n      tag_527\n      tag_340\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10111:10231   */\n    tag_526:\n        /* \"#utility.yul\":10270:10271   */\n      0x00\n        /* \"#utility.yul\":10295:10348   */\n      tag_528\n        /* \"#utility.yul\":10340:10347   */\n      dup8\n        /* \"#utility.yul\":10331:10337   */\n      dup3\n        /* \"#utility.yul\":10320:10329   */\n      dup9\n        /* \"#utility.yul\":10316:10338   */\n      add\n        /* \"#utility.yul\":10295:10348   */\n      tag_359\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10285:10348   */\n      swap5\n      pop\n        /* \"#utility.yul\":10241:10358   */\n      pop\n        /* \"#utility.yul\":10397:10399   */\n      0x20\n        /* \"#utility.yul\":10423:10476   */\n      tag_529\n        /* \"#utility.yul\":10468:10475   */\n      dup8\n        /* \"#utility.yul\":10459:10465   */\n      dup3\n        /* \"#utility.yul\":10448:10457   */\n      dup9\n        /* \"#utility.yul\":10444:10466   */\n      add\n        /* \"#utility.yul\":10423:10476   */\n      tag_359\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10413:10476   */\n      swap4\n      pop\n        /* \"#utility.yul\":10368:10486   */\n      pop\n        /* \"#utility.yul\":10525:10527   */\n      0x40\n        /* \"#utility.yul\":10551:10604   */\n      tag_530\n        /* \"#utility.yul\":10596:10603   */\n      dup8\n        /* \"#utility.yul\":10587:10593   */\n      dup3\n        /* \"#utility.yul\":10576:10585   */\n      dup9\n        /* \"#utility.yul\":10572:10594   */\n      add\n        /* \"#utility.yul\":10551:10604   */\n      tag_354\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10541:10604   */\n      swap3\n      pop\n        /* \"#utility.yul\":10496:10614   */\n      pop\n        /* \"#utility.yul\":10681:10683   */\n      0x60\n        /* \"#utility.yul\":10670:10679   */\n      dup6\n        /* \"#utility.yul\":10666:10684   */\n      add\n        /* \"#utility.yul\":10653:10685   */\n      calldataload\n        /* \"#utility.yul\":10712:10730   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10704:10710   */\n      dup2\n        /* \"#utility.yul\":10701:10731   */\n      gt\n        /* \"#utility.yul\":10698:10815   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":10734:10813   */\n      tag_532\n      tag_341\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":10698:10815   */\n    tag_531:\n        /* \"#utility.yul\":10839:10901   */\n      tag_533\n        /* \"#utility.yul\":10893:10900   */\n      dup8\n        /* \"#utility.yul\":10884:10890   */\n      dup3\n        /* \"#utility.yul\":10873:10882   */\n      dup9\n        /* \"#utility.yul\":10869:10891   */\n      add\n        /* \"#utility.yul\":10839:10901   */\n      tag_375\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10829:10901   */\n      swap2\n      pop\n        /* \"#utility.yul\":10624:10911   */\n      pop\n        /* \"#utility.yul\":9975:10918   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11232   */\n    tag_376:\n        /* \"#utility.yul\":10986:10990   */\n      0x00\n        /* \"#utility.yul\":11076:11094   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11068:11074   */\n      dup3\n        /* \"#utility.yul\":11065:11095   */\n      gt\n        /* \"#utility.yul\":11062:11118   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11098:11116   */\n      tag_536\n      tag_295\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11062:11118   */\n    tag_535:\n        /* \"#utility.yul\":11136:11165   */\n      tag_537\n        /* \"#utility.yul\":11158:11164   */\n      dup3\n        /* \"#utility.yul\":11136:11165   */\n      tag_350\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11128:11165   */\n      swap1\n      pop\n        /* \"#utility.yul\":11220:11224   */\n      0x20\n        /* \"#utility.yul\":11214:11218   */\n      dup2\n        /* \"#utility.yul\":11210:11225   */\n      add\n        /* \"#utility.yul\":11202:11225   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:11232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11238:11663   */\n    tag_377:\n        /* \"#utility.yul\":11316:11321   */\n      0x00\n        /* \"#utility.yul\":11341:11407   */\n      tag_539\n        /* \"#utility.yul\":11357:11406   */\n      tag_540\n        /* \"#utility.yul\":11399:11405   */\n      dup5\n        /* \"#utility.yul\":11357:11406   */\n      tag_376\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":11341:11407   */\n      tag_371\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11332:11407   */\n      swap1\n      pop\n        /* \"#utility.yul\":11430:11436   */\n      dup3\n        /* \"#utility.yul\":11423:11428   */\n      dup2\n        /* \"#utility.yul\":11416:11437   */\n      mstore\n        /* \"#utility.yul\":11468:11472   */\n      0x20\n        /* \"#utility.yul\":11461:11466   */\n      dup2\n        /* \"#utility.yul\":11457:11473   */\n      add\n        /* \"#utility.yul\":11506:11509   */\n      dup5\n        /* \"#utility.yul\":11497:11503   */\n      dup5\n        /* \"#utility.yul\":11492:11495   */\n      dup5\n        /* \"#utility.yul\":11488:11504   */\n      add\n        /* \"#utility.yul\":11485:11510   */\n      gt\n        /* \"#utility.yul\":11482:11594   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":11513:11592   */\n      tag_542\n      tag_369\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":11482:11594   */\n    tag_541:\n        /* \"#utility.yul\":11603:11657   */\n      tag_543\n        /* \"#utility.yul\":11650:11656   */\n      dup5\n        /* \"#utility.yul\":11645:11648   */\n      dup3\n        /* \"#utility.yul\":11640:11643   */\n      dup6\n        /* \"#utility.yul\":11603:11657   */\n      tag_373\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":11322:11663   */\n      pop\n        /* \"#utility.yul\":11238:11663   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11683:12023   */\n    tag_378:\n        /* \"#utility.yul\":11739:11744   */\n      0x00\n        /* \"#utility.yul\":11788:11791   */\n      dup3\n        /* \"#utility.yul\":11781:11785   */\n      0x1f\n        /* \"#utility.yul\":11773:11779   */\n      dup4\n        /* \"#utility.yul\":11769:11786   */\n      add\n        /* \"#utility.yul\":11765:11792   */\n      slt\n        /* \"#utility.yul\":11755:11877   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":11796:11875   */\n      tag_546\n      tag_368\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":11755:11877   */\n    tag_545:\n        /* \"#utility.yul\":11913:11919   */\n      dup2\n        /* \"#utility.yul\":11900:11920   */\n      calldataload\n        /* \"#utility.yul\":11938:12017   */\n      tag_547\n        /* \"#utility.yul\":12013:12016   */\n      dup5\n        /* \"#utility.yul\":12005:12011   */\n      dup3\n        /* \"#utility.yul\":11998:12002   */\n      0x20\n        /* \"#utility.yul\":11990:11996   */\n      dup7\n        /* \"#utility.yul\":11986:12003   */\n      add\n        /* \"#utility.yul\":11938:12017   */\n      tag_377\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11929:12017   */\n      swap2\n      pop\n        /* \"#utility.yul\":11745:12023   */\n      pop\n        /* \"#utility.yul\":11683:12023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12029:12538   */\n    tag_95:\n        /* \"#utility.yul\":12098:12104   */\n      0x00\n        /* \"#utility.yul\":12147:12149   */\n      0x20\n        /* \"#utility.yul\":12135:12144   */\n      dup3\n        /* \"#utility.yul\":12126:12133   */\n      dup5\n        /* \"#utility.yul\":12122:12145   */\n      sub\n        /* \"#utility.yul\":12118:12150   */\n      slt\n        /* \"#utility.yul\":12115:12234   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":12153:12232   */\n      tag_550\n      tag_340\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":12115:12234   */\n    tag_549:\n        /* \"#utility.yul\":12301:12302   */\n      0x00\n        /* \"#utility.yul\":12290:12299   */\n      dup3\n        /* \"#utility.yul\":12286:12303   */\n      add\n        /* \"#utility.yul\":12273:12304   */\n      calldataload\n        /* \"#utility.yul\":12331:12349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12323:12329   */\n      dup2\n        /* \"#utility.yul\":12320:12350   */\n      gt\n        /* \"#utility.yul\":12317:12434   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":12353:12432   */\n      tag_552\n      tag_341\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12317:12434   */\n    tag_551:\n        /* \"#utility.yul\":12458:12521   */\n      tag_553\n        /* \"#utility.yul\":12513:12520   */\n      dup5\n        /* \"#utility.yul\":12504:12510   */\n      dup3\n        /* \"#utility.yul\":12493:12502   */\n      dup6\n        /* \"#utility.yul\":12489:12511   */\n      add\n        /* \"#utility.yul\":12458:12521   */\n      tag_378\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":12448:12521   */\n      swap2\n      pop\n        /* \"#utility.yul\":12244:12531   */\n      pop\n        /* \"#utility.yul\":12029:12538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12544:13018   */\n    tag_100:\n        /* \"#utility.yul\":12612:12618   */\n      0x00\n        /* \"#utility.yul\":12620:12626   */\n      dup1\n        /* \"#utility.yul\":12669:12671   */\n      0x40\n        /* \"#utility.yul\":12657:12666   */\n      dup4\n        /* \"#utility.yul\":12648:12655   */\n      dup6\n        /* \"#utility.yul\":12644:12667   */\n      sub\n        /* \"#utility.yul\":12640:12672   */\n      slt\n        /* \"#utility.yul\":12637:12756   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":12675:12754   */\n      tag_556\n      tag_340\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":12637:12756   */\n    tag_555:\n        /* \"#utility.yul\":12795:12796   */\n      0x00\n        /* \"#utility.yul\":12820:12873   */\n      tag_557\n        /* \"#utility.yul\":12865:12872   */\n      dup6\n        /* \"#utility.yul\":12856:12862   */\n      dup3\n        /* \"#utility.yul\":12845:12854   */\n      dup7\n        /* \"#utility.yul\":12841:12863   */\n      add\n        /* \"#utility.yul\":12820:12873   */\n      tag_359\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12810:12873   */\n      swap3\n      pop\n        /* \"#utility.yul\":12766:12883   */\n      pop\n        /* \"#utility.yul\":12922:12924   */\n      0x20\n        /* \"#utility.yul\":12948:13001   */\n      tag_558\n        /* \"#utility.yul\":12993:13000   */\n      dup6\n        /* \"#utility.yul\":12984:12990   */\n      dup3\n        /* \"#utility.yul\":12973:12982   */\n      dup7\n        /* \"#utility.yul\":12969:12991   */\n      add\n        /* \"#utility.yul\":12948:13001   */\n      tag_359\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12938:13001   */\n      swap2\n      pop\n        /* \"#utility.yul\":12893:13011   */\n      pop\n        /* \"#utility.yul\":12544:13018   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13024:13204   */\n    tag_379:\n        /* \"#utility.yul\":13072:13149   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13069:13070   */\n      0x00\n        /* \"#utility.yul\":13062:13150   */\n      mstore\n        /* \"#utility.yul\":13169:13173   */\n      0x22\n        /* \"#utility.yul\":13166:13167   */\n      0x04\n        /* \"#utility.yul\":13159:13174   */\n      mstore\n        /* \"#utility.yul\":13193:13197   */\n      0x24\n        /* \"#utility.yul\":13190:13191   */\n      0x00\n        /* \"#utility.yul\":13183:13198   */\n      revert\n        /* \"#utility.yul\":13210:13530   */\n    tag_112:\n        /* \"#utility.yul\":13254:13260   */\n      0x00\n        /* \"#utility.yul\":13291:13292   */\n      0x02\n        /* \"#utility.yul\":13285:13289   */\n      dup3\n        /* \"#utility.yul\":13281:13293   */\n      div\n        /* \"#utility.yul\":13271:13293   */\n      swap1\n      pop\n        /* \"#utility.yul\":13338:13339   */\n      0x01\n        /* \"#utility.yul\":13332:13336   */\n      dup3\n        /* \"#utility.yul\":13328:13340   */\n      and\n        /* \"#utility.yul\":13359:13377   */\n      dup1\n        /* \"#utility.yul\":13349:13430   */\n      tag_561\n      jumpi\n        /* \"#utility.yul\":13415:13419   */\n      0x7f\n        /* \"#utility.yul\":13407:13413   */\n      dup3\n        /* \"#utility.yul\":13403:13420   */\n      and\n        /* \"#utility.yul\":13393:13420   */\n      swap2\n      pop\n        /* \"#utility.yul\":13349:13430   */\n    tag_561:\n        /* \"#utility.yul\":13477:13479   */\n      0x20\n        /* \"#utility.yul\":13469:13475   */\n      dup3\n        /* \"#utility.yul\":13466:13480   */\n      lt\n        /* \"#utility.yul\":13446:13464   */\n      dup2\n        /* \"#utility.yul\":13443:13481   */\n      sub\n        /* \"#utility.yul\":13440:13524   */\n      tag_562\n      jumpi\n        /* \"#utility.yul\":13496:13514   */\n      tag_563\n      tag_379\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13440:13524   */\n    tag_562:\n        /* \"#utility.yul\":13261:13530   */\n      pop\n        /* \"#utility.yul\":13210:13530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13536:13978   */\n    tag_135:\n        /* \"#utility.yul\":13685:13689   */\n      0x00\n        /* \"#utility.yul\":13723:13725   */\n      0x60\n        /* \"#utility.yul\":13712:13721   */\n      dup3\n        /* \"#utility.yul\":13708:13726   */\n      add\n        /* \"#utility.yul\":13700:13726   */\n      swap1\n      pop\n        /* \"#utility.yul\":13736:13807   */\n      tag_565\n        /* \"#utility.yul\":13804:13805   */\n      0x00\n        /* \"#utility.yul\":13793:13802   */\n      dup4\n        /* \"#utility.yul\":13789:13806   */\n      add\n        /* \"#utility.yul\":13780:13786   */\n      dup7\n        /* \"#utility.yul\":13736:13807   */\n      tag_357\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13817:13889   */\n      tag_566\n        /* \"#utility.yul\":13885:13887   */\n      0x20\n        /* \"#utility.yul\":13874:13883   */\n      dup4\n        /* \"#utility.yul\":13870:13888   */\n      add\n        /* \"#utility.yul\":13861:13867   */\n      dup6\n        /* \"#utility.yul\":13817:13889   */\n      tag_365\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":13899:13971   */\n      tag_567\n        /* \"#utility.yul\":13967:13969   */\n      0x40\n        /* \"#utility.yul\":13956:13965   */\n      dup4\n        /* \"#utility.yul\":13952:13970   */\n      add\n        /* \"#utility.yul\":13943:13949   */\n      dup5\n        /* \"#utility.yul\":13899:13971   */\n      tag_357\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":13536:13978   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13984:14132   */\n    tag_380:\n        /* \"#utility.yul\":14086:14097   */\n      0x00\n        /* \"#utility.yul\":14123:14126   */\n      dup2\n        /* \"#utility.yul\":14108:14126   */\n      swap1\n      pop\n        /* \"#utility.yul\":13984:14132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14138:14528   */\n    tag_381:\n        /* \"#utility.yul\":14244:14247   */\n      0x00\n        /* \"#utility.yul\":14272:14311   */\n      tag_570\n        /* \"#utility.yul\":14305:14310   */\n      dup3\n        /* \"#utility.yul\":14272:14311   */\n      tag_347\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":14327:14416   */\n      tag_571\n        /* \"#utility.yul\":14409:14415   */\n      dup2\n        /* \"#utility.yul\":14404:14407   */\n      dup6\n        /* \"#utility.yul\":14327:14416   */\n      tag_380\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14320:14416   */\n      swap4\n      pop\n        /* \"#utility.yul\":14425:14490   */\n      tag_572\n        /* \"#utility.yul\":14483:14489   */\n      dup2\n        /* \"#utility.yul\":14478:14481   */\n      dup6\n        /* \"#utility.yul\":14471:14475   */\n      0x20\n        /* \"#utility.yul\":14464:14469   */\n      dup7\n        /* \"#utility.yul\":14460:14476   */\n      add\n        /* \"#utility.yul\":14425:14490   */\n      tag_349\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":14515:14521   */\n      dup1\n        /* \"#utility.yul\":14510:14513   */\n      dup5\n        /* \"#utility.yul\":14506:14522   */\n      add\n        /* \"#utility.yul\":14499:14522   */\n      swap2\n      pop\n        /* \"#utility.yul\":14248:14528   */\n      pop\n        /* \"#utility.yul\":14138:14528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14534:14969   */\n    tag_179:\n        /* \"#utility.yul\":14714:14717   */\n      0x00\n        /* \"#utility.yul\":14736:14831   */\n      tag_574\n        /* \"#utility.yul\":14827:14830   */\n      dup3\n        /* \"#utility.yul\":14818:14824   */\n      dup6\n        /* \"#utility.yul\":14736:14831   */\n      tag_381\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14729:14831   */\n      swap2\n      pop\n        /* \"#utility.yul\":14848:14943   */\n      tag_575\n        /* \"#utility.yul\":14939:14942   */\n      dup3\n        /* \"#utility.yul\":14930:14936   */\n      dup5\n        /* \"#utility.yul\":14848:14943   */\n      tag_381\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":14841:14943   */\n      swap2\n      pop\n        /* \"#utility.yul\":14960:14963   */\n      dup2\n        /* \"#utility.yul\":14953:14963   */\n      swap1\n      pop\n        /* \"#utility.yul\":14534:14969   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14975:15197   */\n    tag_382:\n        /* \"#utility.yul\":15115:15149   */\n      0x5468652063616c6c65722063616e6e6f742072756e20746869732066756e6374\n        /* \"#utility.yul\":15111:15112   */\n      0x00\n        /* \"#utility.yul\":15103:15109   */\n      dup3\n        /* \"#utility.yul\":15099:15113   */\n      add\n        /* \"#utility.yul\":15092:15150   */\n      mstore\n        /* \"#utility.yul\":15184:15189   */\n      0x696f6e0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15179:15181   */\n      0x20\n        /* \"#utility.yul\":15171:15177   */\n      dup3\n        /* \"#utility.yul\":15167:15182   */\n      add\n        /* \"#utility.yul\":15160:15190   */\n      mstore\n        /* \"#utility.yul\":14975:15197   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15203:15569   */\n    tag_383:\n        /* \"#utility.yul\":15345:15348   */\n      0x00\n        /* \"#utility.yul\":15366:15433   */\n      tag_578\n        /* \"#utility.yul\":15430:15432   */\n      0x23\n        /* \"#utility.yul\":15425:15428   */\n      dup4\n        /* \"#utility.yul\":15366:15433   */\n      tag_348\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":15359:15433   */\n      swap2\n      pop\n        /* \"#utility.yul\":15442:15535   */\n      tag_579\n        /* \"#utility.yul\":15531:15534   */\n      dup3\n        /* \"#utility.yul\":15442:15535   */\n      tag_382\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15560:15562   */\n      0x40\n        /* \"#utility.yul\":15555:15558   */\n      dup3\n        /* \"#utility.yul\":15551:15563   */\n      add\n        /* \"#utility.yul\":15544:15563   */\n      swap1\n      pop\n        /* \"#utility.yul\":15203:15569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15575:15994   */\n    tag_185:\n        /* \"#utility.yul\":15741:15745   */\n      0x00\n        /* \"#utility.yul\":15779:15781   */\n      0x20\n        /* \"#utility.yul\":15768:15777   */\n      dup3\n        /* \"#utility.yul\":15764:15782   */\n      add\n        /* \"#utility.yul\":15756:15782   */\n      swap1\n      pop\n        /* \"#utility.yul\":15828:15837   */\n      dup2\n        /* \"#utility.yul\":15822:15826   */\n      dup2\n        /* \"#utility.yul\":15818:15838   */\n      sub\n        /* \"#utility.yul\":15814:15815   */\n      0x00\n        /* \"#utility.yul\":15803:15812   */\n      dup4\n        /* \"#utility.yul\":15799:15816   */\n      add\n        /* \"#utility.yul\":15792:15839   */\n      mstore\n        /* \"#utility.yul\":15856:15987   */\n      tag_581\n        /* \"#utility.yul\":15982:15986   */\n      dup2\n        /* \"#utility.yul\":15856:15987   */\n      tag_383\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":15848:15987   */\n      swap1\n      pop\n        /* \"#utility.yul\":15575:15994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16000:16180   */\n    tag_384:\n        /* \"#utility.yul\":16048:16125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16045:16046   */\n      0x00\n        /* \"#utility.yul\":16038:16126   */\n      mstore\n        /* \"#utility.yul\":16145:16149   */\n      0x11\n        /* \"#utility.yul\":16142:16143   */\n      0x04\n        /* \"#utility.yul\":16135:16150   */\n      mstore\n        /* \"#utility.yul\":16169:16173   */\n      0x24\n        /* \"#utility.yul\":16166:16167   */\n      0x00\n        /* \"#utility.yul\":16159:16174   */\n      revert\n        /* \"#utility.yul\":16186:16419   */\n    tag_187:\n        /* \"#utility.yul\":16225:16228   */\n      0x00\n        /* \"#utility.yul\":16248:16272   */\n      tag_584\n        /* \"#utility.yul\":16266:16271   */\n      dup3\n        /* \"#utility.yul\":16248:16272   */\n      tag_352\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16239:16272   */\n      swap2\n      pop\n        /* \"#utility.yul\":16294:16360   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16287:16292   */\n      dup3\n        /* \"#utility.yul\":16284:16361   */\n      sub\n        /* \"#utility.yul\":16281:16384   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":16364:16382   */\n      tag_586\n      tag_384\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16281:16384   */\n    tag_585:\n        /* \"#utility.yul\":16411:16412   */\n      0x01\n        /* \"#utility.yul\":16404:16409   */\n      dup3\n        /* \"#utility.yul\":16400:16413   */\n      add\n        /* \"#utility.yul\":16393:16413   */\n      swap1\n      pop\n        /* \"#utility.yul\":16186:16419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16425:16523   */\n    tag_385:\n        /* \"#utility.yul\":16476:16482   */\n      0x00\n        /* \"#utility.yul\":16510:16515   */\n      dup2\n        /* \"#utility.yul\":16504:16516   */\n      mload\n        /* \"#utility.yul\":16494:16516   */\n      swap1\n      pop\n        /* \"#utility.yul\":16425:16523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16529:16697   */\n    tag_386:\n        /* \"#utility.yul\":16612:16623   */\n      0x00\n        /* \"#utility.yul\":16646:16652   */\n      dup3\n        /* \"#utility.yul\":16641:16644   */\n      dup3\n        /* \"#utility.yul\":16634:16653   */\n      mstore\n        /* \"#utility.yul\":16686:16690   */\n      0x20\n        /* \"#utility.yul\":16681:16684   */\n      dup3\n        /* \"#utility.yul\":16677:16691   */\n      add\n        /* \"#utility.yul\":16662:16691   */\n      swap1\n      pop\n        /* \"#utility.yul\":16529:16697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16703:17076   */\n    tag_387:\n        /* \"#utility.yul\":16789:16792   */\n      0x00\n        /* \"#utility.yul\":16817:16855   */\n      tag_590\n        /* \"#utility.yul\":16849:16854   */\n      dup3\n        /* \"#utility.yul\":16817:16855   */\n      tag_385\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":16871:16941   */\n      tag_591\n        /* \"#utility.yul\":16934:16940   */\n      dup2\n        /* \"#utility.yul\":16929:16932   */\n      dup6\n        /* \"#utility.yul\":16871:16941   */\n      tag_386\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":16864:16941   */\n      swap4\n      pop\n        /* \"#utility.yul\":16950:17015   */\n      tag_592\n        /* \"#utility.yul\":17008:17014   */\n      dup2\n        /* \"#utility.yul\":17003:17006   */\n      dup6\n        /* \"#utility.yul\":16996:17000   */\n      0x20\n        /* \"#utility.yul\":16989:16994   */\n      dup7\n        /* \"#utility.yul\":16985:17001   */\n      add\n        /* \"#utility.yul\":16950:17015   */\n      tag_349\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":17040:17069   */\n      tag_593\n        /* \"#utility.yul\":17062:17068   */\n      dup2\n        /* \"#utility.yul\":17040:17069   */\n      tag_350\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":17035:17038   */\n      dup5\n        /* \"#utility.yul\":17031:17070   */\n      add\n        /* \"#utility.yul\":17024:17070   */\n      swap2\n      pop\n        /* \"#utility.yul\":16793:17076   */\n      pop\n        /* \"#utility.yul\":16703:17076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17082:17722   */\n    tag_237:\n        /* \"#utility.yul\":17277:17281   */\n      0x00\n        /* \"#utility.yul\":17315:17318   */\n      0x80\n        /* \"#utility.yul\":17304:17313   */\n      dup3\n        /* \"#utility.yul\":17300:17319   */\n      add\n        /* \"#utility.yul\":17292:17319   */\n      swap1\n      pop\n        /* \"#utility.yul\":17329:17400   */\n      tag_595\n        /* \"#utility.yul\":17397:17398   */\n      0x00\n        /* \"#utility.yul\":17386:17395   */\n      dup4\n        /* \"#utility.yul\":17382:17399   */\n      add\n        /* \"#utility.yul\":17373:17379   */\n      dup8\n        /* \"#utility.yul\":17329:17400   */\n      tag_357\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17410:17482   */\n      tag_596\n        /* \"#utility.yul\":17478:17480   */\n      0x20\n        /* \"#utility.yul\":17467:17476   */\n      dup4\n        /* \"#utility.yul\":17463:17481   */\n      add\n        /* \"#utility.yul\":17454:17460   */\n      dup7\n        /* \"#utility.yul\":17410:17482   */\n      tag_357\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":17492:17564   */\n      tag_597\n        /* \"#utility.yul\":17560:17562   */\n      0x40\n        /* \"#utility.yul\":17549:17558   */\n      dup4\n        /* \"#utility.yul\":17545:17563   */\n      add\n        /* \"#utility.yul\":17536:17542   */\n      dup6\n        /* \"#utility.yul\":17492:17564   */\n      tag_365\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":17611:17620   */\n      dup2\n        /* \"#utility.yul\":17605:17609   */\n      dup2\n        /* \"#utility.yul\":17601:17621   */\n      sub\n        /* \"#utility.yul\":17596:17598   */\n      0x60\n        /* \"#utility.yul\":17585:17594   */\n      dup4\n        /* \"#utility.yul\":17581:17599   */\n      add\n        /* \"#utility.yul\":17574:17622   */\n      mstore\n        /* \"#utility.yul\":17639:17715   */\n      tag_598\n        /* \"#utility.yul\":17710:17714   */\n      dup2\n        /* \"#utility.yul\":17701:17707   */\n      dup5\n        /* \"#utility.yul\":17639:17715   */\n      tag_387\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":17631:17715   */\n      swap1\n      pop\n        /* \"#utility.yul\":17082:17722   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17728:17869   */\n    tag_388:\n        /* \"#utility.yul\":17784:17789   */\n      0x00\n        /* \"#utility.yul\":17815:17821   */\n      dup2\n        /* \"#utility.yul\":17809:17822   */\n      mload\n        /* \"#utility.yul\":17800:17822   */\n      swap1\n      pop\n        /* \"#utility.yul\":17831:17863   */\n      tag_600\n        /* \"#utility.yul\":17857:17862   */\n      dup2\n        /* \"#utility.yul\":17831:17863   */\n      tag_343\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":17728:17869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17875:18224   */\n    tag_240:\n        /* \"#utility.yul\":17944:17950   */\n      0x00\n        /* \"#utility.yul\":17993:17995   */\n      0x20\n        /* \"#utility.yul\":17981:17990   */\n      dup3\n        /* \"#utility.yul\":17972:17979   */\n      dup5\n        /* \"#utility.yul\":17968:17991   */\n      sub\n        /* \"#utility.yul\":17964:17996   */\n      slt\n        /* \"#utility.yul\":17961:18080   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":17999:18078   */\n      tag_603\n      tag_340\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":17961:18080   */\n    tag_602:\n        /* \"#utility.yul\":18119:18120   */\n      0x00\n        /* \"#utility.yul\":18144:18207   */\n      tag_604\n        /* \"#utility.yul\":18199:18206   */\n      dup5\n        /* \"#utility.yul\":18190:18196   */\n      dup3\n        /* \"#utility.yul\":18179:18188   */\n      dup6\n        /* \"#utility.yul\":18175:18197   */\n      add\n        /* \"#utility.yul\":18144:18207   */\n      tag_388\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":18134:18207   */\n      swap2\n      pop\n        /* \"#utility.yul\":18090:18217   */\n      pop\n        /* \"#utility.yul\":17875:18224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18230:18371   */\n    tag_389:\n        /* \"#utility.yul\":18279:18283   */\n      0x00\n        /* \"#utility.yul\":18302:18305   */\n      dup2\n        /* \"#utility.yul\":18294:18305   */\n      swap1\n      pop\n        /* \"#utility.yul\":18325:18328   */\n      dup2\n        /* \"#utility.yul\":18322:18323   */\n      0x00\n        /* \"#utility.yul\":18315:18329   */\n      mstore\n        /* \"#utility.yul\":18359:18363   */\n      0x20\n        /* \"#utility.yul\":18356:18357   */\n      0x00\n        /* \"#utility.yul\":18346:18364   */\n      keccak256\n        /* \"#utility.yul\":18338:18364   */\n      swap1\n      pop\n        /* \"#utility.yul\":18230:18371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18377:18470   */\n    tag_390:\n        /* \"#utility.yul\":18414:18420   */\n      0x00\n        /* \"#utility.yul\":18461:18463   */\n      0x20\n        /* \"#utility.yul\":18456:18458   */\n      0x1f\n        /* \"#utility.yul\":18449:18454   */\n      dup4\n        /* \"#utility.yul\":18445:18459   */\n      add\n        /* \"#utility.yul\":18441:18464   */\n      div\n        /* \"#utility.yul\":18431:18464   */\n      swap1\n      pop\n        /* \"#utility.yul\":18377:18470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18476:18583   */\n    tag_391:\n        /* \"#utility.yul\":18520:18528   */\n      0x00\n        /* \"#utility.yul\":18570:18575   */\n      dup3\n        /* \"#utility.yul\":18564:18568   */\n      dup3\n        /* \"#utility.yul\":18560:18576   */\n      shl\n        /* \"#utility.yul\":18539:18576   */\n      swap1\n      pop\n        /* \"#utility.yul\":18476:18583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18589:18982   */\n    tag_392:\n        /* \"#utility.yul\":18658:18664   */\n      0x00\n        /* \"#utility.yul\":18708:18709   */\n      0x08\n        /* \"#utility.yul\":18696:18706   */\n      dup4\n        /* \"#utility.yul\":18692:18710   */\n      mul\n        /* \"#utility.yul\":18731:18828   */\n      tag_609\n        /* \"#utility.yul\":18761:18827   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18750:18759   */\n      dup3\n        /* \"#utility.yul\":18731:18828   */\n      tag_391\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":18849:18888   */\n      tag_610\n        /* \"#utility.yul\":18879:18887   */\n      dup7\n        /* \"#utility.yul\":18868:18877   */\n      dup4\n        /* \"#utility.yul\":18849:18888   */\n      tag_391\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":18837:18888   */\n      swap6\n      pop\n        /* \"#utility.yul\":18921:18925   */\n      dup1\n        /* \"#utility.yul\":18917:18926   */\n      not\n        /* \"#utility.yul\":18910:18915   */\n      dup5\n        /* \"#utility.yul\":18906:18927   */\n      and\n        /* \"#utility.yul\":18897:18927   */\n      swap4\n      pop\n        /* \"#utility.yul\":18970:18974   */\n      dup1\n        /* \"#utility.yul\":18960:18968   */\n      dup7\n        /* \"#utility.yul\":18956:18975   */\n      and\n        /* \"#utility.yul\":18949:18954   */\n      dup5\n        /* \"#utility.yul\":18946:18976   */\n      or\n        /* \"#utility.yul\":18936:18976   */\n      swap3\n      pop\n        /* \"#utility.yul\":18665:18982   */\n      pop\n      pop\n        /* \"#utility.yul\":18589:18982   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18988:19130   */\n    tag_393:\n        /* \"#utility.yul\":19038:19047   */\n      0x00\n        /* \"#utility.yul\":19071:19124   */\n      tag_612\n        /* \"#utility.yul\":19089:19123   */\n      tag_613\n        /* \"#utility.yul\":19098:19122   */\n      tag_614\n        /* \"#utility.yul\":19116:19121   */\n      dup5\n        /* \"#utility.yul\":19098:19122   */\n      tag_352\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":19089:19123   */\n      tag_360\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":19071:19124   */\n      tag_352\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":19058:19124   */\n      swap1\n      pop\n        /* \"#utility.yul\":18988:19130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19136:19211   */\n    tag_394:\n        /* \"#utility.yul\":19179:19182   */\n      0x00\n        /* \"#utility.yul\":19200:19205   */\n      dup2\n        /* \"#utility.yul\":19193:19205   */\n      swap1\n      pop\n        /* \"#utility.yul\":19136:19211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19217:19486   */\n    tag_395:\n        /* \"#utility.yul\":19327:19366   */\n      tag_617\n        /* \"#utility.yul\":19358:19365   */\n      dup4\n        /* \"#utility.yul\":19327:19366   */\n      tag_393\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":19388:19479   */\n      tag_618\n        /* \"#utility.yul\":19437:19478   */\n      tag_619\n        /* \"#utility.yul\":19461:19477   */\n      dup3\n        /* \"#utility.yul\":19437:19478   */\n      tag_394\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19429:19435   */\n      dup5\n        /* \"#utility.yul\":19422:19426   */\n      dup5\n        /* \"#utility.yul\":19416:19427   */\n      sload\n        /* \"#utility.yul\":19388:19479   */\n      tag_392\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19382:19386   */\n      dup3\n        /* \"#utility.yul\":19375:19480   */\n      sstore\n        /* \"#utility.yul\":19293:19486   */\n      pop\n        /* \"#utility.yul\":19217:19486   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19492:19565   */\n    tag_396:\n        /* \"#utility.yul\":19537:19540   */\n      0x00\n        /* \"#utility.yul\":19492:19565   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19571:19760   */\n    tag_397:\n        /* \"#utility.yul\":19648:19680   */\n      tag_622\n      tag_396\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":19689:19754   */\n      tag_623\n        /* \"#utility.yul\":19747:19753   */\n      dup2\n        /* \"#utility.yul\":19739:19745   */\n      dup5\n        /* \"#utility.yul\":19733:19737   */\n      dup5\n        /* \"#utility.yul\":19689:19754   */\n      tag_395\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":19624:19760   */\n      pop\n        /* \"#utility.yul\":19571:19760   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19766:19952   */\n    tag_398:\n        /* \"#utility.yul\":19826:19946   */\n    tag_625:\n        /* \"#utility.yul\":19843:19846   */\n      dup2\n        /* \"#utility.yul\":19836:19841   */\n      dup2\n        /* \"#utility.yul\":19833:19847   */\n      lt\n        /* \"#utility.yul\":19826:19946   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":19897:19936   */\n      tag_628\n        /* \"#utility.yul\":19934:19935   */\n      0x00\n        /* \"#utility.yul\":19927:19932   */\n      dup3\n        /* \"#utility.yul\":19897:19936   */\n      tag_397\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":19870:19871   */\n      0x01\n        /* \"#utility.yul\":19863:19868   */\n      dup2\n        /* \"#utility.yul\":19859:19872   */\n      add\n        /* \"#utility.yul\":19850:19872   */\n      swap1\n      pop\n        /* \"#utility.yul\":19826:19946   */\n      jump(tag_625)\n    tag_627:\n        /* \"#utility.yul\":19766:19952   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19958:20501   */\n    tag_399:\n        /* \"#utility.yul\":20059:20061   */\n      0x1f\n        /* \"#utility.yul\":20054:20057   */\n      dup3\n        /* \"#utility.yul\":20051:20062   */\n      gt\n        /* \"#utility.yul\":20048:20494   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":20093:20131   */\n      tag_631\n        /* \"#utility.yul\":20125:20130   */\n      dup2\n        /* \"#utility.yul\":20093:20131   */\n      tag_389\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20177:20206   */\n      tag_632\n        /* \"#utility.yul\":20195:20205   */\n      dup5\n        /* \"#utility.yul\":20177:20206   */\n      tag_390\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":20167:20175   */\n      dup2\n        /* \"#utility.yul\":20163:20207   */\n      add\n        /* \"#utility.yul\":20360:20362   */\n      0x20\n        /* \"#utility.yul\":20348:20358   */\n      dup6\n        /* \"#utility.yul\":20345:20363   */\n      lt\n        /* \"#utility.yul\":20342:20391   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":20381:20389   */\n      dup2\n        /* \"#utility.yul\":20366:20389   */\n      swap1\n      pop\n        /* \"#utility.yul\":20342:20391   */\n    tag_633:\n        /* \"#utility.yul\":20404:20484   */\n      tag_634\n        /* \"#utility.yul\":20460:20482   */\n      tag_635\n        /* \"#utility.yul\":20478:20481   */\n      dup6\n        /* \"#utility.yul\":20460:20482   */\n      tag_390\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":20450:20458   */\n      dup4\n        /* \"#utility.yul\":20446:20483   */\n      add\n        /* \"#utility.yul\":20433:20444   */\n      dup3\n        /* \"#utility.yul\":20404:20484   */\n      tag_398\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":20063:20494   */\n      pop\n      pop\n        /* \"#utility.yul\":20048:20494   */\n    tag_630:\n        /* \"#utility.yul\":19958:20501   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20507:20624   */\n    tag_400:\n        /* \"#utility.yul\":20561:20569   */\n      0x00\n        /* \"#utility.yul\":20611:20616   */\n      dup3\n        /* \"#utility.yul\":20605:20609   */\n      dup3\n        /* \"#utility.yul\":20601:20617   */\n      shr\n        /* \"#utility.yul\":20580:20617   */\n      swap1\n      pop\n        /* \"#utility.yul\":20507:20624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20630:20799   */\n    tag_401:\n        /* \"#utility.yul\":20674:20680   */\n      0x00\n        /* \"#utility.yul\":20707:20758   */\n      tag_638\n        /* \"#utility.yul\":20755:20756   */\n      0x00\n        /* \"#utility.yul\":20751:20757   */\n      not\n        /* \"#utility.yul\":20743:20748   */\n      dup5\n        /* \"#utility.yul\":20740:20741   */\n      0x08\n        /* \"#utility.yul\":20736:20749   */\n      mul\n        /* \"#utility.yul\":20707:20758   */\n      tag_400\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":20703:20759   */\n      not\n        /* \"#utility.yul\":20788:20792   */\n      dup1\n        /* \"#utility.yul\":20782:20786   */\n      dup4\n        /* \"#utility.yul\":20778:20793   */\n      and\n        /* \"#utility.yul\":20768:20793   */\n      swap2\n      pop\n        /* \"#utility.yul\":20681:20799   */\n      pop\n        /* \"#utility.yul\":20630:20799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20804:21099   */\n    tag_402:\n        /* \"#utility.yul\":20880:20884   */\n      0x00\n        /* \"#utility.yul\":21026:21055   */\n      tag_640\n        /* \"#utility.yul\":21051:21054   */\n      dup4\n        /* \"#utility.yul\":21045:21049   */\n      dup4\n        /* \"#utility.yul\":21026:21055   */\n      tag_401\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":21018:21055   */\n      swap2\n      pop\n        /* \"#utility.yul\":21088:21091   */\n      dup3\n        /* \"#utility.yul\":21085:21086   */\n      0x02\n        /* \"#utility.yul\":21081:21092   */\n      mul\n        /* \"#utility.yul\":21075:21079   */\n      dup3\n        /* \"#utility.yul\":21072:21093   */\n      or\n        /* \"#utility.yul\":21064:21093   */\n      swap1\n      pop\n        /* \"#utility.yul\":20804:21099   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21104:22499   */\n    tag_267:\n        /* \"#utility.yul\":21221:21258   */\n      tag_642\n        /* \"#utility.yul\":21254:21257   */\n      dup3\n        /* \"#utility.yul\":21221:21258   */\n      tag_347\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":21323:21341   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":21315:21321   */\n      dup2\n        /* \"#utility.yul\":21312:21342   */\n      gt\n        /* \"#utility.yul\":21309:21365   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":21345:21363   */\n      tag_644\n      tag_295\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":21309:21365   */\n    tag_643:\n        /* \"#utility.yul\":21389:21427   */\n      tag_645\n        /* \"#utility.yul\":21421:21425   */\n      dup3\n        /* \"#utility.yul\":21415:21426   */\n      sload\n        /* \"#utility.yul\":21389:21427   */\n      tag_112\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":21474:21541   */\n      tag_646\n        /* \"#utility.yul\":21534:21540   */\n      dup3\n        /* \"#utility.yul\":21526:21532   */\n      dup3\n        /* \"#utility.yul\":21520:21524   */\n      dup6\n        /* \"#utility.yul\":21474:21541   */\n      tag_399\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":21568:21569   */\n      0x00\n        /* \"#utility.yul\":21592:21596   */\n      0x20\n        /* \"#utility.yul\":21579:21596   */\n      swap1\n      pop\n        /* \"#utility.yul\":21624:21626   */\n      0x1f\n        /* \"#utility.yul\":21616:21622   */\n      dup4\n        /* \"#utility.yul\":21613:21627   */\n      gt\n        /* \"#utility.yul\":21641:21642   */\n      0x01\n        /* \"#utility.yul\":21636:22254   */\n      dup2\n      eq\n      tag_648\n      jumpi\n        /* \"#utility.yul\":22298:22299   */\n      0x00\n        /* \"#utility.yul\":22315:22321   */\n      dup5\n        /* \"#utility.yul\":22312:22389   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":22364:22373   */\n      dup3\n        /* \"#utility.yul\":22359:22362   */\n      dup8\n        /* \"#utility.yul\":22355:22374   */\n      add\n        /* \"#utility.yul\":22349:22375   */\n      mload\n        /* \"#utility.yul\":22340:22375   */\n      swap1\n      pop\n        /* \"#utility.yul\":22312:22389   */\n    tag_649:\n        /* \"#utility.yul\":22415:22482   */\n      tag_650\n        /* \"#utility.yul\":22475:22481   */\n      dup6\n        /* \"#utility.yul\":22468:22473   */\n      dup3\n        /* \"#utility.yul\":22415:22482   */\n      tag_402\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":22409:22413   */\n      dup7\n        /* \"#utility.yul\":22402:22483   */\n      sstore\n        /* \"#utility.yul\":22271:22493   */\n      pop\n        /* \"#utility.yul\":21606:22493   */\n      jump(tag_647)\n        /* \"#utility.yul\":21636:22254   */\n    tag_648:\n        /* \"#utility.yul\":21688:21692   */\n      0x1f\n        /* \"#utility.yul\":21684:21693   */\n      not\n        /* \"#utility.yul\":21676:21682   */\n      dup5\n        /* \"#utility.yul\":21672:21694   */\n      and\n        /* \"#utility.yul\":21722:21759   */\n      tag_651\n        /* \"#utility.yul\":21754:21758   */\n      dup7\n        /* \"#utility.yul\":21722:21759   */\n      tag_389\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":21781:21782   */\n      0x00\n        /* \"#utility.yul\":21795:22003   */\n    tag_652:\n        /* \"#utility.yul\":21809:21816   */\n      dup3\n        /* \"#utility.yul\":21806:21807   */\n      dup2\n        /* \"#utility.yul\":21803:21817   */\n      lt\n        /* \"#utility.yul\":21795:22003   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":21888:21897   */\n      dup5\n        /* \"#utility.yul\":21883:21886   */\n      dup10\n        /* \"#utility.yul\":21879:21898   */\n      add\n        /* \"#utility.yul\":21873:21899   */\n      mload\n        /* \"#utility.yul\":21865:21871   */\n      dup3\n        /* \"#utility.yul\":21858:21900   */\n      sstore\n        /* \"#utility.yul\":21939:21940   */\n      0x01\n        /* \"#utility.yul\":21931:21937   */\n      dup3\n        /* \"#utility.yul\":21927:21941   */\n      add\n        /* \"#utility.yul\":21917:21941   */\n      swap2\n      pop\n        /* \"#utility.yul\":21986:21988   */\n      0x20\n        /* \"#utility.yul\":21975:21984   */\n      dup6\n        /* \"#utility.yul\":21971:21989   */\n      add\n        /* \"#utility.yul\":21958:21989   */\n      swap5\n      pop\n        /* \"#utility.yul\":21832:21836   */\n      0x20\n        /* \"#utility.yul\":21829:21830   */\n      dup2\n        /* \"#utility.yul\":21825:21837   */\n      add\n        /* \"#utility.yul\":21820:21837   */\n      swap1\n      pop\n        /* \"#utility.yul\":21795:22003   */\n      jump(tag_652)\n    tag_654:\n        /* \"#utility.yul\":22031:22037   */\n      dup7\n        /* \"#utility.yul\":22022:22029   */\n      dup4\n        /* \"#utility.yul\":22019:22038   */\n      lt\n        /* \"#utility.yul\":22016:22195   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":22089:22098   */\n      dup5\n        /* \"#utility.yul\":22084:22087   */\n      dup10\n        /* \"#utility.yul\":22080:22099   */\n      add\n        /* \"#utility.yul\":22074:22100   */\n      mload\n        /* \"#utility.yul\":22132:22180   */\n      tag_656\n        /* \"#utility.yul\":22174:22178   */\n      0x1f\n        /* \"#utility.yul\":22166:22172   */\n      dup10\n        /* \"#utility.yul\":22162:22179   */\n      and\n        /* \"#utility.yul\":22151:22160   */\n      dup3\n        /* \"#utility.yul\":22132:22180   */\n      tag_401\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":22124:22130   */\n      dup4\n        /* \"#utility.yul\":22117:22181   */\n      sstore\n        /* \"#utility.yul\":22039:22195   */\n      pop\n        /* \"#utility.yul\":22016:22195   */\n    tag_655:\n        /* \"#utility.yul\":22241:22242   */\n      0x01\n        /* \"#utility.yul\":22237:22238   */\n      0x02\n        /* \"#utility.yul\":22229:22235   */\n      dup9\n        /* \"#utility.yul\":22225:22239   */\n      mul\n        /* \"#utility.yul\":22221:22243   */\n      add\n        /* \"#utility.yul\":22215:22219   */\n      dup9\n        /* \"#utility.yul\":22208:22244   */\n      sstore\n        /* \"#utility.yul\":21643:22254   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21606:22493   */\n    tag_647:\n      pop\n        /* \"#utility.yul\":21196:22499   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21104:22499   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22505:22837   */\n    tag_289:\n        /* \"#utility.yul\":22626:22630   */\n      0x00\n        /* \"#utility.yul\":22664:22666   */\n      0x40\n        /* \"#utility.yul\":22653:22662   */\n      dup3\n        /* \"#utility.yul\":22649:22667   */\n      add\n        /* \"#utility.yul\":22641:22667   */\n      swap1\n      pop\n        /* \"#utility.yul\":22677:22748   */\n      tag_658\n        /* \"#utility.yul\":22745:22746   */\n      0x00\n        /* \"#utility.yul\":22734:22743   */\n      dup4\n        /* \"#utility.yul\":22730:22747   */\n      add\n        /* \"#utility.yul\":22721:22727   */\n      dup6\n        /* \"#utility.yul\":22677:22748   */\n      tag_357\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":22758:22830   */\n      tag_659\n        /* \"#utility.yul\":22826:22828   */\n      0x20\n        /* \"#utility.yul\":22815:22824   */\n      dup4\n        /* \"#utility.yul\":22811:22829   */\n      add\n        /* \"#utility.yul\":22802:22808   */\n      dup5\n        /* \"#utility.yul\":22758:22830   */\n      tag_365\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":22505:22837   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22843:23023   */\n    tag_301:\n        /* \"#utility.yul\":22891:22968   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22888:22889   */\n      0x00\n        /* \"#utility.yul\":22881:22969   */\n      mstore\n        /* \"#utility.yul\":22988:22992   */\n      0x12\n        /* \"#utility.yul\":22985:22986   */\n      0x04\n        /* \"#utility.yul\":22978:22993   */\n      mstore\n        /* \"#utility.yul\":23012:23016   */\n      0x24\n        /* \"#utility.yul\":23009:23010   */\n      0x00\n        /* \"#utility.yul\":23002:23017   */\n      revert\n\n    auxdata: 0xa2646970667358221220eaea9ea8e823e8af3cc66426d6c856cea0b892d3d003c41d50550939ea54537c64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1620": {
									"entryPoint": null,
									"id": 1620,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1980": {
									"entryPoint": null,
									"id": 1980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3081": {
									"entryPoint": null,
									"id": 3081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_1716": {
									"entryPoint": 302,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5817:1",
										"nodeType": "YulBlock",
										"src": "0:5817:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											},
											{
												"body": {
													"nativeSrc": "5279:81:1",
													"nodeType": "YulBlock",
													"src": "5279:81:1",
													"statements": [
														{
															"nativeSrc": "5289:65:1",
															"nodeType": "YulAssignment",
															"src": "5289:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:1",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:1"
																},
																"nativeSrc": "5300:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:1",
														"nodeType": "YulTypedName",
														"src": "5261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:1",
														"nodeType": "YulTypedName",
														"src": "5271:7:1",
														"type": ""
													}
												],
												"src": "5234:126:1"
											},
											{
												"body": {
													"nativeSrc": "5411:51:1",
													"nodeType": "YulBlock",
													"src": "5411:51:1",
													"statements": [
														{
															"nativeSrc": "5421:35:1",
															"nodeType": "YulAssignment",
															"src": "5421:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:1"
																},
																"nativeSrc": "5432:24:1",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:1",
														"nodeType": "YulTypedName",
														"src": "5393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:1",
														"nodeType": "YulTypedName",
														"src": "5403:7:1",
														"type": ""
													}
												],
												"src": "5366:96:1"
											},
											{
												"body": {
													"nativeSrc": "5533:53:1",
													"nodeType": "YulBlock",
													"src": "5533:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:1"
																		},
																		"nativeSrc": "5555:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:1"
																},
																"nativeSrc": "5543:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:1"
															},
															"nativeSrc": "5543:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:1",
														"nodeType": "YulTypedName",
														"src": "5521:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:1",
														"nodeType": "YulTypedName",
														"src": "5528:3:1",
														"type": ""
													}
												],
												"src": "5468:118:1"
											},
											{
												"body": {
													"nativeSrc": "5690:124:1",
													"nodeType": "YulBlock",
													"src": "5690:124:1",
													"statements": [
														{
															"nativeSrc": "5700:26:1",
															"nodeType": "YulAssignment",
															"src": "5700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:1"
																},
																"nativeSrc": "5708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:1"
																		},
																		"nativeSrc": "5789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:1"
																},
																"nativeSrc": "5736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:1"
															},
															"nativeSrc": "5736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:1",
														"nodeType": "YulTypedName",
														"src": "5662:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:1",
														"nodeType": "YulTypedName",
														"src": "5674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:1",
														"nodeType": "YulTypedName",
														"src": "5685:4:1",
														"type": ""
													}
												],
												"src": "5592:222:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b50336040518060400160405280600a81526020017f496e63656e7469766573000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f494e465400000000000000000000000000000000000000000000000000000000815250815f90816200008e919062000455565b508060019081620000a0919062000455565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000116575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200010d91906200057c565b60405180910390fd5b62000127816200012e60201b60201c565b5062000597565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200026d57607f821691505b60208210810362000283576200028262000228565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002aa565b620002f38683620002aa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200033d6200033762000331846200030b565b62000314565b6200030b565b9050919050565b5f819050919050565b62000358836200031d565b62000370620003678262000344565b848454620002b6565b825550505050565b5f90565b6200038662000378565b620003938184846200034d565b505050565b5b81811015620003ba57620003ae5f826200037c565b60018101905062000399565b5050565b601f8211156200040957620003d38162000289565b620003de846200029b565b81016020851015620003ee578190505b62000406620003fd856200029b565b83018262000398565b50505b505050565b5f82821c905092915050565b5f6200042b5f19846008026200040e565b1980831691505092915050565b5f6200044583836200041a565b9150826002028217905092915050565b6200046082620001f1565b67ffffffffffffffff8111156200047c576200047b620001fb565b5b62000488825462000255565b62000495828285620003be565b5f60209050601f831160018114620004cb575f8415620004b6578287015190505b620004c2858262000438565b86555062000531565b601f198416620004db8662000289565b5f5b828110156200050457848901518255600182019150602085019450602081019050620004dd565b8683101562000524578489015162000520601f8916826200041a565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620005648262000539565b9050919050565b620005768162000558565b82525050565b5f602082019050620005915f8301846200056b565b92915050565b6127fd80620005a55f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c80638da5cb5b116100ab578063b88d4fde1161006f578063b88d4fde1461031a578063c87b56dd14610336578063d85d3d2714610366578063e985e9c514610396578063f2fde38b146103c65761012a565b80638da5cb5b1461028857806395d89b41146102a65780639f181b5e146102c4578063a22cb465146102e2578063b876e3b6146102fe5761012a565b806342842e0e116100f257806342842e0e146101e45780635f53575f146102005780636352211e1461021e57806370a082311461024e578063715018a61461027e5761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac57806323b872dd146101c8575b5f80fd5b61014860048036038101906101439190611bd0565b6103e2565b6040516101559190611c15565b60405180910390f35b610166610442565b6040516101739190611cb8565b60405180910390f35b61019660048036038101906101919190611d0b565b6104d1565b6040516101a39190611d75565b60405180910390f35b6101c660048036038101906101c19190611db8565b6104ec565b005b6101e260048036038101906101dd9190611df6565b610502565b005b6101fe60048036038101906101f99190611df6565b610601565b005b610208610620565b6040516102159190611ea1565b60405180910390f35b61023860048036038101906102339190611d0b565b610645565b6040516102459190611d75565b60405180910390f35b61026860048036038101906102639190611eba565b610656565b6040516102759190611ef4565b60405180910390f35b61028661070c565b005b61029061071f565b60405161029d9190611d75565b60405180910390f35b6102ae610747565b6040516102bb9190611cb8565b60405180910390f35b6102cc6107d7565b6040516102d99190611ef4565b60405180910390f35b6102fc60048036038101906102f79190611f37565b6107dd565b005b61031860048036038101906103139190611eba565b6107f3565b005b610334600480360381019061032f91906120a1565b61083e565b005b610350600480360381019061034b9190611d0b565b61085b565b60405161035d9190611cb8565b60405180910390f35b610380600480360381019061037b91906121bf565b610966565b60405161038d9190611ef4565b60405180910390f35b6103b060048036038101906103ab9190612206565b610a2f565b6040516103bd9190611c15565b60405180910390f35b6103e060048036038101906103db9190611eba565b610abd565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043b575061043a82610b41565b5b9050919050565b60605f805461045090612271565b80601f016020809104026020016040519081016040528092919081815260200182805461047c90612271565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b5f6104db82610c22565b506104e582610ca8565b9050919050565b6104fe82826104f9610ce1565b610ce8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610572575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105699190611d75565b60405180910390fd5b5f6105858383610580610ce1565b610cfa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fb578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f2939291906122a1565b60405180910390fd5b50505050565b61061b83838360405180602001604052805f81525061083e565b505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61064f82610c22565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c7575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106be9190611d75565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610714610f05565b61071d5f610f8c565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461075690612271565b80601f016020809104026020016040519081016040528092919081815260200182805461078290612271565b80156107cd5780601f106107a4576101008083540402835291602001916107cd565b820191905f5260205f20905b8154815290600101906020018083116107b057829003601f168201915b5050505050905090565b60095481565b6107ef6107e8610ce1565b838361104f565b5050565b6107fb610f05565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610849848484610502565b610855848484846111b8565b50505050565b606061086682610c22565b505f60065f8481526020019081526020015f20805461088490612271565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090612271565b80156108fb5780601f106108d2576101008083540402835291602001916108fb565b820191905f5260205f20905b8154815290600101906020018083116108de57829003601f168201915b505050505090505f61090b61136a565b90505f81510361091f578192505050610961565b5f8251111561095357808260405160200161093b929190612310565b60405160208183030381529060405292505050610961565b61095c84611380565b925050505b919050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed906123a3565b60405180910390fd5b60095f815480929190610a08906123ee565b9190505550610a19336009546113e6565b610a2560095483611403565b6009549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610ac5610f05565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b35575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b2c9190611d75565b60405180910390fd5b610b3e81610f8c565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c0b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c1b5750610c1a8261145d565b5b9050919050565b5f80610c2d836114c6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c9f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c969190611ef4565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610cf583838360016114ff565b505050565b5f80610d05846114c6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d4657610d458184866116be565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dd157610d855f855f806114ff565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e5057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f0d610ce1565b73ffffffffffffffffffffffffffffffffffffffff16610f2b61071f565b73ffffffffffffffffffffffffffffffffffffffff1614610f8a57610f4e610ce1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f819190611d75565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110bf57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110b69190611d75565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111ab9190611c15565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611364578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111fb610ce1565b8685856040518563ffffffff1660e01b815260040161121d9493929190612487565b6020604051808303815f875af192505050801561125857506040513d601f19601f8201168201806040525081019061125591906124e5565b60015b6112d9573d805f8114611286576040519150601f19603f3d011682016040523d82523d5f602084013e61128b565b606091505b505f8151036112d157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112c89190611d75565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461136257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113599190611d75565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061138b82610c22565b505f61139561136a565b90505f8151116113b35760405180602001604052805f8152506113de565b806113bd84611781565b6040516020016113ce929190612310565b6040516020818303038152906040525b915050919050565b6113ff828260405180602001604052805f81525061184b565b5050565b8060065f8481526020019081526020015f20908161142191906126a4565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114519190611ef4565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061153757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611669575f61154684610c22565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115b057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115c357506115c18184610a2f565b155b1561160557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115fc9190611d75565b60405180910390fd5b811561166757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116c9838383611866565b61177c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361173d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117349190611ef4565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611773929190612773565b60405180910390fd5b505050565b60605f600161178f84611926565b0190505f8167ffffffffffffffff8111156117ad576117ac611f7d565b5b6040519080825280601f01601f1916602001820160405280156117df5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611840578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118355761183461279a565b5b0494505f85036117ec575b819350505050919050565b6118558383611a77565b6118615f8484846111b8565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561191d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118de57506118dd8484610a2f565b5b8061191c57508273ffffffffffffffffffffffffffffffffffffffff1661190483610ca8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611982577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119785761197761279a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106119bf576d04ee2d6d415b85acef810000000083816119b5576119b461279a565b5b0492506020810190505b662386f26fc1000083106119ee57662386f26fc1000083816119e4576119e361279a565b5b0492506010810190505b6305f5e1008310611a17576305f5e1008381611a0d57611a0c61279a565b5b0492506008810190505b6127108310611a3c576127108381611a3257611a3161279a565b5b0492506004810190505b60648310611a5f5760648381611a5557611a5461279a565b5b0492506002810190505b600a8310611a6e576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ae7575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ade9190611d75565b60405180910390fd5b5f611af383835f610cfa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b65575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b5c9190611d75565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611baf81611b7b565b8114611bb9575f80fd5b50565b5f81359050611bca81611ba6565b92915050565b5f60208284031215611be557611be4611b73565b5b5f611bf284828501611bbc565b91505092915050565b5f8115159050919050565b611c0f81611bfb565b82525050565b5f602082019050611c285f830184611c06565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c65578082015181840152602081019050611c4a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611c8a82611c2e565b611c948185611c38565b9350611ca4818560208601611c48565b611cad81611c70565b840191505092915050565b5f6020820190508181035f830152611cd08184611c80565b905092915050565b5f819050919050565b611cea81611cd8565b8114611cf4575f80fd5b50565b5f81359050611d0581611ce1565b92915050565b5f60208284031215611d2057611d1f611b73565b5b5f611d2d84828501611cf7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d5f82611d36565b9050919050565b611d6f81611d55565b82525050565b5f602082019050611d885f830184611d66565b92915050565b611d9781611d55565b8114611da1575f80fd5b50565b5f81359050611db281611d8e565b92915050565b5f8060408385031215611dce57611dcd611b73565b5b5f611ddb85828601611da4565b9250506020611dec85828601611cf7565b9150509250929050565b5f805f60608486031215611e0d57611e0c611b73565b5b5f611e1a86828701611da4565b9350506020611e2b86828701611da4565b9250506040611e3c86828701611cf7565b9150509250925092565b5f819050919050565b5f611e69611e64611e5f84611d36565b611e46565b611d36565b9050919050565b5f611e7a82611e4f565b9050919050565b5f611e8b82611e70565b9050919050565b611e9b81611e81565b82525050565b5f602082019050611eb45f830184611e92565b92915050565b5f60208284031215611ecf57611ece611b73565b5b5f611edc84828501611da4565b91505092915050565b611eee81611cd8565b82525050565b5f602082019050611f075f830184611ee5565b92915050565b611f1681611bfb565b8114611f20575f80fd5b50565b5f81359050611f3181611f0d565b92915050565b5f8060408385031215611f4d57611f4c611b73565b5b5f611f5a85828601611da4565b9250506020611f6b85828601611f23565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fb382611c70565b810181811067ffffffffffffffff82111715611fd257611fd1611f7d565b5b80604052505050565b5f611fe4611b6a565b9050611ff08282611faa565b919050565b5f67ffffffffffffffff82111561200f5761200e611f7d565b5b61201882611c70565b9050602081019050919050565b828183375f83830152505050565b5f61204561204084611ff5565b611fdb565b90508281526020810184848401111561206157612060611f79565b5b61206c848285612025565b509392505050565b5f82601f83011261208857612087611f75565b5b8135612098848260208601612033565b91505092915050565b5f805f80608085870312156120b9576120b8611b73565b5b5f6120c687828801611da4565b94505060206120d787828801611da4565b93505060406120e887828801611cf7565b925050606085013567ffffffffffffffff81111561210957612108611b77565b5b61211587828801612074565b91505092959194509250565b5f67ffffffffffffffff82111561213b5761213a611f7d565b5b61214482611c70565b9050602081019050919050565b5f61216361215e84612121565b611fdb565b90508281526020810184848401111561217f5761217e611f79565b5b61218a848285612025565b509392505050565b5f82601f8301126121a6576121a5611f75565b5b81356121b6848260208601612151565b91505092915050565b5f602082840312156121d4576121d3611b73565b5b5f82013567ffffffffffffffff8111156121f1576121f0611b77565b5b6121fd84828501612192565b91505092915050565b5f806040838503121561221c5761221b611b73565b5b5f61222985828601611da4565b925050602061223a85828601611da4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061228857607f821691505b60208210810361229b5761229a612244565b5b50919050565b5f6060820190506122b45f830186611d66565b6122c16020830185611ee5565b6122ce6040830184611d66565b949350505050565b5f81905092915050565b5f6122ea82611c2e565b6122f481856122d6565b9350612304818560208601611c48565b80840191505092915050565b5f61231b82856122e0565b915061232782846122e0565b91508190509392505050565b7f5468652063616c6c65722063616e6e6f742072756e20746869732066756e63745f8201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b5f61238d602383611c38565b915061239882612333565b604082019050919050565b5f6020820190508181035f8301526123ba81612381565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123f882611cd8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361242a576124296123c1565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61245982612435565b612463818561243f565b9350612473818560208601611c48565b61247c81611c70565b840191505092915050565b5f60808201905061249a5f830187611d66565b6124a76020830186611d66565b6124b46040830185611ee5565b81810360608301526124c6818461244f565b905095945050505050565b5f815190506124df81611ba6565b92915050565b5f602082840312156124fa576124f9611b73565b5b5f612507848285016124d1565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261256c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612531565b6125768683612531565b95508019841693508086168417925050509392505050565b5f6125a86125a361259e84611cd8565b611e46565b611cd8565b9050919050565b5f819050919050565b6125c18361258e565b6125d56125cd826125af565b84845461253d565b825550505050565b5f90565b6125e96125dd565b6125f48184846125b8565b505050565b5b818110156126175761260c5f826125e1565b6001810190506125fa565b5050565b601f82111561265c5761262d81612510565b61263684612522565b81016020851015612645578190505b61265961265185612522565b8301826125f9565b50505b505050565b5f82821c905092915050565b5f61267c5f1984600802612661565b1980831691505092915050565b5f612694838361266d565b9150826002028217905092915050565b6126ad82611c2e565b67ffffffffffffffff8111156126c6576126c5611f7d565b5b6126d08254612271565b6126db82828561261b565b5f60209050601f83116001811461270c575f84156126fa578287015190505b6127048582612689565b86555061276b565b601f19841661271a86612510565b5f5b828110156127415784890151825560018201915060208501945060208101905061271c565b8683101561275e578489015161275a601f89168261266d565b8355505b6001600288020188555050505b505050505050565b5f6040820190506127865f830185611d66565b6127936020830184611ee5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220eaea9ea8e823e8af3cc66426d6c856cea0b892d3d003c41d50550939ea54537c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x496E63656E746976657300000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x494E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8E SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA0 SWAP2 SWAP1 PUSH3 0x455 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x116 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10D SWAP2 SWAP1 PUSH3 0x57C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x127 DUP2 PUSH3 0x12E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x597 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x26D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x228 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x2E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x2F3 DUP7 DUP4 PUSH3 0x2AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x33D PUSH3 0x337 PUSH3 0x331 DUP5 PUSH3 0x30B JUMP JUMPDEST PUSH3 0x314 JUMP JUMPDEST PUSH3 0x30B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x358 DUP4 PUSH3 0x31D JUMP JUMPDEST PUSH3 0x370 PUSH3 0x367 DUP3 PUSH3 0x344 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2B6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x386 PUSH3 0x378 JUMP JUMPDEST PUSH3 0x393 DUP2 DUP5 DUP5 PUSH3 0x34D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3BA JUMPI PUSH3 0x3AE PUSH0 DUP3 PUSH3 0x37C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x399 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3D3 DUP2 PUSH3 0x289 JUMP JUMPDEST PUSH3 0x3DE DUP5 PUSH3 0x29B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3EE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x406 PUSH3 0x3FD DUP6 PUSH3 0x29B JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x398 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x42B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x40E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x445 DUP4 DUP4 PUSH3 0x41A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x460 DUP3 PUSH3 0x1F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x47C JUMPI PUSH3 0x47B PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH3 0x488 DUP3 SLOAD PUSH3 0x255 JUMP JUMPDEST PUSH3 0x495 DUP3 DUP3 DUP6 PUSH3 0x3BE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4CB JUMPI PUSH0 DUP5 ISZERO PUSH3 0x4B6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4C2 DUP6 DUP3 PUSH3 0x438 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x531 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4DB DUP7 PUSH3 0x289 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x504 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x4DD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x524 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x520 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x41A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x564 DUP3 PUSH3 0x539 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x576 DUP2 PUSH3 0x558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x591 PUSH0 DUP4 ADD DUP5 PUSH3 0x56B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27FD DUP1 PUSH3 0x5A5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB876E3B6 EQ PUSH2 0x2FE JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x5F53575F EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x70C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1F37 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43A DUP3 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DB DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH2 0x4E5 DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE DUP3 DUP3 PUSH2 0x4F9 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x572 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x585 DUP4 DUP4 PUSH2 0x580 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x64F DUP3 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x714 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x71D PUSH0 PUSH2 0xF8C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E8 PUSH2 0xCE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x104F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FB PUSH2 0xF05 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x849 DUP5 DUP5 DUP5 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x855 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x866 DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x90B PUSH2 0x136A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x91F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x961 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x953 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x961 JUMP JUMPDEST PUSH2 0x95C DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA08 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA19 CALLER PUSH1 0x9 SLOAD PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0xA25 PUSH1 0x9 SLOAD DUP4 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xF05 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xF8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC1B JUMPI POP PUSH2 0xC1A DUP3 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC2D DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD05 DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD46 JUMPI PUSH2 0xD45 DUP2 DUP5 DUP7 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD1 JUMPI PUSH2 0xD85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE50 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF0D PUSH2 0xCE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF2B PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF8A JUMPI PUSH2 0xF4E PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1364 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11FB PUSH2 0xCE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1258 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1255 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12D1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1362 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x138B DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH0 PUSH2 0x1395 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x13B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x13DE JUMP JUMPDEST DUP1 PUSH2 0x13BD DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13CE SWAP3 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x184B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1537 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1669 JUMPI PUSH0 PUSH2 0x1546 DUP5 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15B0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH2 0x15C1 DUP2 DUP5 PUSH2 0xA2F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1605 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1667 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP4 DUP4 DUP4 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x177C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP3 SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x178F DUP5 PUSH2 0x1926 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17AD JUMPI PUSH2 0x17AC PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1840 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1835 JUMPI PUSH2 0x1834 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17EC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1855 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0x1861 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x191D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18DE JUMPI POP PUSH2 0x18DD DUP5 DUP5 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x191C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1904 DUP4 PUSH2 0xCA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1982 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x19BF JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x19B5 JUMPI PUSH2 0x19B4 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19EE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A17 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A3C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A5F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A6E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADE SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1AF3 DUP4 DUP4 PUSH0 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B65 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAF DUP2 PUSH2 0x1B7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCA DUP2 PUSH2 0x1BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0F DUP2 PUSH2 0x1BFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1C94 DUP2 DUP6 PUSH2 0x1C38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1CAD DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD0 DUP2 DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEA DUP2 PUSH2 0x1CD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D05 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2D DUP5 DUP3 DUP6 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5F DUP3 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x1D55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D97 DUP2 PUSH2 0x1D55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB2 DUP2 PUSH2 0x1D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH2 0x1DCD PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DDB DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1E0C PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E1A DUP7 DUP3 DUP8 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E2B DUP7 DUP3 DUP8 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E3C DUP7 DUP3 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E69 PUSH2 0x1E64 PUSH2 0x1E5F DUP5 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A DUP3 PUSH2 0x1E4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8B DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1E81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EDC DUP5 DUP3 DUP6 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EEE DUP2 PUSH2 0x1CD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F07 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F16 DUP2 PUSH2 0x1BFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F20 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F4D JUMPI PUSH2 0x1F4C PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5A DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F6B DUP6 DUP3 DUP7 ADD PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FB3 DUP3 PUSH2 0x1C70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FD2 JUMPI PUSH2 0x1FD1 PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE4 PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF0 DUP3 DUP3 PUSH2 0x1FAA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200F JUMPI PUSH2 0x200E PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x2018 DUP3 PUSH2 0x1C70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 PUSH2 0x2040 DUP5 PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x1F79 JUMP JUMPDEST JUMPDEST PUSH2 0x206C DUP5 DUP3 DUP6 PUSH2 0x2025 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2088 JUMPI PUSH2 0x2087 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2098 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20B9 JUMPI PUSH2 0x20B8 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20D7 DUP8 DUP3 DUP9 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20E8 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2109 JUMPI PUSH2 0x2108 PUSH2 0x1B77 JUMP JUMPDEST JUMPDEST PUSH2 0x2115 DUP8 DUP3 DUP9 ADD PUSH2 0x2074 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x2144 DUP3 PUSH2 0x1C70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 PUSH2 0x215E DUP5 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217E PUSH2 0x1F79 JUMP JUMPDEST JUMPDEST PUSH2 0x218A DUP5 DUP3 DUP6 PUSH2 0x2025 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21B6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F1 JUMPI PUSH2 0x21F0 PUSH2 0x1B77 JUMP JUMPDEST JUMPDEST PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x221C JUMPI PUSH2 0x221B PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2229 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x223A DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x2244 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22B4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x22C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EE5 JUMP JUMPDEST PUSH2 0x22CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22EA DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x22F4 DUP2 DUP6 PUSH2 0x22D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2304 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x231B DUP3 DUP6 PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2327 DUP3 DUP5 PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5468652063616C6C65722063616E6E6F742072756E20746869732066756E6374 PUSH0 DUP3 ADD MSTORE PUSH32 0x696F6E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH1 0x23 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x2398 DUP3 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BA DUP2 PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F8 DUP3 PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x23C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2459 DUP3 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x2463 DUP2 DUP6 PUSH2 0x243F JUMP JUMPDEST SWAP4 POP PUSH2 0x2473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x247C DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x249A PUSH0 DUP4 ADD DUP8 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x24A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x24B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24C6 DUP2 DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DF DUP2 PUSH2 0x1BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24FA JUMPI PUSH2 0x24F9 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2507 DUP5 DUP3 DUP6 ADD PUSH2 0x24D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x256C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x2576 DUP7 DUP4 PUSH2 0x2531 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A8 PUSH2 0x25A3 PUSH2 0x259E DUP5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C1 DUP4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x25CD DUP3 PUSH2 0x25AF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x253D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x25E9 PUSH2 0x25DD JUMP JUMPDEST PUSH2 0x25F4 DUP2 DUP5 DUP5 PUSH2 0x25B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x260C PUSH0 DUP3 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x262D DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2636 DUP5 PUSH2 0x2522 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2645 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2659 PUSH2 0x2651 DUP6 PUSH2 0x2522 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x25F9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x267C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2661 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2694 DUP4 DUP4 PUSH2 0x266D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26AD DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C6 JUMPI PUSH2 0x26C5 PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x26D0 DUP3 SLOAD PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x26DB DUP3 DUP3 DUP6 PUSH2 0x261B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x270C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x26FA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2704 DUP6 DUP3 PUSH2 0x2689 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x276B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x271A DUP7 PUSH2 0x2510 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2741 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x271C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x275E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x275A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x266D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2786 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x2793 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xEA SWAP15 0xA8 0xE8 0x23 0xE8 0xAF EXTCODECOPY 0xC6 PUSH5 0x26D6C856CE LOG0 0xB8 SWAP3 0xD3 0xD0 SUB 0xC4 SAR POP SSTORE MULMOD CODECOPY 0xEA SLOAD MSTORE8 PUSH29 0x64736F6C63430008170033000000000000000000000000000000000000 ",
							"sourceMap": "59993:808:0:-:0;;;60122:45;;;;;;;;;;60045:10;40798:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40872:5;40864;:13;;;;;;:::i;:::-;;40897:7;40887;:17;;;;;;:::i;:::-;;40798:113;;28327:1;28303:26;;:12;:26;;;28299:95;;28380:1;28352:31;;;;;;;;;;;:::i;:::-;;;;;;;;28299:95;28403:32;28422:12;28403:18;;;:32;;:::i;:::-;28255:187;59993:808;;29942:187;30015:16;30034:6;;;;;;;;;;;30015:25;;30059:8;30050:6;;:17;;;;;;;;;;;;;;;;;;30113:8;30082:40;;30103:8;30082:40;;;;;;;;;;;;30005:124;29942:187;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;59993:808:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Progress_3071": {
									"entryPoint": 1568,
									"id": 3071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_2722": {
									"entryPoint": 3304,
									"id": 2722,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2788": {
									"entryPoint": 5375,
									"id": 2788,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2115": {
									"entryPoint": 4970,
									"id": 2115,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2370": {
									"entryPoint": 5822,
									"id": 2370,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2918": {
									"entryPoint": 4536,
									"id": 2918,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_1654": {
									"entryPoint": 3845,
									"id": 1654,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_2297": {
									"entryPoint": 3240,
									"id": 2297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2333": {
									"entryPoint": 6246,
									"id": 2333,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2526": {
									"entryPoint": 6775,
									"id": 2526,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1554": {
									"entryPoint": 3297,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2284": {
									"entryPoint": 5318,
									"id": 2284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2854": {
									"entryPoint": 3106,
									"id": 2854,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_safeMint_2541": {
									"entryPoint": 5094,
									"id": 2541,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2567": {
									"entryPoint": 6219,
									"id": 2567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2825": {
									"entryPoint": 4175,
									"id": 2825,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_3059": {
									"entryPoint": 5123,
									"id": 3059,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_1716": {
									"entryPoint": 3980,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_2476": {
									"entryPoint": 3322,
									"id": 2476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2131": {
									"entryPoint": 1260,
									"id": 2131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_2039": {
									"entryPoint": 1622,
									"id": 2039,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2148": {
									"entryPoint": 1233,
									"id": 2148,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_2181": {
									"entryPoint": 2607,
									"id": 2181,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1113": {
									"entryPoint": 6438,
									"id": 1113,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3131": {
									"entryPoint": 2406,
									"id": 3131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_2061": {
									"entryPoint": 1090,
									"id": 2061,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2052": {
									"entryPoint": 1605,
									"id": 2052,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_1637": {
									"entryPoint": 1823,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1668": {
									"entryPoint": 1804,
									"id": 1668,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2245": {
									"entryPoint": 1537,
									"id": 2245,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2271": {
									"entryPoint": 2110,
									"id": 2271,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2164": {
									"entryPoint": 2013,
									"id": 2164,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setProgressSC_3095": {
									"entryPoint": 2035,
									"id": 3095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1766": {
									"entryPoint": 5213,
									"id": 1766,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2011": {
									"entryPoint": 2881,
									"id": 2011,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2983": {
									"entryPoint": 994,
									"id": 2983,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2070": {
									"entryPoint": 1863,
									"id": 2070,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1356": {
									"entryPoint": 6017,
									"id": 1356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenCount_3073": {
									"entryPoint": 2007,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenURI_2106": {
									"entryPoint": 4992,
									"id": 2106,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_3040": {
									"entryPoint": 2139,
									"id": 3040,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2227": {
									"entryPoint": 1282,
									"id": 2227,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_1696": {
									"entryPoint": 2749,
									"id": 1696,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8529,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IProgress_$3062_to_t_address_fromStack": {
									"entryPoint": 7826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8976,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9351,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8865,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IProgress_$3062__to_t_address__fromStack_reversed": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IProgress_$3062_to_t_address": {
									"entryPoint": 7809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8229,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8772,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076": {
									"entryPoint": 9011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9656,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23026:1",
										"nodeType": "YulBlock",
										"src": "0:23026:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:184:1",
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nativeSrc": "1870:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:1",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:1",
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nativeSrc": "1960:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nativeSrc": "1979:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nativeSrc": "1973:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nativeSrc": "1953:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nativeSrc": "1953:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nativeSrc": "1897:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nativeSrc": "1889:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:1",
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nativeSrc": "1913:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nativeSrc": "1918:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:1",
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nativeSrc": "2018:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nativeSrc": "2011:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nativeSrc": "2011:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nativeSrc": "2098:54:1",
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nativeSrc": "2108:38:1",
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nativeSrc": "2122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nativeSrc": "2138:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nativeSrc": "2118:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:1",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nativeSrc": "2250:285:1",
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nativeSrc": "2260:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nativeSrc": "2274:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:1",
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nativeSrc": "2329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nativeSrc": "2444:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nativeSrc": "2409:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nativeSrc": "2409:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nativeSrc": "2483:46:1",
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nativeSrc": "2499:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nativeSrc": "2490:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:1",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:1",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:1",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nativeSrc": "2659:195:1",
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nativeSrc": "2669:26:1",
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nativeSrc": "2677:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nativeSrc": "2712:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nativeSrc": "2705:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nativeSrc": "2705:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nativeSrc": "2761:86:1",
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nativeSrc": "2769:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:1",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:1",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:1",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nativeSrc": "2905:32:1",
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nativeSrc": "2915:16:1",
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:1",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:1",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:1",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nativeSrc": "2986:79:1",
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:1",
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nativeSrc": "3045:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nativeSrc": "3045:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nativeSrc": "3016:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nativeSrc": "3006:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nativeSrc": "2999:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nativeSrc": "2996:63:1",
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:1",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nativeSrc": "3123:87:1",
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nativeSrc": "3133:29:1",
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nativeSrc": "3142:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nativeSrc": "3171:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nativeSrc": "3171:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:1",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:1",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:1",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nativeSrc": "3282:263:1",
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:1",
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nativeSrc": "3330:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nativeSrc": "3330:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nativeSrc": "3299:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nativeSrc": "3295:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nativeSrc": "3292:119:1",
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nativeSrc": "3421:117:1",
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nativeSrc": "3436:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nativeSrc": "3496:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nativeSrc": "3475:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:1",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:1",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:1",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nativeSrc": "3596:81:1",
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nativeSrc": "3606:65:1",
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nativeSrc": "3617:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:1",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:1",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nativeSrc": "3728:51:1",
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nativeSrc": "3738:35:1",
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nativeSrc": "3749:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:1",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:1",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nativeSrc": "3850:53:1",
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nativeSrc": "3872:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nativeSrc": "3860:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nativeSrc": "3860:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:1",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:1",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nativeSrc": "4007:124:1",
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nativeSrc": "4017:26:1",
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nativeSrc": "4025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nativeSrc": "4106:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nativeSrc": "4053:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nativeSrc": "4053:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:1",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:1",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:1",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nativeSrc": "4180:79:1",
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:1",
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nativeSrc": "4239:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nativeSrc": "4239:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nativeSrc": "4210:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nativeSrc": "4200:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nativeSrc": "4193:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nativeSrc": "4190:63:1",
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:1",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nativeSrc": "4317:87:1",
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nativeSrc": "4327:29:1",
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nativeSrc": "4336:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nativeSrc": "4365:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nativeSrc": "4365:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:1",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:1",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:1",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nativeSrc": "4493:391:1",
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:1",
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nativeSrc": "4541:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nativeSrc": "4541:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nativeSrc": "4510:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nativeSrc": "4506:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nativeSrc": "4503:119:1",
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nativeSrc": "4632:117:1",
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nativeSrc": "4647:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nativeSrc": "4707:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nativeSrc": "4686:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:1",
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nativeSrc": "4774:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nativeSrc": "4835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nativeSrc": "4814:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:1",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:1",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:1",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nativeSrc": "4990:519:1",
													"nodeType": "YulBlock",
													"src": "4990:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:1",
																"nodeType": "YulBlock",
																"src": "5036:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:1"
																			},
																			"nativeSrc": "5038:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:1"
																		},
																		"nativeSrc": "5038:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nativeSrc": "5007:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:1"
																},
																"nativeSrc": "5003:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:1"
															},
															"nativeSrc": "5000:119:1",
															"nodeType": "YulIf",
															"src": "5000:119:1"
														},
														{
															"nativeSrc": "5129:117:1",
															"nodeType": "YulBlock",
															"src": "5129:117:1",
															"statements": [
																{
																	"nativeSrc": "5144:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:1"
																				},
																				"nativeSrc": "5204:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:1"
																		},
																		"nativeSrc": "5183:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:1",
															"nodeType": "YulBlock",
															"src": "5256:118:1",
															"statements": [
																{
																	"nativeSrc": "5271:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:1"
																				},
																				"nativeSrc": "5332:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:1"
																		},
																		"nativeSrc": "5311:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:1",
															"nodeType": "YulBlock",
															"src": "5384:118:1",
															"statements": [
																{
																	"nativeSrc": "5399:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:1"
																				},
																				"nativeSrc": "5460:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:1"
																		},
																		"nativeSrc": "5439:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:1",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:1",
														"nodeType": "YulTypedName",
														"src": "4955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:1",
														"nodeType": "YulTypedName",
														"src": "4967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:1",
														"nodeType": "YulTypedName",
														"src": "4975:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:1",
														"nodeType": "YulTypedName",
														"src": "4983:6:1",
														"type": ""
													}
												],
												"src": "4890:619:1"
											},
											{
												"body": {
													"nativeSrc": "5547:28:1",
													"nodeType": "YulBlock",
													"src": "5547:28:1",
													"statements": [
														{
															"nativeSrc": "5557:12:1",
															"nodeType": "YulAssignment",
															"src": "5557:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5564:5:1",
																"nodeType": "YulIdentifier",
																"src": "5564:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5557:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5515:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5533:5:1",
														"nodeType": "YulTypedName",
														"src": "5533:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5543:3:1",
														"nodeType": "YulTypedName",
														"src": "5543:3:1",
														"type": ""
													}
												],
												"src": "5515:60:1"
											},
											{
												"body": {
													"nativeSrc": "5641:82:1",
													"nodeType": "YulBlock",
													"src": "5641:82:1",
													"statements": [
														{
															"nativeSrc": "5651:66:1",
															"nodeType": "YulAssignment",
															"src": "5651:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5709:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5709:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5691:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5691:17:1"
																				},
																				"nativeSrc": "5691:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5682:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5682:8:1"
																		},
																		"nativeSrc": "5682:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5682:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5664:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5664:17:1"
																},
																"nativeSrc": "5664:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5664:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5651:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5651:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5581:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5621:5:1",
														"nodeType": "YulTypedName",
														"src": "5621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5631:9:1",
														"nodeType": "YulTypedName",
														"src": "5631:9:1",
														"type": ""
													}
												],
												"src": "5581:142:1"
											},
											{
												"body": {
													"nativeSrc": "5789:66:1",
													"nodeType": "YulBlock",
													"src": "5789:66:1",
													"statements": [
														{
															"nativeSrc": "5799:50:1",
															"nodeType": "YulAssignment",
															"src": "5799:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5843:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5843:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5812:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5812:30:1"
																},
																"nativeSrc": "5812:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5812:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5799:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5799:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5729:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5769:5:1",
														"nodeType": "YulTypedName",
														"src": "5769:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5779:9:1",
														"nodeType": "YulTypedName",
														"src": "5779:9:1",
														"type": ""
													}
												],
												"src": "5729:126:1"
											},
											{
												"body": {
													"nativeSrc": "5939:66:1",
													"nodeType": "YulBlock",
													"src": "5939:66:1",
													"statements": [
														{
															"nativeSrc": "5949:50:1",
															"nodeType": "YulAssignment",
															"src": "5949:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5993:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5993:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5962:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5962:30:1"
																},
																"nativeSrc": "5962:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5962:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5949:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5949:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IProgress_$3062_to_t_address",
												"nativeSrc": "5861:144:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5919:5:1",
														"nodeType": "YulTypedName",
														"src": "5919:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5929:9:1",
														"nodeType": "YulTypedName",
														"src": "5929:9:1",
														"type": ""
													}
												],
												"src": "5861:144:1"
											},
											{
												"body": {
													"nativeSrc": "6094:84:1",
													"nodeType": "YulBlock",
													"src": "6094:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6111:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6111:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6165:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6165:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IProgress_$3062_to_t_address",
																			"nativeSrc": "6116:48:1",
																			"nodeType": "YulIdentifier",
																			"src": "6116:48:1"
																		},
																		"nativeSrc": "6116:55:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:1"
																},
																"nativeSrc": "6104:68:1",
																"nodeType": "YulFunctionCall",
																"src": "6104:68:1"
															},
															"nativeSrc": "6104:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "6104:68:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IProgress_$3062_to_t_address_fromStack",
												"nativeSrc": "6011:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6082:5:1",
														"nodeType": "YulTypedName",
														"src": "6082:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6089:3:1",
														"nodeType": "YulTypedName",
														"src": "6089:3:1",
														"type": ""
													}
												],
												"src": "6011:167:1"
											},
											{
												"body": {
													"nativeSrc": "6300:142:1",
													"nodeType": "YulBlock",
													"src": "6300:142:1",
													"statements": [
														{
															"nativeSrc": "6310:26:1",
															"nodeType": "YulAssignment",
															"src": "6310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6333:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6318:3:1"
																},
																"nativeSrc": "6318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6408:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6408:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6421:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6421:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6432:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6432:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6417:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6417:3:1"
																		},
																		"nativeSrc": "6417:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6417:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IProgress_$3062_to_t_address_fromStack",
																	"nativeSrc": "6346:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "6346:61:1"
																},
																"nativeSrc": "6346:89:1",
																"nodeType": "YulFunctionCall",
																"src": "6346:89:1"
															},
															"nativeSrc": "6346:89:1",
															"nodeType": "YulExpressionStatement",
															"src": "6346:89:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IProgress_$3062__to_t_address__fromStack_reversed",
												"nativeSrc": "6184:258:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6272:9:1",
														"nodeType": "YulTypedName",
														"src": "6272:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6284:6:1",
														"nodeType": "YulTypedName",
														"src": "6284:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6295:4:1",
														"nodeType": "YulTypedName",
														"src": "6295:4:1",
														"type": ""
													}
												],
												"src": "6184:258:1"
											},
											{
												"body": {
													"nativeSrc": "6514:263:1",
													"nodeType": "YulBlock",
													"src": "6514:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6560:83:1",
																"nodeType": "YulBlock",
																"src": "6560:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6562:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6562:77:1"
																			},
																			"nativeSrc": "6562:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6562:79:1"
																		},
																		"nativeSrc": "6562:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6562:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6535:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6535:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6544:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:1"
																		},
																		"nativeSrc": "6531:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6556:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:1"
																},
																"nativeSrc": "6527:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6527:32:1"
															},
															"nativeSrc": "6524:119:1",
															"nodeType": "YulIf",
															"src": "6524:119:1"
														},
														{
															"nativeSrc": "6653:117:1",
															"nodeType": "YulBlock",
															"src": "6653:117:1",
															"statements": [
																{
																	"nativeSrc": "6668:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6668:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6682:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6682:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6672:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6672:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6697:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6697:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6732:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6732:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6743:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6743:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6728:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6728:3:1"
																				},
																				"nativeSrc": "6728:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6728:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6752:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6752:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6707:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6707:20:1"
																		},
																		"nativeSrc": "6707:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6707:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6697:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6697:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6448:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6484:9:1",
														"nodeType": "YulTypedName",
														"src": "6484:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6495:7:1",
														"nodeType": "YulTypedName",
														"src": "6495:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6507:6:1",
														"nodeType": "YulTypedName",
														"src": "6507:6:1",
														"type": ""
													}
												],
												"src": "6448:329:1"
											},
											{
												"body": {
													"nativeSrc": "6848:53:1",
													"nodeType": "YulBlock",
													"src": "6848:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6865:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6865:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6888:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6888:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6870:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6870:17:1"
																		},
																		"nativeSrc": "6870:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6870:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6858:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6858:6:1"
																},
																"nativeSrc": "6858:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6858:37:1"
															},
															"nativeSrc": "6858:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6858:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6783:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6836:5:1",
														"nodeType": "YulTypedName",
														"src": "6836:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6843:3:1",
														"nodeType": "YulTypedName",
														"src": "6843:3:1",
														"type": ""
													}
												],
												"src": "6783:118:1"
											},
											{
												"body": {
													"nativeSrc": "7005:124:1",
													"nodeType": "YulBlock",
													"src": "7005:124:1",
													"statements": [
														{
															"nativeSrc": "7015:26:1",
															"nodeType": "YulAssignment",
															"src": "7015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7027:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7027:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7038:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7038:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:1"
																},
																"nativeSrc": "7023:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7015:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7015:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7108:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7108:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7119:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7119:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7104:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7104:3:1"
																		},
																		"nativeSrc": "7104:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7104:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7051:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "7051:43:1"
																},
																"nativeSrc": "7051:71:1",
																"nodeType": "YulFunctionCall",
																"src": "7051:71:1"
															},
															"nativeSrc": "7051:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "7051:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6907:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6977:9:1",
														"nodeType": "YulTypedName",
														"src": "6977:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6989:6:1",
														"nodeType": "YulTypedName",
														"src": "6989:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7000:4:1",
														"nodeType": "YulTypedName",
														"src": "7000:4:1",
														"type": ""
													}
												],
												"src": "6907:222:1"
											},
											{
												"body": {
													"nativeSrc": "7175:76:1",
													"nodeType": "YulBlock",
													"src": "7175:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7229:16:1",
																"nodeType": "YulBlock",
																"src": "7229:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7238:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7238:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7241:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7241:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7231:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7231:6:1"
																			},
																			"nativeSrc": "7231:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7231:12:1"
																		},
																		"nativeSrc": "7231:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7231:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7198:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7198:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7220:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7220:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7205:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "7205:14:1"
																				},
																				"nativeSrc": "7205:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7205:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7195:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7195:2:1"
																		},
																		"nativeSrc": "7195:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7195:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7188:6:1"
																},
																"nativeSrc": "7188:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7188:40:1"
															},
															"nativeSrc": "7185:60:1",
															"nodeType": "YulIf",
															"src": "7185:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7135:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7168:5:1",
														"nodeType": "YulTypedName",
														"src": "7168:5:1",
														"type": ""
													}
												],
												"src": "7135:116:1"
											},
											{
												"body": {
													"nativeSrc": "7306:84:1",
													"nodeType": "YulBlock",
													"src": "7306:84:1",
													"statements": [
														{
															"nativeSrc": "7316:29:1",
															"nodeType": "YulAssignment",
															"src": "7316:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7338:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7338:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7325:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7325:12:1"
																},
																"nativeSrc": "7325:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7325:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7316:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7316:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7378:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7354:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "7354:23:1"
																},
																"nativeSrc": "7354:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7354:30:1"
															},
															"nativeSrc": "7354:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7354:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7257:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7284:6:1",
														"nodeType": "YulTypedName",
														"src": "7284:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7292:3:1",
														"nodeType": "YulTypedName",
														"src": "7292:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7300:5:1",
														"nodeType": "YulTypedName",
														"src": "7300:5:1",
														"type": ""
													}
												],
												"src": "7257:133:1"
											},
											{
												"body": {
													"nativeSrc": "7476:388:1",
													"nodeType": "YulBlock",
													"src": "7476:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7522:83:1",
																"nodeType": "YulBlock",
																"src": "7522:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7524:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7524:77:1"
																			},
																			"nativeSrc": "7524:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7524:79:1"
																		},
																		"nativeSrc": "7524:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7524:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7497:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7497:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7506:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7506:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7493:3:1"
																		},
																		"nativeSrc": "7493:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7493:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7518:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7518:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7489:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7489:3:1"
																},
																"nativeSrc": "7489:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7489:32:1"
															},
															"nativeSrc": "7486:119:1",
															"nodeType": "YulIf",
															"src": "7486:119:1"
														},
														{
															"nativeSrc": "7615:117:1",
															"nodeType": "YulBlock",
															"src": "7615:117:1",
															"statements": [
																{
																	"nativeSrc": "7630:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7630:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7644:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7644:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7634:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7634:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7659:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7659:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7694:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7694:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7705:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7705:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7690:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7690:3:1"
																				},
																				"nativeSrc": "7690:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7690:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7714:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7714:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7669:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7669:20:1"
																		},
																		"nativeSrc": "7669:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7659:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7659:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7742:115:1",
															"nodeType": "YulBlock",
															"src": "7742:115:1",
															"statements": [
																{
																	"nativeSrc": "7757:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7757:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7771:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7771:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7761:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7761:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7787:60:1",
																	"nodeType": "YulAssignment",
																	"src": "7787:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7819:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7819:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7830:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7830:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7815:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7815:3:1"
																				},
																				"nativeSrc": "7815:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7815:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7839:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7839:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7797:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "7797:17:1"
																		},
																		"nativeSrc": "7797:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7797:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7787:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7787:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7396:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7438:9:1",
														"nodeType": "YulTypedName",
														"src": "7438:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7449:7:1",
														"nodeType": "YulTypedName",
														"src": "7449:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7461:6:1",
														"nodeType": "YulTypedName",
														"src": "7461:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7469:6:1",
														"nodeType": "YulTypedName",
														"src": "7469:6:1",
														"type": ""
													}
												],
												"src": "7396:468:1"
											},
											{
												"body": {
													"nativeSrc": "7959:28:1",
													"nodeType": "YulBlock",
													"src": "7959:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7976:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7976:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7979:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7969:6:1"
																},
																"nativeSrc": "7969:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7969:12:1"
															},
															"nativeSrc": "7969:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7969:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7870:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7870:117:1"
											},
											{
												"body": {
													"nativeSrc": "8082:28:1",
													"nodeType": "YulBlock",
													"src": "8082:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8099:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8099:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8102:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8102:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:1"
																},
																"nativeSrc": "8092:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8092:12:1"
															},
															"nativeSrc": "8092:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "8092:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7993:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7993:117:1"
											},
											{
												"body": {
													"nativeSrc": "8144:152:1",
													"nodeType": "YulBlock",
													"src": "8144:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8161:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8161:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8164:77:1",
																		"nodeType": "YulLiteral",
																		"src": "8164:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:1"
																},
																"nativeSrc": "8154:88:1",
																"nodeType": "YulFunctionCall",
																"src": "8154:88:1"
															},
															"nativeSrc": "8154:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "8154:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8258:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8258:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8261:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8261:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8251:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:1"
																},
																"nativeSrc": "8251:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8251:15:1"
															},
															"nativeSrc": "8251:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8251:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8282:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8282:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8285:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8285:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8275:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8275:6:1"
																},
																"nativeSrc": "8275:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8275:15:1"
															},
															"nativeSrc": "8275:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8275:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8116:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8116:180:1"
											},
											{
												"body": {
													"nativeSrc": "8345:238:1",
													"nodeType": "YulBlock",
													"src": "8345:238:1",
													"statements": [
														{
															"nativeSrc": "8355:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8355:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8377:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8377:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8407:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8407:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8385:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "8385:21:1"
																		},
																		"nativeSrc": "8385:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8385:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8373:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8373:3:1"
																},
																"nativeSrc": "8373:40:1",
																"nodeType": "YulFunctionCall",
																"src": "8373:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8359:10:1",
																	"nodeType": "YulTypedName",
																	"src": "8359:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8524:22:1",
																"nodeType": "YulBlock",
																"src": "8524:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8526:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8526:16:1"
																			},
																			"nativeSrc": "8526:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8526:18:1"
																		},
																		"nativeSrc": "8526:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8526:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8467:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "8467:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8479:18:1",
																				"nodeType": "YulLiteral",
																				"src": "8479:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8464:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8464:2:1"
																		},
																		"nativeSrc": "8464:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8464:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8503:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "8503:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8515:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8515:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8500:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8500:2:1"
																		},
																		"nativeSrc": "8500:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8500:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8461:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8461:2:1"
																},
																"nativeSrc": "8461:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8461:62:1"
															},
															"nativeSrc": "8458:88:1",
															"nodeType": "YulIf",
															"src": "8458:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8562:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8562:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8566:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "8566:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8555:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8555:6:1"
																},
																"nativeSrc": "8555:22:1",
																"nodeType": "YulFunctionCall",
																"src": "8555:22:1"
															},
															"nativeSrc": "8555:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "8555:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8302:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8331:6:1",
														"nodeType": "YulTypedName",
														"src": "8331:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8339:4:1",
														"nodeType": "YulTypedName",
														"src": "8339:4:1",
														"type": ""
													}
												],
												"src": "8302:281:1"
											},
											{
												"body": {
													"nativeSrc": "8630:88:1",
													"nodeType": "YulBlock",
													"src": "8630:88:1",
													"statements": [
														{
															"nativeSrc": "8640:30:1",
															"nodeType": "YulAssignment",
															"src": "8640:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8650:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8650:18:1"
																},
																"nativeSrc": "8650:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8650:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8640:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8640:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8699:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8699:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8707:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8707:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8679:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "8679:19:1"
																},
																"nativeSrc": "8679:33:1",
																"nodeType": "YulFunctionCall",
																"src": "8679:33:1"
															},
															"nativeSrc": "8679:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "8679:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8589:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8614:4:1",
														"nodeType": "YulTypedName",
														"src": "8614:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8623:6:1",
														"nodeType": "YulTypedName",
														"src": "8623:6:1",
														"type": ""
													}
												],
												"src": "8589:129:1"
											},
											{
												"body": {
													"nativeSrc": "8790:241:1",
													"nodeType": "YulBlock",
													"src": "8790:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8895:22:1",
																"nodeType": "YulBlock",
																"src": "8895:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8897:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8897:16:1"
																			},
																			"nativeSrc": "8897:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8897:18:1"
																		},
																		"nativeSrc": "8897:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8897:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8867:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8867:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8875:18:1",
																		"nodeType": "YulLiteral",
																		"src": "8875:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8864:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8864:2:1"
																},
																"nativeSrc": "8864:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8864:30:1"
															},
															"nativeSrc": "8861:56:1",
															"nodeType": "YulIf",
															"src": "8861:56:1"
														},
														{
															"nativeSrc": "8927:37:1",
															"nodeType": "YulAssignment",
															"src": "8927:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8957:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8957:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8935:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "8935:21:1"
																},
																"nativeSrc": "8935:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8935:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8927:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8927:4:1"
																}
															]
														},
														{
															"nativeSrc": "9001:23:1",
															"nodeType": "YulAssignment",
															"src": "9001:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9013:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9013:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9019:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9019:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9009:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9009:3:1"
																},
																"nativeSrc": "9009:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9009:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9001:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9001:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8724:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8774:6:1",
														"nodeType": "YulTypedName",
														"src": "8774:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8785:4:1",
														"nodeType": "YulTypedName",
														"src": "8785:4:1",
														"type": ""
													}
												],
												"src": "8724:307:1"
											},
											{
												"body": {
													"nativeSrc": "9101:82:1",
													"nodeType": "YulBlock",
													"src": "9101:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9124:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9124:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9129:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9129:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9134:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9134:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9111:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9111:12:1"
																},
																"nativeSrc": "9111:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9111:30:1"
															},
															"nativeSrc": "9111:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9111:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9161:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9161:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9166:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9166:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:1"
																		},
																		"nativeSrc": "9157:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9157:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9175:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9175:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:1"
																},
																"nativeSrc": "9150:27:1",
																"nodeType": "YulFunctionCall",
																"src": "9150:27:1"
															},
															"nativeSrc": "9150:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "9150:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9037:146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9083:3:1",
														"nodeType": "YulTypedName",
														"src": "9083:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9088:3:1",
														"nodeType": "YulTypedName",
														"src": "9088:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9093:6:1",
														"nodeType": "YulTypedName",
														"src": "9093:6:1",
														"type": ""
													}
												],
												"src": "9037:146:1"
											},
											{
												"body": {
													"nativeSrc": "9272:340:1",
													"nodeType": "YulBlock",
													"src": "9272:340:1",
													"statements": [
														{
															"nativeSrc": "9282:74:1",
															"nodeType": "YulAssignment",
															"src": "9282:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9348:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9348:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9307:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "9307:40:1"
																		},
																		"nativeSrc": "9307:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9307:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9291:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9291:15:1"
																},
																"nativeSrc": "9291:65:1",
																"nodeType": "YulFunctionCall",
																"src": "9291:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9282:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9372:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9372:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9379:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9379:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9365:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9365:6:1"
																},
																"nativeSrc": "9365:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9365:21:1"
															},
															"nativeSrc": "9365:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9365:21:1"
														},
														{
															"nativeSrc": "9395:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9395:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9410:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9410:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9417:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9417:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9406:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:1"
																},
																"nativeSrc": "9406:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9406:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9399:3:1",
																	"nodeType": "YulTypedName",
																	"src": "9399:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9460:83:1",
																"nodeType": "YulBlock",
																"src": "9460:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9462:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9462:77:1"
																			},
																			"nativeSrc": "9462:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9462:79:1"
																		},
																		"nativeSrc": "9462:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9462:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9441:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9441:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9446:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9437:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:1"
																		},
																		"nativeSrc": "9437:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9455:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9455:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9434:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9434:2:1"
																},
																"nativeSrc": "9434:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9434:25:1"
															},
															"nativeSrc": "9431:112:1",
															"nodeType": "YulIf",
															"src": "9431:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9589:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9589:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9594:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9594:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9599:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9552:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "9552:36:1"
																},
																"nativeSrc": "9552:54:1",
																"nodeType": "YulFunctionCall",
																"src": "9552:54:1"
															},
															"nativeSrc": "9552:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "9552:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9189:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9245:3:1",
														"nodeType": "YulTypedName",
														"src": "9245:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9250:6:1",
														"nodeType": "YulTypedName",
														"src": "9250:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9258:3:1",
														"nodeType": "YulTypedName",
														"src": "9258:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9266:5:1",
														"nodeType": "YulTypedName",
														"src": "9266:5:1",
														"type": ""
													}
												],
												"src": "9189:423:1"
											},
											{
												"body": {
													"nativeSrc": "9692:277:1",
													"nodeType": "YulBlock",
													"src": "9692:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9741:83:1",
																"nodeType": "YulBlock",
																"src": "9741:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9743:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9743:77:1"
																			},
																			"nativeSrc": "9743:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9743:79:1"
																		},
																		"nativeSrc": "9743:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9743:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9720:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9720:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9728:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9728:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9716:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9716:3:1"
																				},
																				"nativeSrc": "9716:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9716:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9735:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9735:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:1"
																		},
																		"nativeSrc": "9712:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9712:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9705:6:1"
																},
																"nativeSrc": "9705:35:1",
																"nodeType": "YulFunctionCall",
																"src": "9705:35:1"
															},
															"nativeSrc": "9702:122:1",
															"nodeType": "YulIf",
															"src": "9702:122:1"
														},
														{
															"nativeSrc": "9833:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9833:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9860:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9860:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9847:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9847:12:1"
																},
																"nativeSrc": "9847:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9847:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9837:6:1",
																	"nodeType": "YulTypedName",
																	"src": "9837:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9876:87:1",
															"nodeType": "YulAssignment",
															"src": "9876:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9936:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9936:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9944:4:1",
																				"nodeType": "YulLiteral",
																				"src": "9944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9932:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9932:3:1"
																		},
																		"nativeSrc": "9932:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9932:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9951:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9951:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9959:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9959:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9885:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "9885:46:1"
																},
																"nativeSrc": "9885:78:1",
																"nodeType": "YulFunctionCall",
																"src": "9885:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9876:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9876:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9631:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9670:6:1",
														"nodeType": "YulTypedName",
														"src": "9670:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9678:3:1",
														"nodeType": "YulTypedName",
														"src": "9678:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9686:5:1",
														"nodeType": "YulTypedName",
														"src": "9686:5:1",
														"type": ""
													}
												],
												"src": "9631:338:1"
											},
											{
												"body": {
													"nativeSrc": "10101:817:1",
													"nodeType": "YulBlock",
													"src": "10101:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10148:83:1",
																"nodeType": "YulBlock",
																"src": "10148:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10150:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10150:77:1"
																			},
																			"nativeSrc": "10150:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10150:79:1"
																		},
																		"nativeSrc": "10150:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10150:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10122:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10122:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10131:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10131:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10118:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:1"
																		},
																		"nativeSrc": "10118:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10143:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10114:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10114:3:1"
																},
																"nativeSrc": "10114:33:1",
																"nodeType": "YulFunctionCall",
																"src": "10114:33:1"
															},
															"nativeSrc": "10111:120:1",
															"nodeType": "YulIf",
															"src": "10111:120:1"
														},
														{
															"nativeSrc": "10241:117:1",
															"nodeType": "YulBlock",
															"src": "10241:117:1",
															"statements": [
																{
																	"nativeSrc": "10256:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10256:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10270:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10270:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10260:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10260:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10285:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10285:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10320:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10320:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10331:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10331:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10316:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10316:3:1"
																				},
																				"nativeSrc": "10316:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10316:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10340:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10340:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10295:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10295:20:1"
																		},
																		"nativeSrc": "10295:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10295:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10285:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10285:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10368:118:1",
															"nodeType": "YulBlock",
															"src": "10368:118:1",
															"statements": [
																{
																	"nativeSrc": "10383:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10383:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10397:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10397:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10387:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10387:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10413:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10413:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10448:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10448:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10459:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10459:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10444:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10444:3:1"
																				},
																				"nativeSrc": "10444:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10444:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10468:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10468:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10423:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10423:20:1"
																		},
																		"nativeSrc": "10423:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10423:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10413:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10413:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10496:118:1",
															"nodeType": "YulBlock",
															"src": "10496:118:1",
															"statements": [
																{
																	"nativeSrc": "10511:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10511:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10525:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10525:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10515:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10515:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10541:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10541:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10576:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10576:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10587:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10587:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10572:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10572:3:1"
																				},
																				"nativeSrc": "10572:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10572:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10596:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10596:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10551:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10551:20:1"
																		},
																		"nativeSrc": "10551:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10551:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10541:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10541:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10624:287:1",
															"nodeType": "YulBlock",
															"src": "10624:287:1",
															"statements": [
																{
																	"nativeSrc": "10639:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10639:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10670:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10670:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10681:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10681:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10666:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10666:3:1"
																				},
																				"nativeSrc": "10666:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10666:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10653:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "10653:12:1"
																		},
																		"nativeSrc": "10653:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10643:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10643:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10732:83:1",
																		"nodeType": "YulBlock",
																		"src": "10732:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10734:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "10734:77:1"
																					},
																					"nativeSrc": "10734:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10734:79:1"
																				},
																				"nativeSrc": "10734:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "10734:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10704:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10704:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10712:18:1",
																				"nodeType": "YulLiteral",
																				"src": "10712:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10701:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10701:2:1"
																		},
																		"nativeSrc": "10701:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10701:30:1"
																	},
																	"nativeSrc": "10698:117:1",
																	"nodeType": "YulIf",
																	"src": "10698:117:1"
																},
																{
																	"nativeSrc": "10829:72:1",
																	"nodeType": "YulAssignment",
																	"src": "10829:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10873:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10873:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10884:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10884:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10869:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10869:3:1"
																				},
																				"nativeSrc": "10869:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10869:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10893:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10893:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "10839:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "10839:29:1"
																		},
																		"nativeSrc": "10839:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10839:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10829:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10829:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9975:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10047:9:1",
														"nodeType": "YulTypedName",
														"src": "10047:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10058:7:1",
														"nodeType": "YulTypedName",
														"src": "10058:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10070:6:1",
														"nodeType": "YulTypedName",
														"src": "10070:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10078:6:1",
														"nodeType": "YulTypedName",
														"src": "10078:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10086:6:1",
														"nodeType": "YulTypedName",
														"src": "10086:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10094:6:1",
														"nodeType": "YulTypedName",
														"src": "10094:6:1",
														"type": ""
													}
												],
												"src": "9975:943:1"
											},
											{
												"body": {
													"nativeSrc": "10991:241:1",
													"nodeType": "YulBlock",
													"src": "10991:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11096:22:1",
																"nodeType": "YulBlock",
																"src": "11096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11098:16:1"
																			},
																			"nativeSrc": "11098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11098:18:1"
																		},
																		"nativeSrc": "11098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11068:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11068:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11076:18:1",
																		"nodeType": "YulLiteral",
																		"src": "11076:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11065:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11065:2:1"
																},
																"nativeSrc": "11065:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11065:30:1"
															},
															"nativeSrc": "11062:56:1",
															"nodeType": "YulIf",
															"src": "11062:56:1"
														},
														{
															"nativeSrc": "11128:37:1",
															"nodeType": "YulAssignment",
															"src": "11128:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11158:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11158:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "11136:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "11136:21:1"
																},
																"nativeSrc": "11136:29:1",
																"nodeType": "YulFunctionCall",
																"src": "11136:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11128:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11128:4:1"
																}
															]
														},
														{
															"nativeSrc": "11202:23:1",
															"nodeType": "YulAssignment",
															"src": "11202:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11214:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11214:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11220:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11220:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11210:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11210:3:1"
																},
																"nativeSrc": "11210:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11210:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11202:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11202:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "10924:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10975:6:1",
														"nodeType": "YulTypedName",
														"src": "10975:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10986:4:1",
														"nodeType": "YulTypedName",
														"src": "10986:4:1",
														"type": ""
													}
												],
												"src": "10924:308:1"
											},
											{
												"body": {
													"nativeSrc": "11322:341:1",
													"nodeType": "YulBlock",
													"src": "11322:341:1",
													"statements": [
														{
															"nativeSrc": "11332:75:1",
															"nodeType": "YulAssignment",
															"src": "11332:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11399:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11399:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "11357:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "11357:41:1"
																		},
																		"nativeSrc": "11357:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11357:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "11341:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "11341:15:1"
																},
																"nativeSrc": "11341:66:1",
																"nodeType": "YulFunctionCall",
																"src": "11341:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11332:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11332:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11423:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11423:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11430:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11430:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11416:6:1"
																},
																"nativeSrc": "11416:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11416:21:1"
															},
															"nativeSrc": "11416:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11416:21:1"
														},
														{
															"nativeSrc": "11446:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11446:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11461:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11461:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11468:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11468:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11457:3:1"
																},
																"nativeSrc": "11457:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11457:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11450:3:1",
																	"nodeType": "YulTypedName",
																	"src": "11450:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11511:83:1",
																"nodeType": "YulBlock",
																"src": "11511:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11513:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11513:77:1"
																			},
																			"nativeSrc": "11513:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11513:79:1"
																		},
																		"nativeSrc": "11513:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11513:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11492:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11492:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11497:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11497:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11488:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11488:3:1"
																		},
																		"nativeSrc": "11488:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11488:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11506:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11506:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11485:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11485:2:1"
																},
																"nativeSrc": "11485:25:1",
																"nodeType": "YulFunctionCall",
																"src": "11485:25:1"
															},
															"nativeSrc": "11482:112:1",
															"nodeType": "YulIf",
															"src": "11482:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11640:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11640:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11645:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11645:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11650:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11650:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11603:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "11603:36:1"
																},
																"nativeSrc": "11603:54:1",
																"nodeType": "YulFunctionCall",
																"src": "11603:54:1"
															},
															"nativeSrc": "11603:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "11603:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "11238:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11295:3:1",
														"nodeType": "YulTypedName",
														"src": "11295:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11300:6:1",
														"nodeType": "YulTypedName",
														"src": "11300:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11308:3:1",
														"nodeType": "YulTypedName",
														"src": "11308:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11316:5:1",
														"nodeType": "YulTypedName",
														"src": "11316:5:1",
														"type": ""
													}
												],
												"src": "11238:425:1"
											},
											{
												"body": {
													"nativeSrc": "11745:278:1",
													"nodeType": "YulBlock",
													"src": "11745:278:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11794:83:1",
																"nodeType": "YulBlock",
																"src": "11794:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11796:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11796:77:1"
																			},
																			"nativeSrc": "11796:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11796:79:1"
																		},
																		"nativeSrc": "11796:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11796:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11773:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11773:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11781:4:1",
																						"nodeType": "YulLiteral",
																						"src": "11781:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11769:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11769:3:1"
																				},
																				"nativeSrc": "11769:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11769:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11788:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11788:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11765:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11765:3:1"
																		},
																		"nativeSrc": "11765:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11765:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11758:6:1"
																},
																"nativeSrc": "11758:35:1",
																"nodeType": "YulFunctionCall",
																"src": "11758:35:1"
															},
															"nativeSrc": "11755:122:1",
															"nodeType": "YulIf",
															"src": "11755:122:1"
														},
														{
															"nativeSrc": "11886:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11886:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11913:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11913:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11900:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "11900:12:1"
																},
																"nativeSrc": "11900:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11900:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11890:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11890:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11929:88:1",
															"nodeType": "YulAssignment",
															"src": "11929:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11990:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11990:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11998:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11998:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11986:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:1"
																		},
																		"nativeSrc": "11986:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11986:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12005:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12005:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12013:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12013:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "11938:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "11938:47:1"
																},
																"nativeSrc": "11938:79:1",
																"nodeType": "YulFunctionCall",
																"src": "11938:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11929:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11929:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "11683:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11723:6:1",
														"nodeType": "YulTypedName",
														"src": "11723:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11731:3:1",
														"nodeType": "YulTypedName",
														"src": "11731:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11739:5:1",
														"nodeType": "YulTypedName",
														"src": "11739:5:1",
														"type": ""
													}
												],
												"src": "11683:340:1"
											},
											{
												"body": {
													"nativeSrc": "12105:433:1",
													"nodeType": "YulBlock",
													"src": "12105:433:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12151:83:1",
																"nodeType": "YulBlock",
																"src": "12151:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12153:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12153:77:1"
																			},
																			"nativeSrc": "12153:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12153:79:1"
																		},
																		"nativeSrc": "12153:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12153:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12126:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12126:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12135:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12135:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12122:3:1"
																		},
																		"nativeSrc": "12122:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12122:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12147:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12118:3:1"
																},
																"nativeSrc": "12118:32:1",
																"nodeType": "YulFunctionCall",
																"src": "12118:32:1"
															},
															"nativeSrc": "12115:119:1",
															"nodeType": "YulIf",
															"src": "12115:119:1"
														},
														{
															"nativeSrc": "12244:287:1",
															"nodeType": "YulBlock",
															"src": "12244:287:1",
															"statements": [
																{
																	"nativeSrc": "12259:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12259:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12290:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12290:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12301:1:1",
																						"nodeType": "YulLiteral",
																						"src": "12301:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12286:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12286:3:1"
																				},
																				"nativeSrc": "12286:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12286:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12273:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "12273:12:1"
																		},
																		"nativeSrc": "12273:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12273:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12263:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12263:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12351:83:1",
																		"nodeType": "YulBlock",
																		"src": "12351:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12353:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "12353:77:1"
																					},
																					"nativeSrc": "12353:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12353:79:1"
																				},
																				"nativeSrc": "12353:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "12353:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12323:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12323:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12331:18:1",
																				"nodeType": "YulLiteral",
																				"src": "12331:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12320:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12320:2:1"
																		},
																		"nativeSrc": "12320:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12320:30:1"
																	},
																	"nativeSrc": "12317:117:1",
																	"nodeType": "YulIf",
																	"src": "12317:117:1"
																},
																{
																	"nativeSrc": "12448:73:1",
																	"nodeType": "YulAssignment",
																	"src": "12448:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12493:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12493:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12504:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12504:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12489:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12489:3:1"
																				},
																				"nativeSrc": "12489:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12489:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12513:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12513:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "12458:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "12458:30:1"
																		},
																		"nativeSrc": "12458:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12458:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12448:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12448:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "12029:509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12075:9:1",
														"nodeType": "YulTypedName",
														"src": "12075:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12086:7:1",
														"nodeType": "YulTypedName",
														"src": "12086:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12098:6:1",
														"nodeType": "YulTypedName",
														"src": "12098:6:1",
														"type": ""
													}
												],
												"src": "12029:509:1"
											},
											{
												"body": {
													"nativeSrc": "12627:391:1",
													"nodeType": "YulBlock",
													"src": "12627:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12673:83:1",
																"nodeType": "YulBlock",
																"src": "12673:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12675:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12675:77:1"
																			},
																			"nativeSrc": "12675:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12675:79:1"
																		},
																		"nativeSrc": "12675:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12675:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12648:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12648:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12657:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12657:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12644:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12644:3:1"
																		},
																		"nativeSrc": "12644:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12644:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12669:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12669:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12640:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12640:3:1"
																},
																"nativeSrc": "12640:32:1",
																"nodeType": "YulFunctionCall",
																"src": "12640:32:1"
															},
															"nativeSrc": "12637:119:1",
															"nodeType": "YulIf",
															"src": "12637:119:1"
														},
														{
															"nativeSrc": "12766:117:1",
															"nodeType": "YulBlock",
															"src": "12766:117:1",
															"statements": [
																{
																	"nativeSrc": "12781:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12781:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12795:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12795:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12785:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12785:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12810:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12810:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12845:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12845:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12856:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12856:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12841:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12841:3:1"
																				},
																				"nativeSrc": "12841:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12841:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12865:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12865:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12820:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12820:20:1"
																		},
																		"nativeSrc": "12820:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12820:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12810:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12810:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12893:118:1",
															"nodeType": "YulBlock",
															"src": "12893:118:1",
															"statements": [
																{
																	"nativeSrc": "12908:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12908:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12922:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12922:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12912:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12912:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12938:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12938:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12973:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12973:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12984:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12984:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12969:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12969:3:1"
																				},
																				"nativeSrc": "12969:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12969:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12993:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12993:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12948:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12948:20:1"
																		},
																		"nativeSrc": "12948:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12948:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12938:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12938:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "12544:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12589:9:1",
														"nodeType": "YulTypedName",
														"src": "12589:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12600:7:1",
														"nodeType": "YulTypedName",
														"src": "12600:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12612:6:1",
														"nodeType": "YulTypedName",
														"src": "12612:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12620:6:1",
														"nodeType": "YulTypedName",
														"src": "12620:6:1",
														"type": ""
													}
												],
												"src": "12544:474:1"
											},
											{
												"body": {
													"nativeSrc": "13052:152:1",
													"nodeType": "YulBlock",
													"src": "13052:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13069:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13069:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13072:77:1",
																		"nodeType": "YulLiteral",
																		"src": "13072:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13062:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13062:6:1"
																},
																"nativeSrc": "13062:88:1",
																"nodeType": "YulFunctionCall",
																"src": "13062:88:1"
															},
															"nativeSrc": "13062:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "13062:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13166:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13166:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13169:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13169:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13159:6:1"
																},
																"nativeSrc": "13159:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13159:15:1"
															},
															"nativeSrc": "13159:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13159:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13190:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13190:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13193:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13193:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13183:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13183:6:1"
																},
																"nativeSrc": "13183:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13183:15:1"
															},
															"nativeSrc": "13183:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13183:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13024:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "13024:180:1"
											},
											{
												"body": {
													"nativeSrc": "13261:269:1",
													"nodeType": "YulBlock",
													"src": "13261:269:1",
													"statements": [
														{
															"nativeSrc": "13271:22:1",
															"nodeType": "YulAssignment",
															"src": "13271:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13285:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13285:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13291:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13291:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13281:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13281:3:1"
																},
																"nativeSrc": "13281:12:1",
																"nodeType": "YulFunctionCall",
																"src": "13281:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13271:6:1"
																}
															]
														},
														{
															"nativeSrc": "13302:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13302:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13332:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "13332:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13338:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13338:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13328:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13328:3:1"
																},
																"nativeSrc": "13328:12:1",
																"nodeType": "YulFunctionCall",
																"src": "13328:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13306:18:1",
																	"nodeType": "YulTypedName",
																	"src": "13306:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13379:51:1",
																"nodeType": "YulBlock",
																"src": "13379:51:1",
																"statements": [
																	{
																		"nativeSrc": "13393:27:1",
																		"nodeType": "YulAssignment",
																		"src": "13393:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13407:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "13407:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13415:4:1",
																					"nodeType": "YulLiteral",
																					"src": "13415:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "13403:3:1"
																			},
																			"nativeSrc": "13403:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13403:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13393:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13393:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13359:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "13359:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13352:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13352:6:1"
																},
																"nativeSrc": "13352:26:1",
																"nodeType": "YulFunctionCall",
																"src": "13352:26:1"
															},
															"nativeSrc": "13349:81:1",
															"nodeType": "YulIf",
															"src": "13349:81:1"
														},
														{
															"body": {
																"nativeSrc": "13482:42:1",
																"nodeType": "YulBlock",
																"src": "13482:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "13496:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13496:16:1"
																			},
																			"nativeSrc": "13496:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13496:18:1"
																		},
																		"nativeSrc": "13496:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13496:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13446:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "13446:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "13469:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13469:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13477:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13477:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "13466:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "13466:2:1"
																		},
																		"nativeSrc": "13466:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13466:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13443:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13443:2:1"
																},
																"nativeSrc": "13443:38:1",
																"nodeType": "YulFunctionCall",
																"src": "13443:38:1"
															},
															"nativeSrc": "13440:84:1",
															"nodeType": "YulIf",
															"src": "13440:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13210:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13245:4:1",
														"nodeType": "YulTypedName",
														"src": "13245:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13254:6:1",
														"nodeType": "YulTypedName",
														"src": "13254:6:1",
														"type": ""
													}
												],
												"src": "13210:320:1"
											},
											{
												"body": {
													"nativeSrc": "13690:288:1",
													"nodeType": "YulBlock",
													"src": "13690:288:1",
													"statements": [
														{
															"nativeSrc": "13700:26:1",
															"nodeType": "YulAssignment",
															"src": "13700:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13712:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13712:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13723:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13723:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13708:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13708:3:1"
																},
																"nativeSrc": "13708:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13708:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13700:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13700:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13780:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13804:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13804:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13789:3:1"
																		},
																		"nativeSrc": "13789:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13789:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13736:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13736:43:1"
																},
																"nativeSrc": "13736:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13736:71:1"
															},
															"nativeSrc": "13736:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13736:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13861:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13861:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13874:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13874:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13885:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13885:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13870:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13870:3:1"
																		},
																		"nativeSrc": "13870:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13870:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13817:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13817:43:1"
																},
																"nativeSrc": "13817:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13817:72:1"
															},
															"nativeSrc": "13817:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13817:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13943:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13943:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13956:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13956:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13967:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13952:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13952:3:1"
																		},
																		"nativeSrc": "13952:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13952:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13899:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13899:43:1"
																},
																"nativeSrc": "13899:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13899:72:1"
															},
															"nativeSrc": "13899:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13899:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13536:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13646:9:1",
														"nodeType": "YulTypedName",
														"src": "13646:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13658:6:1",
														"nodeType": "YulTypedName",
														"src": "13658:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13666:6:1",
														"nodeType": "YulTypedName",
														"src": "13666:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13674:6:1",
														"nodeType": "YulTypedName",
														"src": "13674:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13685:4:1",
														"nodeType": "YulTypedName",
														"src": "13685:4:1",
														"type": ""
													}
												],
												"src": "13536:442:1"
											},
											{
												"body": {
													"nativeSrc": "14098:34:1",
													"nodeType": "YulBlock",
													"src": "14098:34:1",
													"statements": [
														{
															"nativeSrc": "14108:18:1",
															"nodeType": "YulAssignment",
															"src": "14108:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "14123:3:1",
																"nodeType": "YulIdentifier",
																"src": "14123:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14108:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "14108:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13984:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14070:3:1",
														"nodeType": "YulTypedName",
														"src": "14070:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14075:6:1",
														"nodeType": "YulTypedName",
														"src": "14075:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14086:11:1",
														"nodeType": "YulTypedName",
														"src": "14086:11:1",
														"type": ""
													}
												],
												"src": "13984:148:1"
											},
											{
												"body": {
													"nativeSrc": "14248:280:1",
													"nodeType": "YulBlock",
													"src": "14248:280:1",
													"statements": [
														{
															"nativeSrc": "14258:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "14258:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14305:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "14305:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14272:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "14272:32:1"
																},
																"nativeSrc": "14272:39:1",
																"nodeType": "YulFunctionCall",
																"src": "14272:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14262:6:1",
																	"nodeType": "YulTypedName",
																	"src": "14262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14320:96:1",
															"nodeType": "YulAssignment",
															"src": "14320:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14404:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14404:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14409:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14409:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14327:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "14327:76:1"
																},
																"nativeSrc": "14327:89:1",
																"nodeType": "YulFunctionCall",
																"src": "14327:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14320:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14320:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14464:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14464:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14471:4:1",
																				"nodeType": "YulLiteral",
																				"src": "14471:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14460:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14460:3:1"
																		},
																		"nativeSrc": "14460:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14460:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14478:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14478:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14483:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14483:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14425:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "14425:34:1"
																},
																"nativeSrc": "14425:65:1",
																"nodeType": "YulFunctionCall",
																"src": "14425:65:1"
															},
															"nativeSrc": "14425:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "14425:65:1"
														},
														{
															"nativeSrc": "14499:23:1",
															"nodeType": "YulAssignment",
															"src": "14499:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14510:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14510:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14515:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14515:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14506:3:1"
																},
																"nativeSrc": "14506:16:1",
																"nodeType": "YulFunctionCall",
																"src": "14506:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14499:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14138:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14229:5:1",
														"nodeType": "YulTypedName",
														"src": "14229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14236:3:1",
														"nodeType": "YulTypedName",
														"src": "14236:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14244:3:1",
														"nodeType": "YulTypedName",
														"src": "14244:3:1",
														"type": ""
													}
												],
												"src": "14138:390:1"
											},
											{
												"body": {
													"nativeSrc": "14718:251:1",
													"nodeType": "YulBlock",
													"src": "14718:251:1",
													"statements": [
														{
															"nativeSrc": "14729:102:1",
															"nodeType": "YulAssignment",
															"src": "14729:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14818:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14818:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14827:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14827:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14736:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "14736:81:1"
																},
																"nativeSrc": "14736:95:1",
																"nodeType": "YulFunctionCall",
																"src": "14736:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14729:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14729:3:1"
																}
															]
														},
														{
															"nativeSrc": "14841:102:1",
															"nodeType": "YulAssignment",
															"src": "14841:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14930:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14930:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14939:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14939:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14848:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "14848:81:1"
																},
																"nativeSrc": "14848:95:1",
																"nodeType": "YulFunctionCall",
																"src": "14848:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14841:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14841:3:1"
																}
															]
														},
														{
															"nativeSrc": "14953:10:1",
															"nodeType": "YulAssignment",
															"src": "14953:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "14960:3:1",
																"nodeType": "YulIdentifier",
																"src": "14960:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14953:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14953:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14534:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14689:3:1",
														"nodeType": "YulTypedName",
														"src": "14689:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14695:6:1",
														"nodeType": "YulTypedName",
														"src": "14695:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14703:6:1",
														"nodeType": "YulTypedName",
														"src": "14703:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14714:3:1",
														"nodeType": "YulTypedName",
														"src": "14714:3:1",
														"type": ""
													}
												],
												"src": "14534:435:1"
											},
											{
												"body": {
													"nativeSrc": "15081:116:1",
													"nodeType": "YulBlock",
													"src": "15081:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15103:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15103:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15111:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15111:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15099:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15099:3:1"
																		},
																		"nativeSrc": "15099:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15099:14:1"
																	},
																	{
																		"hexValue": "5468652063616c6c65722063616e6e6f742072756e20746869732066756e6374",
																		"kind": "string",
																		"nativeSrc": "15115:34:1",
																		"nodeType": "YulLiteral",
																		"src": "15115:34:1",
																		"type": "",
																		"value": "The caller cannot run this funct"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15092:6:1"
																},
																"nativeSrc": "15092:58:1",
																"nodeType": "YulFunctionCall",
																"src": "15092:58:1"
															},
															"nativeSrc": "15092:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "15092:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15171:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15171:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15179:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15179:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15167:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15167:3:1"
																		},
																		"nativeSrc": "15167:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15167:15:1"
																	},
																	{
																		"hexValue": "696f6e",
																		"kind": "string",
																		"nativeSrc": "15184:5:1",
																		"nodeType": "YulLiteral",
																		"src": "15184:5:1",
																		"type": "",
																		"value": "ion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15160:6:1"
																},
																"nativeSrc": "15160:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15160:30:1"
															},
															"nativeSrc": "15160:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "15160:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076",
												"nativeSrc": "14975:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15073:6:1",
														"nodeType": "YulTypedName",
														"src": "15073:6:1",
														"type": ""
													}
												],
												"src": "14975:222:1"
											},
											{
												"body": {
													"nativeSrc": "15349:220:1",
													"nodeType": "YulBlock",
													"src": "15349:220:1",
													"statements": [
														{
															"nativeSrc": "15359:74:1",
															"nodeType": "YulAssignment",
															"src": "15359:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15425:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15425:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15430:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15430:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15366:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "15366:58:1"
																},
																"nativeSrc": "15366:67:1",
																"nodeType": "YulFunctionCall",
																"src": "15366:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15359:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15359:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15531:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076",
																	"nativeSrc": "15442:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "15442:88:1"
																},
																"nativeSrc": "15442:93:1",
																"nodeType": "YulFunctionCall",
																"src": "15442:93:1"
															},
															"nativeSrc": "15442:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "15442:93:1"
														},
														{
															"nativeSrc": "15544:19:1",
															"nodeType": "YulAssignment",
															"src": "15544:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15555:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15555:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15560:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15551:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15551:3:1"
																},
																"nativeSrc": "15551:12:1",
																"nodeType": "YulFunctionCall",
																"src": "15551:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15544:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15544:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15203:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15337:3:1",
														"nodeType": "YulTypedName",
														"src": "15337:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15345:3:1",
														"nodeType": "YulTypedName",
														"src": "15345:3:1",
														"type": ""
													}
												],
												"src": "15203:366:1"
											},
											{
												"body": {
													"nativeSrc": "15746:248:1",
													"nodeType": "YulBlock",
													"src": "15746:248:1",
													"statements": [
														{
															"nativeSrc": "15756:26:1",
															"nodeType": "YulAssignment",
															"src": "15756:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15768:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15768:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15779:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15779:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15764:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15764:3:1"
																},
																"nativeSrc": "15764:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15764:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15756:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15756:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15803:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15803:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15814:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15799:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15799:3:1"
																		},
																		"nativeSrc": "15799:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15799:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15822:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15822:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15828:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15828:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15818:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15818:3:1"
																		},
																		"nativeSrc": "15818:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15818:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15792:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15792:6:1"
																},
																"nativeSrc": "15792:47:1",
																"nodeType": "YulFunctionCall",
																"src": "15792:47:1"
															},
															"nativeSrc": "15792:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "15792:47:1"
														},
														{
															"nativeSrc": "15848:139:1",
															"nodeType": "YulAssignment",
															"src": "15848:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15982:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15982:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15856:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "15856:124:1"
																},
																"nativeSrc": "15856:131:1",
																"nodeType": "YulFunctionCall",
																"src": "15856:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15848:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15848:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15575:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15726:9:1",
														"nodeType": "YulTypedName",
														"src": "15726:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15741:4:1",
														"nodeType": "YulTypedName",
														"src": "15741:4:1",
														"type": ""
													}
												],
												"src": "15575:419:1"
											},
											{
												"body": {
													"nativeSrc": "16028:152:1",
													"nodeType": "YulBlock",
													"src": "16028:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16045:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16045:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16048:77:1",
																		"nodeType": "YulLiteral",
																		"src": "16048:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16038:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16038:6:1"
																},
																"nativeSrc": "16038:88:1",
																"nodeType": "YulFunctionCall",
																"src": "16038:88:1"
															},
															"nativeSrc": "16038:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "16038:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16142:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16142:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16145:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16145:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16135:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16135:6:1"
																},
																"nativeSrc": "16135:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16135:15:1"
															},
															"nativeSrc": "16135:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16135:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16166:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16169:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16169:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16159:6:1"
																},
																"nativeSrc": "16159:15:1",
																"nodeType": "YulFunctionCall",
																"src": "16159:15:1"
															},
															"nativeSrc": "16159:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "16159:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "16000:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "16000:180:1"
											},
											{
												"body": {
													"nativeSrc": "16229:190:1",
													"nodeType": "YulBlock",
													"src": "16229:190:1",
													"statements": [
														{
															"nativeSrc": "16239:33:1",
															"nodeType": "YulAssignment",
															"src": "16239:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16266:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16266:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16248:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16248:17:1"
																},
																"nativeSrc": "16248:24:1",
																"nodeType": "YulFunctionCall",
																"src": "16248:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16239:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16239:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16362:22:1",
																"nodeType": "YulBlock",
																"src": "16362:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16364:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "16364:16:1"
																			},
																			"nativeSrc": "16364:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16364:18:1"
																		},
																		"nativeSrc": "16364:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16364:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16287:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16287:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16294:66:1",
																		"nodeType": "YulLiteral",
																		"src": "16294:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16284:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "16284:2:1"
																},
																"nativeSrc": "16284:77:1",
																"nodeType": "YulFunctionCall",
																"src": "16284:77:1"
															},
															"nativeSrc": "16281:103:1",
															"nodeType": "YulIf",
															"src": "16281:103:1"
														},
														{
															"nativeSrc": "16393:20:1",
															"nodeType": "YulAssignment",
															"src": "16393:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16411:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16411:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16400:3:1"
																},
																"nativeSrc": "16400:13:1",
																"nodeType": "YulFunctionCall",
																"src": "16400:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16393:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16186:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16215:5:1",
														"nodeType": "YulTypedName",
														"src": "16215:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16225:3:1",
														"nodeType": "YulTypedName",
														"src": "16225:3:1",
														"type": ""
													}
												],
												"src": "16186:233:1"
											},
											{
												"body": {
													"nativeSrc": "16483:40:1",
													"nodeType": "YulBlock",
													"src": "16483:40:1",
													"statements": [
														{
															"nativeSrc": "16494:22:1",
															"nodeType": "YulAssignment",
															"src": "16494:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16510:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16510:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16504:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "16504:5:1"
																},
																"nativeSrc": "16504:12:1",
																"nodeType": "YulFunctionCall",
																"src": "16504:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16494:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16494:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "16425:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16466:5:1",
														"nodeType": "YulTypedName",
														"src": "16466:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16476:6:1",
														"nodeType": "YulTypedName",
														"src": "16476:6:1",
														"type": ""
													}
												],
												"src": "16425:98:1"
											},
											{
												"body": {
													"nativeSrc": "16624:73:1",
													"nodeType": "YulBlock",
													"src": "16624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16641:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16641:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16646:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16634:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16634:6:1"
																},
																"nativeSrc": "16634:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16634:19:1"
															},
															"nativeSrc": "16634:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "16634:19:1"
														},
														{
															"nativeSrc": "16662:29:1",
															"nodeType": "YulAssignment",
															"src": "16662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16681:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16681:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16686:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16677:3:1"
																},
																"nativeSrc": "16677:14:1",
																"nodeType": "YulFunctionCall",
																"src": "16677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16662:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "16662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "16529:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16596:3:1",
														"nodeType": "YulTypedName",
														"src": "16596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16601:6:1",
														"nodeType": "YulTypedName",
														"src": "16601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16612:11:1",
														"nodeType": "YulTypedName",
														"src": "16612:11:1",
														"type": ""
													}
												],
												"src": "16529:168:1"
											},
											{
												"body": {
													"nativeSrc": "16793:283:1",
													"nodeType": "YulBlock",
													"src": "16793:283:1",
													"statements": [
														{
															"nativeSrc": "16803:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "16803:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16849:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16849:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16817:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "16817:31:1"
																},
																"nativeSrc": "16817:38:1",
																"nodeType": "YulFunctionCall",
																"src": "16817:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16807:6:1",
																	"nodeType": "YulTypedName",
																	"src": "16807:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16864:77:1",
															"nodeType": "YulAssignment",
															"src": "16864:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16929:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16929:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16934:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16934:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16871:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "16871:57:1"
																},
																"nativeSrc": "16871:70:1",
																"nodeType": "YulFunctionCall",
																"src": "16871:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16864:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16864:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16989:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "16989:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16996:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16996:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16985:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16985:3:1"
																		},
																		"nativeSrc": "16985:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16985:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17003:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "17003:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17008:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17008:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16950:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "16950:34:1"
																},
																"nativeSrc": "16950:65:1",
																"nodeType": "YulFunctionCall",
																"src": "16950:65:1"
															},
															"nativeSrc": "16950:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "16950:65:1"
														},
														{
															"nativeSrc": "17024:46:1",
															"nodeType": "YulAssignment",
															"src": "17024:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17035:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "17035:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "17062:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "17062:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "17040:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "17040:21:1"
																		},
																		"nativeSrc": "17040:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17040:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17031:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17031:3:1"
																},
																"nativeSrc": "17031:39:1",
																"nodeType": "YulFunctionCall",
																"src": "17031:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17024:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17024:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "16703:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16774:5:1",
														"nodeType": "YulTypedName",
														"src": "16774:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16781:3:1",
														"nodeType": "YulTypedName",
														"src": "16781:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16789:3:1",
														"nodeType": "YulTypedName",
														"src": "16789:3:1",
														"type": ""
													}
												],
												"src": "16703:373:1"
											},
											{
												"body": {
													"nativeSrc": "17282:440:1",
													"nodeType": "YulBlock",
													"src": "17282:440:1",
													"statements": [
														{
															"nativeSrc": "17292:27:1",
															"nodeType": "YulAssignment",
															"src": "17292:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17304:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17304:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17315:3:1",
																		"nodeType": "YulLiteral",
																		"src": "17315:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17300:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17300:3:1"
																},
																"nativeSrc": "17300:19:1",
																"nodeType": "YulFunctionCall",
																"src": "17300:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17292:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17292:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17373:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17373:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17386:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17386:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17397:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17397:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17382:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17382:3:1"
																		},
																		"nativeSrc": "17382:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17382:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17329:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17329:43:1"
																},
																"nativeSrc": "17329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "17329:71:1"
															},
															"nativeSrc": "17329:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "17329:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17454:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17454:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17467:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17467:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17478:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17478:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17463:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17463:3:1"
																		},
																		"nativeSrc": "17463:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17463:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17410:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17410:43:1"
																},
																"nativeSrc": "17410:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17410:72:1"
															},
															"nativeSrc": "17410:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17410:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17536:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17536:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17549:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17549:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17560:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17560:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17545:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17545:3:1"
																		},
																		"nativeSrc": "17545:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17545:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17492:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17492:43:1"
																},
																"nativeSrc": "17492:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17492:72:1"
															},
															"nativeSrc": "17492:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17492:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17585:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17585:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17596:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17596:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17581:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17581:3:1"
																		},
																		"nativeSrc": "17581:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17581:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17605:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "17605:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17601:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17601:3:1"
																		},
																		"nativeSrc": "17601:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17601:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17574:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17574:6:1"
																},
																"nativeSrc": "17574:48:1",
																"nodeType": "YulFunctionCall",
																"src": "17574:48:1"
															},
															"nativeSrc": "17574:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "17574:48:1"
														},
														{
															"nativeSrc": "17631:84:1",
															"nodeType": "YulAssignment",
															"src": "17631:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17701:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17701:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17710:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17710:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17639:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "17639:61:1"
																},
																"nativeSrc": "17639:76:1",
																"nodeType": "YulFunctionCall",
																"src": "17639:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17631:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17631:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "17082:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17230:9:1",
														"nodeType": "YulTypedName",
														"src": "17230:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17242:6:1",
														"nodeType": "YulTypedName",
														"src": "17242:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17250:6:1",
														"nodeType": "YulTypedName",
														"src": "17250:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17258:6:1",
														"nodeType": "YulTypedName",
														"src": "17258:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17266:6:1",
														"nodeType": "YulTypedName",
														"src": "17266:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17277:4:1",
														"nodeType": "YulTypedName",
														"src": "17277:4:1",
														"type": ""
													}
												],
												"src": "17082:640:1"
											},
											{
												"body": {
													"nativeSrc": "17790:79:1",
													"nodeType": "YulBlock",
													"src": "17790:79:1",
													"statements": [
														{
															"nativeSrc": "17800:22:1",
															"nodeType": "YulAssignment",
															"src": "17800:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17815:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17815:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17809:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17809:5:1"
																},
																"nativeSrc": "17809:13:1",
																"nodeType": "YulFunctionCall",
																"src": "17809:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17800:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17800:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17857:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17857:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "17831:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "17831:25:1"
																},
																"nativeSrc": "17831:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17831:32:1"
															},
															"nativeSrc": "17831:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "17831:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "17728:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17768:6:1",
														"nodeType": "YulTypedName",
														"src": "17768:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17776:3:1",
														"nodeType": "YulTypedName",
														"src": "17776:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17784:5:1",
														"nodeType": "YulTypedName",
														"src": "17784:5:1",
														"type": ""
													}
												],
												"src": "17728:141:1"
											},
											{
												"body": {
													"nativeSrc": "17951:273:1",
													"nodeType": "YulBlock",
													"src": "17951:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17997:83:1",
																"nodeType": "YulBlock",
																"src": "17997:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17999:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "17999:77:1"
																			},
																			"nativeSrc": "17999:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17999:79:1"
																		},
																		"nativeSrc": "17999:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17999:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17972:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17972:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17981:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17981:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17968:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17968:3:1"
																		},
																		"nativeSrc": "17968:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17968:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17993:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17993:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17964:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17964:3:1"
																},
																"nativeSrc": "17964:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17964:32:1"
															},
															"nativeSrc": "17961:119:1",
															"nodeType": "YulIf",
															"src": "17961:119:1"
														},
														{
															"nativeSrc": "18090:127:1",
															"nodeType": "YulBlock",
															"src": "18090:127:1",
															"statements": [
																{
																	"nativeSrc": "18105:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18105:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18119:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18119:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18109:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18109:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18134:73:1",
																	"nodeType": "YulAssignment",
																	"src": "18134:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18179:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18179:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18190:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18190:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18175:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18175:3:1"
																				},
																				"nativeSrc": "18175:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18175:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18199:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18199:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "18144:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "18144:30:1"
																		},
																		"nativeSrc": "18144:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18144:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18134:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18134:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "17875:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17921:9:1",
														"nodeType": "YulTypedName",
														"src": "17921:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17932:7:1",
														"nodeType": "YulTypedName",
														"src": "17932:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17944:6:1",
														"nodeType": "YulTypedName",
														"src": "17944:6:1",
														"type": ""
													}
												],
												"src": "17875:349:1"
											},
											{
												"body": {
													"nativeSrc": "18284:87:1",
													"nodeType": "YulBlock",
													"src": "18284:87:1",
													"statements": [
														{
															"nativeSrc": "18294:11:1",
															"nodeType": "YulAssignment",
															"src": "18294:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "18302:3:1",
																"nodeType": "YulIdentifier",
																"src": "18302:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18294:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18294:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18322:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18325:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18325:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18315:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18315:6:1"
																},
																"nativeSrc": "18315:14:1",
																"nodeType": "YulFunctionCall",
																"src": "18315:14:1"
															},
															"nativeSrc": "18315:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "18315:14:1"
														},
														{
															"nativeSrc": "18338:26:1",
															"nodeType": "YulAssignment",
															"src": "18338:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18356:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18356:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18359:4:1",
																		"nodeType": "YulLiteral",
																		"src": "18359:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "18346:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "18346:9:1"
																},
																"nativeSrc": "18346:18:1",
																"nodeType": "YulFunctionCall",
																"src": "18346:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18338:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "18338:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "18230:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "18271:3:1",
														"nodeType": "YulTypedName",
														"src": "18271:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "18279:4:1",
														"nodeType": "YulTypedName",
														"src": "18279:4:1",
														"type": ""
													}
												],
												"src": "18230:141:1"
											},
											{
												"body": {
													"nativeSrc": "18421:49:1",
													"nodeType": "YulBlock",
													"src": "18421:49:1",
													"statements": [
														{
															"nativeSrc": "18431:33:1",
															"nodeType": "YulAssignment",
															"src": "18431:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18449:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "18449:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18456:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18456:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18445:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18445:3:1"
																		},
																		"nativeSrc": "18445:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18445:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18461:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18461:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18441:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18441:3:1"
																},
																"nativeSrc": "18441:23:1",
																"nodeType": "YulFunctionCall",
																"src": "18441:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18431:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18431:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "18377:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18404:5:1",
														"nodeType": "YulTypedName",
														"src": "18404:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18414:6:1",
														"nodeType": "YulTypedName",
														"src": "18414:6:1",
														"type": ""
													}
												],
												"src": "18377:93:1"
											},
											{
												"body": {
													"nativeSrc": "18529:54:1",
													"nodeType": "YulBlock",
													"src": "18529:54:1",
													"statements": [
														{
															"nativeSrc": "18539:37:1",
															"nodeType": "YulAssignment",
															"src": "18539:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18564:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "18564:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18570:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "18570:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "18560:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18560:3:1"
																},
																"nativeSrc": "18560:16:1",
																"nodeType": "YulFunctionCall",
																"src": "18560:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18539:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "18539:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "18476:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18504:4:1",
														"nodeType": "YulTypedName",
														"src": "18504:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18510:5:1",
														"nodeType": "YulTypedName",
														"src": "18510:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18520:8:1",
														"nodeType": "YulTypedName",
														"src": "18520:8:1",
														"type": ""
													}
												],
												"src": "18476:107:1"
											},
											{
												"body": {
													"nativeSrc": "18665:317:1",
													"nodeType": "YulBlock",
													"src": "18665:317:1",
													"statements": [
														{
															"nativeSrc": "18675:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18675:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "18696:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "18696:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18708:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18708:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18692:3:1"
																},
																"nativeSrc": "18692:18:1",
																"nodeType": "YulFunctionCall",
																"src": "18692:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "18679:9:1",
																	"nodeType": "YulTypedName",
																	"src": "18679:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18719:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "18719:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "18750:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18750:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18761:66:1",
																		"nodeType": "YulLiteral",
																		"src": "18761:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "18731:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "18731:18:1"
																},
																"nativeSrc": "18731:97:1",
																"nodeType": "YulFunctionCall",
																"src": "18731:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18723:4:1",
																	"nodeType": "YulTypedName",
																	"src": "18723:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18837:51:1",
															"nodeType": "YulAssignment",
															"src": "18837:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "18868:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18868:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "18879:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "18879:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "18849:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "18849:18:1"
																},
																"nativeSrc": "18849:39:1",
																"nodeType": "YulFunctionCall",
																"src": "18849:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "18837:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "18837:8:1"
																}
															]
														},
														{
															"nativeSrc": "18897:30:1",
															"nodeType": "YulAssignment",
															"src": "18897:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18910:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "18910:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "18921:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "18921:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18917:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18917:3:1"
																		},
																		"nativeSrc": "18917:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18917:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18906:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18906:3:1"
																},
																"nativeSrc": "18906:21:1",
																"nodeType": "YulFunctionCall",
																"src": "18906:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18897:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "18897:5:1"
																}
															]
														},
														{
															"nativeSrc": "18936:40:1",
															"nodeType": "YulAssignment",
															"src": "18936:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18949:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "18949:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "18960:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "18960:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "18970:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "18970:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18956:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18956:3:1"
																		},
																		"nativeSrc": "18956:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18956:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18946:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "18946:2:1"
																},
																"nativeSrc": "18946:30:1",
																"nodeType": "YulFunctionCall",
																"src": "18946:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18936:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18936:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "18589:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18626:5:1",
														"nodeType": "YulTypedName",
														"src": "18626:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "18633:10:1",
														"nodeType": "YulTypedName",
														"src": "18633:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "18645:8:1",
														"nodeType": "YulTypedName",
														"src": "18645:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18658:6:1",
														"nodeType": "YulTypedName",
														"src": "18658:6:1",
														"type": ""
													}
												],
												"src": "18589:393:1"
											},
											{
												"body": {
													"nativeSrc": "19048:82:1",
													"nodeType": "YulBlock",
													"src": "19048:82:1",
													"statements": [
														{
															"nativeSrc": "19058:66:1",
															"nodeType": "YulAssignment",
															"src": "19058:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "19116:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "19116:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "19098:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "19098:17:1"
																				},
																				"nativeSrc": "19098:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19098:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "19089:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "19089:8:1"
																		},
																		"nativeSrc": "19089:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19089:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19071:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "19071:17:1"
																},
																"nativeSrc": "19071:53:1",
																"nodeType": "YulFunctionCall",
																"src": "19071:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19058:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "19058:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "18988:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19028:5:1",
														"nodeType": "YulTypedName",
														"src": "19028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19038:9:1",
														"nodeType": "YulTypedName",
														"src": "19038:9:1",
														"type": ""
													}
												],
												"src": "18988:142:1"
											},
											{
												"body": {
													"nativeSrc": "19183:28:1",
													"nodeType": "YulBlock",
													"src": "19183:28:1",
													"statements": [
														{
															"nativeSrc": "19193:12:1",
															"nodeType": "YulAssignment",
															"src": "19193:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "19200:5:1",
																"nodeType": "YulIdentifier",
																"src": "19200:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19193:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19193:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "19136:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19169:5:1",
														"nodeType": "YulTypedName",
														"src": "19169:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19179:3:1",
														"nodeType": "YulTypedName",
														"src": "19179:3:1",
														"type": ""
													}
												],
												"src": "19136:75:1"
											},
											{
												"body": {
													"nativeSrc": "19293:193:1",
													"nodeType": "YulBlock",
													"src": "19293:193:1",
													"statements": [
														{
															"nativeSrc": "19303:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19303:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "19358:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "19358:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "19327:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "19327:30:1"
																},
																"nativeSrc": "19327:39:1",
																"nodeType": "YulFunctionCall",
																"src": "19327:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "19307:16:1",
																	"nodeType": "YulTypedName",
																	"src": "19307:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19382:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "19382:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "19422:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "19422:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "19416:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "19416:5:1"
																				},
																				"nativeSrc": "19416:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19416:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "19429:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "19429:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "19461:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "19461:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "19437:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "19437:23:1"
																				},
																				"nativeSrc": "19437:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19437:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "19388:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "19388:27:1"
																		},
																		"nativeSrc": "19388:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19388:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "19375:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19375:6:1"
																},
																"nativeSrc": "19375:105:1",
																"nodeType": "YulFunctionCall",
																"src": "19375:105:1"
															},
															"nativeSrc": "19375:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "19375:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "19217:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19270:4:1",
														"nodeType": "YulTypedName",
														"src": "19270:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19276:6:1",
														"nodeType": "YulTypedName",
														"src": "19276:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "19284:7:1",
														"nodeType": "YulTypedName",
														"src": "19284:7:1",
														"type": ""
													}
												],
												"src": "19217:269:1"
											},
											{
												"body": {
													"nativeSrc": "19541:24:1",
													"nodeType": "YulBlock",
													"src": "19541:24:1",
													"statements": [
														{
															"nativeSrc": "19551:8:1",
															"nodeType": "YulAssignment",
															"src": "19551:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "19558:1:1",
																"nodeType": "YulLiteral",
																"src": "19558:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "19551:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19551:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "19492:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19537:3:1",
														"nodeType": "YulTypedName",
														"src": "19537:3:1",
														"type": ""
													}
												],
												"src": "19492:73:1"
											},
											{
												"body": {
													"nativeSrc": "19624:136:1",
													"nodeType": "YulBlock",
													"src": "19624:136:1",
													"statements": [
														{
															"nativeSrc": "19634:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "19634:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "19648:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "19648:30:1"
																},
																"nativeSrc": "19648:32:1",
																"nodeType": "YulFunctionCall",
																"src": "19648:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "19638:6:1",
																	"nodeType": "YulTypedName",
																	"src": "19638:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19733:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "19733:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "19739:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19739:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "19747:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "19747:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "19689:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "19689:43:1"
																},
																"nativeSrc": "19689:65:1",
																"nodeType": "YulFunctionCall",
																"src": "19689:65:1"
															},
															"nativeSrc": "19689:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "19689:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "19571:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19610:4:1",
														"nodeType": "YulTypedName",
														"src": "19610:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "19616:6:1",
														"nodeType": "YulTypedName",
														"src": "19616:6:1",
														"type": ""
													}
												],
												"src": "19571:189:1"
											},
											{
												"body": {
													"nativeSrc": "19816:136:1",
													"nodeType": "YulBlock",
													"src": "19816:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "19883:63:1",
																"nodeType": "YulBlock",
																"src": "19883:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19927:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "19927:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19934:1:1",
																					"nodeType": "YulLiteral",
																					"src": "19934:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "19897:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "19897:29:1"
																			},
																			"nativeSrc": "19897:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19897:39:1"
																		},
																		"nativeSrc": "19897:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "19897:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "19836:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "19836:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "19843:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19843:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "19833:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19833:2:1"
																},
																"nativeSrc": "19833:14:1",
																"nodeType": "YulFunctionCall",
																"src": "19833:14:1"
															},
															"nativeSrc": "19826:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19848:26:1",
																"nodeType": "YulBlock",
																"src": "19848:26:1",
																"statements": [
																	{
																		"nativeSrc": "19850:22:1",
																		"nodeType": "YulAssignment",
																		"src": "19850:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19863:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "19863:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19870:1:1",
																					"nodeType": "YulLiteral",
																					"src": "19870:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19859:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "19859:3:1"
																			},
																			"nativeSrc": "19859:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19859:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "19850:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "19850:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "19830:2:1",
																"nodeType": "YulBlock",
																"src": "19830:2:1",
																"statements": []
															},
															"src": "19826:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "19766:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "19804:5:1",
														"nodeType": "YulTypedName",
														"src": "19804:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "19811:3:1",
														"nodeType": "YulTypedName",
														"src": "19811:3:1",
														"type": ""
													}
												],
												"src": "19766:186:1"
											},
											{
												"body": {
													"nativeSrc": "20037:464:1",
													"nodeType": "YulBlock",
													"src": "20037:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "20063:431:1",
																"nodeType": "YulBlock",
																"src": "20063:431:1",
																"statements": [
																	{
																		"nativeSrc": "20077:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20077:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "20125:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "20125:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "20093:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "20093:31:1"
																			},
																			"nativeSrc": "20093:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20093:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "20081:8:1",
																				"nodeType": "YulTypedName",
																				"src": "20081:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "20144:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "20144:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "20167:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "20167:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "20195:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "20195:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "20177:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "20177:17:1"
																					},
																					"nativeSrc": "20177:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20177:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "20163:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "20163:3:1"
																			},
																			"nativeSrc": "20163:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20163:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "20148:11:1",
																				"nodeType": "YulTypedName",
																				"src": "20148:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "20364:27:1",
																			"nodeType": "YulBlock",
																			"src": "20364:27:1",
																			"statements": [
																				{
																					"nativeSrc": "20366:23:1",
																					"nodeType": "YulAssignment",
																					"src": "20366:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "20381:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "20381:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "20366:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "20366:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "20348:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "20348:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20360:2:1",
																					"nodeType": "YulLiteral",
																					"src": "20360:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "20345:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "20345:2:1"
																			},
																			"nativeSrc": "20345:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20345:18:1"
																		},
																		"nativeSrc": "20342:49:1",
																		"nodeType": "YulIf",
																		"src": "20342:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "20433:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "20433:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "20450:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "20450:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "20478:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "20478:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "20460:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "20460:17:1"
																							},
																							"nativeSrc": "20460:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "20460:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "20446:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "20446:3:1"
																					},
																					"nativeSrc": "20446:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "20446:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "20404:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "20404:28:1"
																			},
																			"nativeSrc": "20404:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20404:80:1"
																		},
																		"nativeSrc": "20404:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "20404:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "20054:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20054:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20059:2:1",
																		"nodeType": "YulLiteral",
																		"src": "20059:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20051:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "20051:2:1"
																},
																"nativeSrc": "20051:11:1",
																"nodeType": "YulFunctionCall",
																"src": "20051:11:1"
															},
															"nativeSrc": "20048:446:1",
															"nodeType": "YulIf",
															"src": "20048:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "19958:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "20013:5:1",
														"nodeType": "YulTypedName",
														"src": "20013:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20020:3:1",
														"nodeType": "YulTypedName",
														"src": "20020:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "20025:10:1",
														"nodeType": "YulTypedName",
														"src": "20025:10:1",
														"type": ""
													}
												],
												"src": "19958:543:1"
											},
											{
												"body": {
													"nativeSrc": "20570:54:1",
													"nodeType": "YulBlock",
													"src": "20570:54:1",
													"statements": [
														{
															"nativeSrc": "20580:37:1",
															"nodeType": "YulAssignment",
															"src": "20580:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "20605:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20605:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "20611:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20611:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "20601:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20601:3:1"
																},
																"nativeSrc": "20601:16:1",
																"nodeType": "YulFunctionCall",
																"src": "20601:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "20580:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "20580:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "20507:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "20545:4:1",
														"nodeType": "YulTypedName",
														"src": "20545:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "20551:5:1",
														"nodeType": "YulTypedName",
														"src": "20551:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "20561:8:1",
														"nodeType": "YulTypedName",
														"src": "20561:8:1",
														"type": ""
													}
												],
												"src": "20507:117:1"
											},
											{
												"body": {
													"nativeSrc": "20681:118:1",
													"nodeType": "YulBlock",
													"src": "20681:118:1",
													"statements": [
														{
															"nativeSrc": "20691:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "20691:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "20740:1:1",
																						"nodeType": "YulLiteral",
																						"src": "20740:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "20743:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "20743:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "20736:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "20736:3:1"
																				},
																				"nativeSrc": "20736:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "20736:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "20755:1:1",
																						"nodeType": "YulLiteral",
																						"src": "20755:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "20751:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "20751:3:1"
																				},
																				"nativeSrc": "20751:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "20751:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "20707:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "20707:28:1"
																		},
																		"nativeSrc": "20707:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20707:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "20703:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20703:3:1"
																},
																"nativeSrc": "20703:56:1",
																"nodeType": "YulFunctionCall",
																"src": "20703:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "20695:4:1",
																	"nodeType": "YulTypedName",
																	"src": "20695:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20768:25:1",
															"nodeType": "YulAssignment",
															"src": "20768:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20782:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20782:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "20788:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20788:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20778:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20778:3:1"
																},
																"nativeSrc": "20778:15:1",
																"nodeType": "YulFunctionCall",
																"src": "20778:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20768:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20768:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "20630:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20658:4:1",
														"nodeType": "YulTypedName",
														"src": "20658:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "20664:5:1",
														"nodeType": "YulTypedName",
														"src": "20664:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "20674:6:1",
														"nodeType": "YulTypedName",
														"src": "20674:6:1",
														"type": ""
													}
												],
												"src": "20630:169:1"
											},
											{
												"body": {
													"nativeSrc": "20885:214:1",
													"nodeType": "YulBlock",
													"src": "20885:214:1",
													"statements": [
														{
															"nativeSrc": "21018:37:1",
															"nodeType": "YulAssignment",
															"src": "21018:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21045:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21045:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "21051:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21051:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "21026:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "21026:18:1"
																},
																"nativeSrc": "21026:29:1",
																"nodeType": "YulFunctionCall",
																"src": "21026:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21018:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21018:4:1"
																}
															]
														},
														{
															"nativeSrc": "21064:29:1",
															"nodeType": "YulAssignment",
															"src": "21064:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "21075:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21075:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "21085:1:1",
																				"nodeType": "YulLiteral",
																				"src": "21085:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "21088:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "21088:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "21081:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21081:3:1"
																		},
																		"nativeSrc": "21081:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21081:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "21072:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "21072:2:1"
																},
																"nativeSrc": "21072:21:1",
																"nodeType": "YulFunctionCall",
																"src": "21072:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "21064:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21064:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "20804:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20866:4:1",
														"nodeType": "YulTypedName",
														"src": "20866:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "20872:3:1",
														"nodeType": "YulTypedName",
														"src": "20872:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "20880:4:1",
														"nodeType": "YulTypedName",
														"src": "20880:4:1",
														"type": ""
													}
												],
												"src": "20804:295:1"
											},
											{
												"body": {
													"nativeSrc": "21196:1303:1",
													"nodeType": "YulBlock",
													"src": "21196:1303:1",
													"statements": [
														{
															"nativeSrc": "21207:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "21207:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "21254:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21254:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "21221:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "21221:32:1"
																},
																"nativeSrc": "21221:37:1",
																"nodeType": "YulFunctionCall",
																"src": "21221:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "21211:6:1",
																	"nodeType": "YulTypedName",
																	"src": "21211:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21343:22:1",
																"nodeType": "YulBlock",
																"src": "21343:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "21345:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "21345:16:1"
																			},
																			"nativeSrc": "21345:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "21345:18:1"
																		},
																		"nativeSrc": "21345:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "21345:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21315:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21315:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21323:18:1",
																		"nodeType": "YulLiteral",
																		"src": "21323:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21312:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "21312:2:1"
																},
																"nativeSrc": "21312:30:1",
																"nodeType": "YulFunctionCall",
																"src": "21312:30:1"
															},
															"nativeSrc": "21309:56:1",
															"nodeType": "YulIf",
															"src": "21309:56:1"
														},
														{
															"nativeSrc": "21375:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "21375:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "21421:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "21421:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "21415:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "21415:5:1"
																		},
																		"nativeSrc": "21415:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21415:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "21389:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "21389:25:1"
																},
																"nativeSrc": "21389:38:1",
																"nodeType": "YulFunctionCall",
																"src": "21389:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "21379:6:1",
																	"nodeType": "YulTypedName",
																	"src": "21379:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "21520:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21520:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "21526:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21526:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "21534:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21534:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "21474:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "21474:45:1"
																},
																"nativeSrc": "21474:67:1",
																"nodeType": "YulFunctionCall",
																"src": "21474:67:1"
															},
															"nativeSrc": "21474:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "21474:67:1"
														},
														{
															"nativeSrc": "21551:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "21551:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "21568:1:1",
																"nodeType": "YulLiteral",
																"src": "21568:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21555:9:1",
																	"nodeType": "YulTypedName",
																	"src": "21555:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "21579:17:1",
															"nodeType": "YulAssignment",
															"src": "21579:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "21592:4:1",
																"nodeType": "YulLiteral",
																"src": "21592:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "21579:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "21579:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "21643:611:1",
																		"nodeType": "YulBlock",
																		"src": "21643:611:1",
																		"statements": [
																			{
																				"nativeSrc": "21657:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21657:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "21676:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "21676:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "21688:4:1",
																									"nodeType": "YulLiteral",
																									"src": "21688:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "21684:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "21684:3:1"
																							},
																							"nativeSrc": "21684:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "21684:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "21672:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "21672:3:1"
																					},
																					"nativeSrc": "21672:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "21672:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "21661:7:1",
																						"nodeType": "YulTypedName",
																						"src": "21661:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21708:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21708:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21754:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "21754:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "21722:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "21722:31:1"
																					},
																					"nativeSrc": "21722:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "21722:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "21712:6:1",
																						"nodeType": "YulTypedName",
																						"src": "21712:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "21772:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21772:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21781:1:1",
																					"nodeType": "YulLiteral",
																					"src": "21781:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "21776:1:1",
																						"nodeType": "YulTypedName",
																						"src": "21776:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21840:163:1",
																					"nodeType": "YulBlock",
																					"src": "21840:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21865:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "21865:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "21883:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "21883:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "21888:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "21888:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "21879:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "21879:3:1"
																												},
																												"nativeSrc": "21879:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "21879:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "21873:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "21873:5:1"
																										},
																										"nativeSrc": "21873:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "21873:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21858:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "21858:6:1"
																								},
																								"nativeSrc": "21858:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "21858:42:1"
																							},
																							"nativeSrc": "21858:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "21858:42:1"
																						},
																						{
																							"nativeSrc": "21917:24:1",
																							"nodeType": "YulAssignment",
																							"src": "21917:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21931:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "21931:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21939:1:1",
																										"nodeType": "YulLiteral",
																										"src": "21939:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21927:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "21927:3:1"
																								},
																								"nativeSrc": "21927:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "21927:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "21917:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "21917:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "21958:31:1",
																							"nodeType": "YulAssignment",
																							"src": "21958:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "21975:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "21975:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21986:2:1",
																										"nodeType": "YulLiteral",
																										"src": "21986:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21971:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "21971:3:1"
																								},
																								"nativeSrc": "21971:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "21971:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "21958:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "21958:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "21806:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "21806:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21809:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "21809:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21803:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "21803:2:1"
																					},
																					"nativeSrc": "21803:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "21803:14:1"
																				},
																				"nativeSrc": "21795:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "21818:21:1",
																					"nodeType": "YulBlock",
																					"src": "21818:21:1",
																					"statements": [
																						{
																							"nativeSrc": "21820:17:1",
																							"nodeType": "YulAssignment",
																							"src": "21820:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "21829:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "21829:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21832:4:1",
																										"nodeType": "YulLiteral",
																										"src": "21832:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21825:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "21825:3:1"
																								},
																								"nativeSrc": "21825:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "21825:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "21820:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "21820:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "21799:3:1",
																					"nodeType": "YulBlock",
																					"src": "21799:3:1",
																					"statements": []
																				},
																				"src": "21795:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "22039:156:1",
																					"nodeType": "YulBlock",
																					"src": "22039:156:1",
																					"statements": [
																						{
																							"nativeSrc": "22057:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "22057:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22084:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "22084:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22089:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "22089:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22080:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "22080:3:1"
																										},
																										"nativeSrc": "22080:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "22080:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22074:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "22074:5:1"
																								},
																								"nativeSrc": "22074:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "22074:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "22061:9:1",
																									"nodeType": "YulTypedName",
																									"src": "22061:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "22124:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "22124:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "22151:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "22151:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "22166:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "22166:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "22174:4:1",
																														"nodeType": "YulLiteral",
																														"src": "22174:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "22162:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "22162:3:1"
																												},
																												"nativeSrc": "22162:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "22162:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "22132:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "22132:18:1"
																										},
																										"nativeSrc": "22132:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "22132:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "22117:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "22117:6:1"
																								},
																								"nativeSrc": "22117:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "22117:64:1"
																							},
																							"nativeSrc": "22117:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "22117:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "22022:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "22022:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "22031:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "22031:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "22019:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "22019:2:1"
																					},
																					"nativeSrc": "22019:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "22019:19:1"
																				},
																				"nativeSrc": "22016:179:1",
																				"nodeType": "YulIf",
																				"src": "22016:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22215:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "22215:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "22229:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "22229:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "22237:1:1",
																											"nodeType": "YulLiteral",
																											"src": "22237:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "22225:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "22225:3:1"
																									},
																									"nativeSrc": "22225:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "22225:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "22241:1:1",
																									"nodeType": "YulLiteral",
																									"src": "22241:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "22221:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "22221:3:1"
																							},
																							"nativeSrc": "22221:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "22221:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22208:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "22208:6:1"
																					},
																					"nativeSrc": "22208:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "22208:36:1"
																				},
																				"nativeSrc": "22208:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "22208:36:1"
																			}
																		]
																	},
																	"nativeSrc": "21636:618:1",
																	"nodeType": "YulCase",
																	"src": "21636:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21641:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21641:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "22271:222:1",
																		"nodeType": "YulBlock",
																		"src": "22271:222:1",
																		"statements": [
																			{
																				"nativeSrc": "22285:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22285:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "22298:1:1",
																					"nodeType": "YulLiteral",
																					"src": "22298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "22289:5:1",
																						"nodeType": "YulTypedName",
																						"src": "22289:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "22322:67:1",
																					"nodeType": "YulBlock",
																					"src": "22322:67:1",
																					"statements": [
																						{
																							"nativeSrc": "22340:35:1",
																							"nodeType": "YulAssignment",
																							"src": "22340:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "22359:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "22359:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "22364:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "22364:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "22355:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "22355:3:1"
																										},
																										"nativeSrc": "22355:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "22355:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "22349:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "22349:5:1"
																								},
																								"nativeSrc": "22349:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "22349:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "22340:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "22340:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "22315:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "22315:6:1"
																				},
																				"nativeSrc": "22312:77:1",
																				"nodeType": "YulIf",
																				"src": "22312:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22409:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "22409:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "22468:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "22468:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "22475:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "22475:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "22415:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "22415:52:1"
																							},
																							"nativeSrc": "22415:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "22415:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "22402:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "22402:6:1"
																					},
																					"nativeSrc": "22402:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "22402:81:1"
																				},
																				"nativeSrc": "22402:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "22402:81:1"
																			}
																		]
																	},
																	"nativeSrc": "22263:230:1",
																	"nodeType": "YulCase",
																	"src": "22263:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "21616:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21616:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21624:2:1",
																		"nodeType": "YulLiteral",
																		"src": "21624:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21613:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "21613:2:1"
																},
																"nativeSrc": "21613:14:1",
																"nodeType": "YulFunctionCall",
																"src": "21613:14:1"
															},
															"nativeSrc": "21606:887:1",
															"nodeType": "YulSwitch",
															"src": "21606:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "21104:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "21185:4:1",
														"nodeType": "YulTypedName",
														"src": "21185:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "21191:3:1",
														"nodeType": "YulTypedName",
														"src": "21191:3:1",
														"type": ""
													}
												],
												"src": "21104:1395:1"
											},
											{
												"body": {
													"nativeSrc": "22631:206:1",
													"nodeType": "YulBlock",
													"src": "22631:206:1",
													"statements": [
														{
															"nativeSrc": "22641:26:1",
															"nodeType": "YulAssignment",
															"src": "22641:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22653:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "22653:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "22664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22649:3:1"
																},
																"nativeSrc": "22649:18:1",
																"nodeType": "YulFunctionCall",
																"src": "22649:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22641:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "22641:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22721:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22721:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22734:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22734:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22745:1:1",
																				"nodeType": "YulLiteral",
																				"src": "22745:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22730:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22730:3:1"
																		},
																		"nativeSrc": "22730:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22730:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22677:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22677:43:1"
																},
																"nativeSrc": "22677:71:1",
																"nodeType": "YulFunctionCall",
																"src": "22677:71:1"
															},
															"nativeSrc": "22677:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "22677:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22802:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "22802:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "22815:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22826:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22826:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22811:3:1"
																		},
																		"nativeSrc": "22811:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22811:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22758:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "22758:43:1"
																},
																"nativeSrc": "22758:72:1",
																"nodeType": "YulFunctionCall",
																"src": "22758:72:1"
															},
															"nativeSrc": "22758:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "22758:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22505:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22595:9:1",
														"nodeType": "YulTypedName",
														"src": "22595:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22607:6:1",
														"nodeType": "YulTypedName",
														"src": "22607:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22615:6:1",
														"nodeType": "YulTypedName",
														"src": "22615:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22626:4:1",
														"nodeType": "YulTypedName",
														"src": "22626:4:1",
														"type": ""
													}
												],
												"src": "22505:332:1"
											},
											{
												"body": {
													"nativeSrc": "22871:152:1",
													"nodeType": "YulBlock",
													"src": "22871:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22888:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22888:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22891:77:1",
																		"nodeType": "YulLiteral",
																		"src": "22891:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22881:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22881:6:1"
																},
																"nativeSrc": "22881:88:1",
																"nodeType": "YulFunctionCall",
																"src": "22881:88:1"
															},
															"nativeSrc": "22881:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "22881:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22985:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22985:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22988:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22988:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22978:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22978:6:1"
																},
																"nativeSrc": "22978:15:1",
																"nodeType": "YulFunctionCall",
																"src": "22978:15:1"
															},
															"nativeSrc": "22978:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "22978:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "23009:1:1",
																		"nodeType": "YulLiteral",
																		"src": "23009:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23012:4:1",
																		"nodeType": "YulLiteral",
																		"src": "23012:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "23002:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "23002:6:1"
																},
																"nativeSrc": "23002:15:1",
																"nodeType": "YulFunctionCall",
																"src": "23002:15:1"
															},
															"nativeSrc": "23002:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "23002:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "22843:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "22843:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IProgress_$3062_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IProgress_$3062_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IProgress_$3062_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IProgress_$3062__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IProgress_$3062_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076(memPtr) {\n\n        mstore(add(memPtr, 0), \"The caller cannot run this funct\")\n\n        mstore(add(memPtr, 32), \"ion\")\n\n    }\n\n    function abi_encode_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c80638da5cb5b116100ab578063b88d4fde1161006f578063b88d4fde1461031a578063c87b56dd14610336578063d85d3d2714610366578063e985e9c514610396578063f2fde38b146103c65761012a565b80638da5cb5b1461028857806395d89b41146102a65780639f181b5e146102c4578063a22cb465146102e2578063b876e3b6146102fe5761012a565b806342842e0e116100f257806342842e0e146101e45780635f53575f146102005780636352211e1461021e57806370a082311461024e578063715018a61461027e5761012a565b806301ffc9a71461012e57806306fdde031461015e578063081812fc1461017c578063095ea7b3146101ac57806323b872dd146101c8575b5f80fd5b61014860048036038101906101439190611bd0565b6103e2565b6040516101559190611c15565b60405180910390f35b610166610442565b6040516101739190611cb8565b60405180910390f35b61019660048036038101906101919190611d0b565b6104d1565b6040516101a39190611d75565b60405180910390f35b6101c660048036038101906101c19190611db8565b6104ec565b005b6101e260048036038101906101dd9190611df6565b610502565b005b6101fe60048036038101906101f99190611df6565b610601565b005b610208610620565b6040516102159190611ea1565b60405180910390f35b61023860048036038101906102339190611d0b565b610645565b6040516102459190611d75565b60405180910390f35b61026860048036038101906102639190611eba565b610656565b6040516102759190611ef4565b60405180910390f35b61028661070c565b005b61029061071f565b60405161029d9190611d75565b60405180910390f35b6102ae610747565b6040516102bb9190611cb8565b60405180910390f35b6102cc6107d7565b6040516102d99190611ef4565b60405180910390f35b6102fc60048036038101906102f79190611f37565b6107dd565b005b61031860048036038101906103139190611eba565b6107f3565b005b610334600480360381019061032f91906120a1565b61083e565b005b610350600480360381019061034b9190611d0b565b61085b565b60405161035d9190611cb8565b60405180910390f35b610380600480360381019061037b91906121bf565b610966565b60405161038d9190611ef4565b60405180910390f35b6103b060048036038101906103ab9190612206565b610a2f565b6040516103bd9190611c15565b60405180910390f35b6103e060048036038101906103db9190611eba565b610abd565b005b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043b575061043a82610b41565b5b9050919050565b60605f805461045090612271565b80601f016020809104026020016040519081016040528092919081815260200182805461047c90612271565b80156104c75780601f1061049e576101008083540402835291602001916104c7565b820191905f5260205f20905b8154815290600101906020018083116104aa57829003601f168201915b5050505050905090565b5f6104db82610c22565b506104e582610ca8565b9050919050565b6104fe82826104f9610ce1565b610ce8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610572575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105699190611d75565b60405180910390fd5b5f6105858383610580610ce1565b610cfa565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105fb578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016105f2939291906122a1565b60405180910390fd5b50505050565b61061b83838360405180602001604052805f81525061083e565b505050565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61064f82610c22565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106c7575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106be9190611d75565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610714610f05565b61071d5f610f8c565b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461075690612271565b80601f016020809104026020016040519081016040528092919081815260200182805461078290612271565b80156107cd5780601f106107a4576101008083540402835291602001916107cd565b820191905f5260205f20905b8154815290600101906020018083116107b057829003601f168201915b5050505050905090565b60095481565b6107ef6107e8610ce1565b838361104f565b5050565b6107fb610f05565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610849848484610502565b610855848484846111b8565b50505050565b606061086682610c22565b505f60065f8481526020019081526020015f20805461088490612271565b80601f01602080910402602001604051908101604052809291908181526020018280546108b090612271565b80156108fb5780601f106108d2576101008083540402835291602001916108fb565b820191905f5260205f20905b8154815290600101906020018083116108de57829003601f168201915b505050505090505f61090b61136a565b90505f81510361091f578192505050610961565b5f8251111561095357808260405160200161093b929190612310565b60405160208183030381529060405292505050610961565b61095c84611380565b925050505b919050565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed906123a3565b60405180910390fd5b60095f815480929190610a08906123ee565b9190505550610a19336009546113e6565b610a2560095483611403565b6009549050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610ac5610f05565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b35575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b2c9190611d75565b60405180910390fd5b610b3e81610f8c565b50565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610c0b57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610c1b5750610c1a8261145d565b5b9050919050565b5f80610c2d836114c6565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c9f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610c969190611ef4565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610cf583838360016114ff565b505050565b5f80610d05846114c6565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610d4657610d458184866116be565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610dd157610d855f855f806114ff565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610e5057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f0d610ce1565b73ffffffffffffffffffffffffffffffffffffffff16610f2b61071f565b73ffffffffffffffffffffffffffffffffffffffff1614610f8a57610f4e610ce1565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f819190611d75565b60405180910390fd5b565b5f60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110bf57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110b69190611d75565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111ab9190611c15565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611364578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111fb610ce1565b8685856040518563ffffffff1660e01b815260040161121d9493929190612487565b6020604051808303815f875af192505050801561125857506040513d601f19601f8201168201806040525081019061125591906124e5565b60015b6112d9573d805f8114611286576040519150601f19603f3d011682016040523d82523d5f602084013e61128b565b606091505b505f8151036112d157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112c89190611d75565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461136257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113599190611d75565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061138b82610c22565b505f61139561136a565b90505f8151116113b35760405180602001604052805f8152506113de565b806113bd84611781565b6040516020016113ce929190612310565b6040516020818303038152906040525b915050919050565b6113ff828260405180602001604052805f81525061184b565b5050565b8060065f8481526020019081526020015f20908161142191906126a4565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516114519190611ef4565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061153757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611669575f61154684610c22565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115b057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115c357506115c18184610a2f565b155b1561160557826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115fc9190611d75565b60405180910390fd5b811561166757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116c9838383611866565b61177c575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361173d57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117349190611ef4565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611773929190612773565b60405180910390fd5b505050565b60605f600161178f84611926565b0190505f8167ffffffffffffffff8111156117ad576117ac611f7d565b5b6040519080825280601f01601f1916602001820160405280156117df5781602001600182028036833780820191505090505b5090505f82602001820190505b600115611840578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816118355761183461279a565b5b0494505f85036117ec575b819350505050919050565b6118558383611a77565b6118615f8484846111b8565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561191d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118de57506118dd8484610a2f565b5b8061191c57508273ffffffffffffffffffffffffffffffffffffffff1661190483610ca8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611982577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119785761197761279a565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106119bf576d04ee2d6d415b85acef810000000083816119b5576119b461279a565b5b0492506020810190505b662386f26fc1000083106119ee57662386f26fc1000083816119e4576119e361279a565b5b0492506010810190505b6305f5e1008310611a17576305f5e1008381611a0d57611a0c61279a565b5b0492506008810190505b6127108310611a3c576127108381611a3257611a3161279a565b5b0492506004810190505b60648310611a5f5760648381611a5557611a5461279a565b5b0492506002810190505b600a8310611a6e576001810190505b80915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ae7575f6040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611ade9190611d75565b60405180910390fd5b5f611af383835f610cfa565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b65575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b5c9190611d75565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611baf81611b7b565b8114611bb9575f80fd5b50565b5f81359050611bca81611ba6565b92915050565b5f60208284031215611be557611be4611b73565b5b5f611bf284828501611bbc565b91505092915050565b5f8115159050919050565b611c0f81611bfb565b82525050565b5f602082019050611c285f830184611c06565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c65578082015181840152602081019050611c4a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611c8a82611c2e565b611c948185611c38565b9350611ca4818560208601611c48565b611cad81611c70565b840191505092915050565b5f6020820190508181035f830152611cd08184611c80565b905092915050565b5f819050919050565b611cea81611cd8565b8114611cf4575f80fd5b50565b5f81359050611d0581611ce1565b92915050565b5f60208284031215611d2057611d1f611b73565b5b5f611d2d84828501611cf7565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d5f82611d36565b9050919050565b611d6f81611d55565b82525050565b5f602082019050611d885f830184611d66565b92915050565b611d9781611d55565b8114611da1575f80fd5b50565b5f81359050611db281611d8e565b92915050565b5f8060408385031215611dce57611dcd611b73565b5b5f611ddb85828601611da4565b9250506020611dec85828601611cf7565b9150509250929050565b5f805f60608486031215611e0d57611e0c611b73565b5b5f611e1a86828701611da4565b9350506020611e2b86828701611da4565b9250506040611e3c86828701611cf7565b9150509250925092565b5f819050919050565b5f611e69611e64611e5f84611d36565b611e46565b611d36565b9050919050565b5f611e7a82611e4f565b9050919050565b5f611e8b82611e70565b9050919050565b611e9b81611e81565b82525050565b5f602082019050611eb45f830184611e92565b92915050565b5f60208284031215611ecf57611ece611b73565b5b5f611edc84828501611da4565b91505092915050565b611eee81611cd8565b82525050565b5f602082019050611f075f830184611ee5565b92915050565b611f1681611bfb565b8114611f20575f80fd5b50565b5f81359050611f3181611f0d565b92915050565b5f8060408385031215611f4d57611f4c611b73565b5b5f611f5a85828601611da4565b9250506020611f6b85828601611f23565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611fb382611c70565b810181811067ffffffffffffffff82111715611fd257611fd1611f7d565b5b80604052505050565b5f611fe4611b6a565b9050611ff08282611faa565b919050565b5f67ffffffffffffffff82111561200f5761200e611f7d565b5b61201882611c70565b9050602081019050919050565b828183375f83830152505050565b5f61204561204084611ff5565b611fdb565b90508281526020810184848401111561206157612060611f79565b5b61206c848285612025565b509392505050565b5f82601f83011261208857612087611f75565b5b8135612098848260208601612033565b91505092915050565b5f805f80608085870312156120b9576120b8611b73565b5b5f6120c687828801611da4565b94505060206120d787828801611da4565b93505060406120e887828801611cf7565b925050606085013567ffffffffffffffff81111561210957612108611b77565b5b61211587828801612074565b91505092959194509250565b5f67ffffffffffffffff82111561213b5761213a611f7d565b5b61214482611c70565b9050602081019050919050565b5f61216361215e84612121565b611fdb565b90508281526020810184848401111561217f5761217e611f79565b5b61218a848285612025565b509392505050565b5f82601f8301126121a6576121a5611f75565b5b81356121b6848260208601612151565b91505092915050565b5f602082840312156121d4576121d3611b73565b5b5f82013567ffffffffffffffff8111156121f1576121f0611b77565b5b6121fd84828501612192565b91505092915050565b5f806040838503121561221c5761221b611b73565b5b5f61222985828601611da4565b925050602061223a85828601611da4565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061228857607f821691505b60208210810361229b5761229a612244565b5b50919050565b5f6060820190506122b45f830186611d66565b6122c16020830185611ee5565b6122ce6040830184611d66565b949350505050565b5f81905092915050565b5f6122ea82611c2e565b6122f481856122d6565b9350612304818560208601611c48565b80840191505092915050565b5f61231b82856122e0565b915061232782846122e0565b91508190509392505050565b7f5468652063616c6c65722063616e6e6f742072756e20746869732066756e63745f8201527f696f6e0000000000000000000000000000000000000000000000000000000000602082015250565b5f61238d602383611c38565b915061239882612333565b604082019050919050565b5f6020820190508181035f8301526123ba81612381565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123f882611cd8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361242a576124296123c1565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61245982612435565b612463818561243f565b9350612473818560208601611c48565b61247c81611c70565b840191505092915050565b5f60808201905061249a5f830187611d66565b6124a76020830186611d66565b6124b46040830185611ee5565b81810360608301526124c6818461244f565b905095945050505050565b5f815190506124df81611ba6565b92915050565b5f602082840312156124fa576124f9611b73565b5b5f612507848285016124d1565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261256c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612531565b6125768683612531565b95508019841693508086168417925050509392505050565b5f6125a86125a361259e84611cd8565b611e46565b611cd8565b9050919050565b5f819050919050565b6125c18361258e565b6125d56125cd826125af565b84845461253d565b825550505050565b5f90565b6125e96125dd565b6125f48184846125b8565b505050565b5b818110156126175761260c5f826125e1565b6001810190506125fa565b5050565b601f82111561265c5761262d81612510565b61263684612522565b81016020851015612645578190505b61265961265185612522565b8301826125f9565b50505b505050565b5f82821c905092915050565b5f61267c5f1984600802612661565b1980831691505092915050565b5f612694838361266d565b9150826002028217905092915050565b6126ad82611c2e565b67ffffffffffffffff8111156126c6576126c5611f7d565b5b6126d08254612271565b6126db82828561261b565b5f60209050601f83116001811461270c575f84156126fa578287015190505b6127048582612689565b86555061276b565b601f19841661271a86612510565b5f5b828110156127415784890151825560018201915060208501945060208101905061271c565b8683101561275e578489015161275a601f89168261266d565b8355505b6001600288020188555050505b505050505050565b5f6040820190506127865f830185611d66565b6127936020830184611ee5565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffdfea2646970667358221220eaea9ea8e823e8af3cc66426d6c856cea0b892d3d003c41d50550939ea54537c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0xD85D3D27 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x9F181B5E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xB876E3B6 EQ PUSH2 0x2FE JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x5F53575F EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x442 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x208 PUSH2 0x620 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x70C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1F37 JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x7F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x20A1 JUMP JUMPDEST PUSH2 0x83E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x350 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x1CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x21BF JUMP JUMPDEST PUSH2 0x966 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2206 JUMP JUMPDEST PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43A DUP3 PUSH2 0xB41 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x450 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47C SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x49E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x4DB DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH2 0x4E5 DUP3 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FE DUP3 DUP3 PUSH2 0x4F9 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x572 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x585 DUP4 DUP4 PUSH2 0x580 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5FB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x61B DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x83E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x64F DUP3 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BE SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x714 PUSH2 0xF05 JUMP JUMPDEST PUSH2 0x71D PUSH0 PUSH2 0xF8C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x756 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x782 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7EF PUSH2 0x7E8 PUSH2 0xCE1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x104F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FB PUSH2 0xF05 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x849 DUP5 DUP5 DUP5 PUSH2 0x502 JUMP JUMPDEST PUSH2 0x855 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x866 DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x884 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B0 SWAP1 PUSH2 0x2271 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x90B PUSH2 0x136A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x91F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x961 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x953 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x93B SWAP3 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x961 JUMP JUMPDEST PUSH2 0x95C DUP5 PUSH2 0x1380 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xA08 SWAP1 PUSH2 0x23EE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xA19 CALLER PUSH1 0x9 SLOAD PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0xA25 PUSH1 0x9 SLOAD DUP4 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAC5 PUSH2 0xF05 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB35 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB3E DUP2 PUSH2 0xF8C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xC0B JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xC1B JUMPI POP PUSH2 0xC1A DUP3 PUSH2 0x145D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC2D DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x14FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD05 DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD46 JUMPI PUSH2 0xD45 DUP2 DUP5 DUP7 PUSH2 0x16BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD1 JUMPI PUSH2 0xD85 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE50 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF0D PUSH2 0xCE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF2B PUSH2 0x71F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF8A JUMPI PUSH2 0xF4E PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10BF JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B6 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1364 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11FB PUSH2 0xCE1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2487 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1258 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1255 SWAP2 SWAP1 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1286 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x128B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x12D1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1362 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x138B DUP3 PUSH2 0xC22 JUMP JUMPDEST POP PUSH0 PUSH2 0x1395 PUSH2 0x136A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x13B3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x13DE JUMP JUMPDEST DUP1 PUSH2 0x13BD DUP5 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x13CE SWAP3 SWAP2 SWAP1 PUSH2 0x2310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x184B JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1421 SWAP2 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1451 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1537 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1669 JUMPI PUSH0 PUSH2 0x1546 DUP5 PUSH2 0xC22 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15B0 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15C3 JUMPI POP PUSH2 0x15C1 DUP2 DUP5 PUSH2 0xA2F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1605 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15FC SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1667 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP4 DUP4 DUP4 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x177C JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x173D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x1EF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1773 SWAP3 SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x178F DUP5 PUSH2 0x1926 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17AD JUMPI PUSH2 0x17AC PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x17DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1840 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1835 JUMPI PUSH2 0x1834 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17EC JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1855 DUP4 DUP4 PUSH2 0x1A77 JUMP JUMPDEST PUSH2 0x1861 PUSH0 DUP5 DUP5 DUP5 PUSH2 0x11B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x191D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x18DE JUMPI POP PUSH2 0x18DD DUP5 DUP5 PUSH2 0xA2F JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x191C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1904 DUP4 PUSH2 0xCA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1982 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1978 JUMPI PUSH2 0x1977 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x19BF JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x19B5 JUMPI PUSH2 0x19B4 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x19EE JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A17 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A0D JUMPI PUSH2 0x1A0C PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1A3C JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A32 JUMPI PUSH2 0x1A31 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1A5F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1A55 JUMPI PUSH2 0x1A54 PUSH2 0x279A JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1A6E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ADE SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1AF3 DUP4 DUP4 PUSH0 PUSH2 0xCFA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B65 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B5C SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BAF DUP2 PUSH2 0x1B7B JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BCA DUP2 PUSH2 0x1BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BF2 DUP5 DUP3 DUP6 ADD PUSH2 0x1BBC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C0F DUP2 PUSH2 0x1BFB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C28 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C65 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C4A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x1C94 DUP2 DUP6 PUSH2 0x1C38 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CA4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1CAD DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD0 DUP2 DUP5 PUSH2 0x1C80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEA DUP2 PUSH2 0x1CD8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D05 DUP2 PUSH2 0x1CE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D20 JUMPI PUSH2 0x1D1F PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D2D DUP5 DUP3 DUP6 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D5F DUP3 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6F DUP2 PUSH2 0x1D55 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D88 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D97 DUP2 PUSH2 0x1D55 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB2 DUP2 PUSH2 0x1D8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCE JUMPI PUSH2 0x1DCD PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DDB DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DEC DUP6 DUP3 DUP7 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E0D JUMPI PUSH2 0x1E0C PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E1A DUP7 DUP3 DUP8 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E2B DUP7 DUP3 DUP8 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E3C DUP7 DUP3 DUP8 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E69 PUSH2 0x1E64 PUSH2 0x1E5F DUP5 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7A DUP3 PUSH2 0x1E4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E8B DUP3 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1E81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECF JUMPI PUSH2 0x1ECE PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EDC DUP5 DUP3 DUP6 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EEE DUP2 PUSH2 0x1CD8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F07 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F16 DUP2 PUSH2 0x1BFB JUMP JUMPDEST DUP2 EQ PUSH2 0x1F20 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F4D JUMPI PUSH2 0x1F4C PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5A DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F6B DUP6 DUP3 DUP7 ADD PUSH2 0x1F23 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FB3 DUP3 PUSH2 0x1C70 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FD2 JUMPI PUSH2 0x1FD1 PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE4 PUSH2 0x1B6A JUMP JUMPDEST SWAP1 POP PUSH2 0x1FF0 DUP3 DUP3 PUSH2 0x1FAA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x200F JUMPI PUSH2 0x200E PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x2018 DUP3 PUSH2 0x1C70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2045 PUSH2 0x2040 DUP5 PUSH2 0x1FF5 JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x1F79 JUMP JUMPDEST JUMPDEST PUSH2 0x206C DUP5 DUP3 DUP6 PUSH2 0x2025 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2088 JUMPI PUSH2 0x2087 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2098 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2033 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x20B9 JUMPI PUSH2 0x20B8 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20C6 DUP8 DUP3 DUP9 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x20D7 DUP8 DUP3 DUP9 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20E8 DUP8 DUP3 DUP9 ADD PUSH2 0x1CF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2109 JUMPI PUSH2 0x2108 PUSH2 0x1B77 JUMP JUMPDEST JUMPDEST PUSH2 0x2115 DUP8 DUP3 DUP9 ADD PUSH2 0x2074 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x2144 DUP3 PUSH2 0x1C70 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2163 PUSH2 0x215E DUP5 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x1FDB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x217F JUMPI PUSH2 0x217E PUSH2 0x1F79 JUMP JUMPDEST JUMPDEST PUSH2 0x218A DUP5 DUP3 DUP6 PUSH2 0x2025 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21A6 JUMPI PUSH2 0x21A5 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21B6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D4 JUMPI PUSH2 0x21D3 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F1 JUMPI PUSH2 0x21F0 PUSH2 0x1B77 JUMP JUMPDEST JUMPDEST PUSH2 0x21FD DUP5 DUP3 DUP6 ADD PUSH2 0x2192 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x221C JUMPI PUSH2 0x221B PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2229 DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x223A DUP6 DUP3 DUP7 ADD PUSH2 0x1DA4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2288 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x229B JUMPI PUSH2 0x229A PUSH2 0x2244 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22B4 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x22C1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1EE5 JUMP JUMPDEST PUSH2 0x22CE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D66 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22EA DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH2 0x22F4 DUP2 DUP6 PUSH2 0x22D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2304 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x231B DUP3 DUP6 PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2327 DUP3 DUP5 PUSH2 0x22E0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5468652063616C6C65722063616E6E6F742072756E20746869732066756E6374 PUSH0 DUP3 ADD MSTORE PUSH32 0x696F6E0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x238D PUSH1 0x23 DUP4 PUSH2 0x1C38 JUMP JUMPDEST SWAP2 POP PUSH2 0x2398 DUP3 PUSH2 0x2333 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23BA DUP2 PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x23F8 DUP3 PUSH2 0x1CD8 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x23C1 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2459 DUP3 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x2463 DUP2 DUP6 PUSH2 0x243F JUMP JUMPDEST SWAP4 POP PUSH2 0x2473 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x247C DUP2 PUSH2 0x1C70 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x249A PUSH0 DUP4 ADD DUP8 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x24A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x24B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x24C6 DUP2 DUP5 PUSH2 0x244F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24DF DUP2 PUSH2 0x1BA6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24FA JUMPI PUSH2 0x24F9 PUSH2 0x1B73 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2507 DUP5 DUP3 DUP6 ADD PUSH2 0x24D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x256C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2531 JUMP JUMPDEST PUSH2 0x2576 DUP7 DUP4 PUSH2 0x2531 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A8 PUSH2 0x25A3 PUSH2 0x259E DUP5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1E46 JUMP JUMPDEST PUSH2 0x1CD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C1 DUP4 PUSH2 0x258E JUMP JUMPDEST PUSH2 0x25D5 PUSH2 0x25CD DUP3 PUSH2 0x25AF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x253D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x25E9 PUSH2 0x25DD JUMP JUMPDEST PUSH2 0x25F4 DUP2 DUP5 DUP5 PUSH2 0x25B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2617 JUMPI PUSH2 0x260C PUSH0 DUP3 PUSH2 0x25E1 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x265C JUMPI PUSH2 0x262D DUP2 PUSH2 0x2510 JUMP JUMPDEST PUSH2 0x2636 DUP5 PUSH2 0x2522 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2645 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2659 PUSH2 0x2651 DUP6 PUSH2 0x2522 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x25F9 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x267C PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2661 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2694 DUP4 DUP4 PUSH2 0x266D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26AD DUP3 PUSH2 0x1C2E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26C6 JUMPI PUSH2 0x26C5 PUSH2 0x1F7D JUMP JUMPDEST JUMPDEST PUSH2 0x26D0 DUP3 SLOAD PUSH2 0x2271 JUMP JUMPDEST PUSH2 0x26DB DUP3 DUP3 DUP6 PUSH2 0x261B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x270C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x26FA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2704 DUP6 DUP3 PUSH2 0x2689 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x276B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x271A DUP7 PUSH2 0x2510 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2741 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x271C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x275E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x275A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x266D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2786 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D66 JUMP JUMPDEST PUSH2 0x2793 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA 0xEA SWAP15 0xA8 0xE8 0x23 0xE8 0xAF EXTCODECOPY 0xC6 PUSH5 0x26D6C856CE LOG0 0xB8 SWAP3 0xD3 0xD0 SUB 0xC4 SAR POP SSTORE MULMOD CODECOPY 0xEA SLOAD MSTORE8 PUSH29 0x64736F6C63430008170033000000000000000000000000000000000000 ",
							"sourceMap": "59993:808:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58739:207;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41782:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42914:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42740:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43560:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;44204:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60063:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41602:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41337:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29323:101;;;:::i;:::-;;28668:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41935:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60094:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43135:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;60313:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;44402:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59012:593;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;60501:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;43345:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29573:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58739:207;58841:4;58562:10;58555:18;;58864:35;;;:11;:35;;;;:75;;;;58903:36;58927:11;58903:23;:36::i;:::-;58864:75;58857:82;;58739:207;;;:::o;41782:89::-;41827:13;41859:5;41852:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41782:89;:::o;42914:154::-;42981:7;43000:22;43014:7;43000:13;:22::i;:::-;;43040:21;43053:7;43040:12;:21::i;:::-;43033:28;;42914:154;;;:::o;42740:113::-;42811:35;42820:2;42824:7;42833:12;:10;:12::i;:::-;42811:8;:35::i;:::-;42740:113;;:::o;43560:578::-;43668:1;43654:16;;:2;:16;;;43650:87;;43723:1;43693:33;;;;;;;;;;;:::i;:::-;;;;;;;;43650:87;43955:21;43979:34;43987:2;43991:7;44000:12;:10;:12::i;:::-;43979:7;:34::i;:::-;43955:58;;44044:4;44027:21;;:13;:21;;;44023:109;;44092:4;44098:7;44107:13;44071:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;44023:109;43640:498;43560:578;;;:::o;44204:132::-;44290:39;44307:4;44313:2;44317:7;44290:39;;;;;;;;;;;;:16;:39::i;:::-;44204:132;;;:::o;60063:25::-;;;;;;;;;;;;;:::o;41602:118::-;41665:7;41691:22;41705:7;41691:13;:22::i;:::-;41684:29;;41602:118;;;:::o;41337:208::-;41400:7;41440:1;41423:19;;:5;:19;;;41419:87;;41492:1;41465:30;;;;;;;;;;;:::i;:::-;;;;;;;;41419:87;41522:9;:16;41532:5;41522:16;;;;;;;;;;;;;;;;41515:23;;41337:208;;;:::o;29323:101::-;28561:13;:11;:13::i;:::-;29387:30:::1;29414:1;29387:18;:30::i;:::-;29323:101::o:0;28668:85::-;28714:7;28740:6;;;;;;;;;;;28733:13;;28668:85;:::o;41935:93::-;41982:13;42014:7;42007:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41935:93;:::o;60094:22::-;;;;:::o;43135:144::-;43220:52;43239:12;:10;:12::i;:::-;43253:8;43263;43220:18;:52::i;:::-;43135:144;;:::o;60313:112::-;28561:13;:11;:13::i;:::-;60406:11:::1;60385:8;;:33;;;;;;;;;;;;;;;;;;60313:112:::0;:::o;44402:208::-;44515:31;44528:4;44534:2;44538:7;44515:12;:31::i;:::-;44556:47;44579:4;44585:2;44589:7;44598:4;44556:22;:47::i;:::-;44402:208;;;;:::o;59012:593::-;59085:13;59110:22;59124:7;59110:13;:22::i;:::-;;59143:23;59169:10;:19;59180:7;59169:19;;;;;;;;;;;59143:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59198:18;59219:10;:8;:10::i;:::-;59198:31;;59324:1;59308:4;59302:18;:23;59298:70;;59348:9;59341:16;;;;;;59298:70;59493:1;59473:9;59467:23;:27;59463:95;;;59531:4;59537:9;59517:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;59510:37;;;;;;59463:95;59575:23;59590:7;59575:14;:23::i;:::-;59568:30;;;;59012:593;;;;:::o;60501:296::-;60557:4;60602:8;;;;;;;;;;;60580:31;;:10;:31;;;60572:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;60661:10;;:12;;;;;;;;;:::i;:::-;;;;;;60683:33;60693:10;60705;;60683:9;:33::i;:::-;60727:35;60740:10;;60752:9;60727:12;:35::i;:::-;60779:10;;60772:18;;60501:296;;;:::o;43345:153::-;43433:4;43456:18;:25;43475:5;43456:25;;;;;;;;;;;;;;;:35;43482:8;43456:35;;;;;;;;;;;;;;;;;;;;;;;;;43449:42;;43345:153;;;;:::o;29573:215::-;28561:13;:11;:13::i;:::-;29677:1:::1;29657:22;;:8;:22;;::::0;29653:91:::1;;29730:1;29702:31;;;;;;;;;;;:::i;:::-;;;;;;;;29653:91;29753:28;29772:8;29753:18;:28::i;:::-;29573:215:::0;:::o;40978:300::-;41080:4;41130:25;41115:40;;;:11;:40;;;;:104;;;;41186:33;41171:48;;;:11;:48;;;;41115:104;:156;;;;41235:36;41259:11;41235:23;:36::i;:::-;41115:156;41096:175;;40978:300;;;:::o;55555:241::-;55618:7;55637:13;55653:17;55662:7;55653:8;:17::i;:::-;55637:33;;55701:1;55684:19;;:5;:19;;;55680:88;;55749:7;55726:31;;;;;;;;;;;:::i;:::-;;;;;;;;55680:88;55784:5;55777:12;;;55555:241;;;:::o;45355:127::-;45425:7;45451:15;:24;45467:7;45451:24;;;;;;;;;;;;;;;;;;;;;45444:31;;45355:127;;;:::o;26746:96::-;26799:7;26825:10;26818:17;;26746:96;:::o;53835:120::-;53915:33;53924:2;53928:7;53937:4;53943;53915:8;:33::i;:::-;53835:120;;;:::o;48255:795::-;48341:7;48360:12;48375:17;48384:7;48375:8;:17::i;:::-;48360:32;;48468:1;48452:18;;:4;:18;;;48448:86;;48486:37;48503:4;48509;48515:7;48486:16;:37::i;:::-;48448:86;48594:1;48578:18;;:4;:18;;;48574:256;;48694:48;48711:1;48715:7;48732:1;48736:5;48694:8;:48::i;:::-;48804:1;48785:9;:15;48795:4;48785:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;48574:256;48858:1;48844:16;;:2;:16;;;48840:107;;48921:1;48904:9;:13;48914:2;48904:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;48840:107;48976:2;48957:7;:16;48965:7;48957:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;49013:7;49009:2;48994:27;;49003:4;48994:27;;;;;;;;;;;;49039:4;49032:11;;;48255:795;;;;;:::o;28826:162::-;28896:12;:10;:12::i;:::-;28885:23;;:7;:5;:7::i;:::-;:23;;;28881:101;;28958:12;:10;:12::i;:::-;28931:40;;;;;;;;;;;:::i;:::-;;;;;;;;28881:101;28826:162::o;29942:187::-;30015:16;30034:6;;;;;;;;;;;30015:25;;30059:8;30050:6;;:17;;;;;;;;;;;;;;;;;;30113:8;30082:40;;30103:8;30082:40;;;;;;;;;;;;30005:124;29942:187;:::o;55008:312::-;55135:1;55115:22;;:8;:22;;;55111:91;;55182:8;55160:31;;;;;;;;;;;:::i;:::-;;;;;;;;55111:91;55249:8;55211:18;:25;55230:5;55211:25;;;;;;;;;;;;;;;:35;55237:8;55211:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;55294:8;55272:41;;55287:5;55272:41;;;55304:8;55272:41;;;;;;:::i;:::-;;;;;;;;55008:312;;;:::o;56335:782::-;56468:1;56451:2;:14;;;:18;56447:664;;;56505:2;56489:36;;;56526:12;:10;:12::i;:::-;56540:4;56546:7;56555:4;56489:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;56485:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;56815:1;56798:6;:13;:18;56794:293;;56869:2;56847:25;;;;;;;;;;;:::i;:::-;;;;;;;;56794:293;57039:6;57033:13;57024:6;57020:2;57016:15;57009:38;56485:616;56617:41;;;56607:51;;;:6;:51;;;;56603:130;;56711:2;56689:25;;;;;;;;;;;:::i;:::-;;;;;;;;56603:130;56561:186;56447:664;56335:782;;;;:::o;42591:92::-;42642:13;42667:9;;;;;;;;;;;;;;42591:92;:::o;42094:255::-;42158:13;42183:22;42197:7;42183:13;:22::i;:::-;;42216:21;42240:10;:8;:10::i;:::-;42216:34;;42291:1;42273:7;42267:21;:25;:75;;;;;;;;;;;;;;;;;42309:7;42318:18;:7;:16;:18::i;:::-;42295:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;42267:75;42260:82;;;42094:255;;;:::o;50050:100::-;50117:26;50127:2;50131:7;50117:26;;;;;;;;;;;;:9;:26::i;:::-;50050:100;;:::o;59724:167::-;59837:9;59815:10;:19;59826:7;59815:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;59861:23;59876:7;59861:23;;;;;;:::i;:::-;;;;;;;;59724:167;;:::o;32986:146::-;33062:4;33100:25;33085:40;;;:11;:40;;;;33078:47;;32986:146;;;:::o;45124:115::-;45190:7;45216;:16;45224:7;45216:16;;;;;;;;;;;;;;;;;;;;;45209:23;;45124:115;;;:::o;54137:662::-;54297:9;:31;;;;54326:1;54310:18;;:4;:18;;;;54297:31;54293:460;;;54344:13;54360:22;54374:7;54360:13;:22::i;:::-;54344:38;;54526:1;54510:18;;:4;:18;;;;:35;;;;;54541:4;54532:13;;:5;:13;;;;54510:35;:69;;;;;54550:29;54567:5;54574:4;54550:16;:29::i;:::-;54549:30;54510:69;54506:142;;;54628:4;54606:27;;;;;;;;;;;:::i;:::-;;;;;;;;54506:142;54666:9;54662:81;;;54720:7;54716:2;54700:28;;54709:5;54700:28;;;;;;;;;;;;54662:81;54330:423;54293:460;54790:2;54763:15;:24;54779:7;54763:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;54137:662;;;;:::o;46499:368::-;46611:38;46625:5;46632:7;46641;46611:13;:38::i;:::-;46606:255;;46686:1;46669:19;;:5;:19;;;46665:186;;46738:7;46715:31;;;;;;;;;;;:::i;:::-;;;;;;;;46665:186;46819:7;46828;46792:44;;;;;;;;;;;;:::i;:::-;;;;;;;;46606:255;46499:368;;;:::o;23606:698::-;23662:13;23711:14;23748:1;23728:17;23739:5;23728:10;:17::i;:::-;:21;23711:38;;23763:20;23797:6;23786:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23763:41;;23818:11;23944:6;23940:2;23936:15;23928:6;23924:28;23917:35;;23979:282;23986:4;23979:282;;;24010:5;;;;;;;;24149:10;24144:2;24137:5;24133:14;24128:32;24123:3;24115:46;24205:2;24196:11;;;;;;:::i;:::-;;;;;24238:1;24229:5;:10;23979:282;24225:21;23979:282;24281:6;24274:13;;;;;23606:698;;;:::o;50371:182::-;50465:18;50471:2;50475:7;50465:5;:18::i;:::-;50493:53;50524:1;50528:2;50532:7;50541:4;50493:22;:53::i;:::-;50371:182;;;:::o;45793:272::-;45896:4;45950:1;45931:21;;:7;:21;;;;:127;;;;;45978:7;45969:16;;:5;:16;;;:52;;;;45989:32;46006:5;46013:7;45989:16;:32::i;:::-;45969:52;:88;;;;46050:7;46025:32;;:21;46038:7;46025:12;:21::i;:::-;:32;;;45969:88;45931:127;45912:146;;45793:272;;;;;:::o;20130:916::-;20183:7;20202:14;20219:1;20202:18;;20267:8;20258:5;:17;20254:103;;20304:8;20295:17;;;;;;:::i;:::-;;;;;20340:2;20330:12;;;;20254:103;20383:8;20374:5;:17;20370:103;;20420:8;20411:17;;;;;;:::i;:::-;;;;;20456:2;20446:12;;;;20370:103;20499:8;20490:5;:17;20486:103;;20536:8;20527:17;;;;;;:::i;:::-;;;;;20572:2;20562:12;;;;20486:103;20615:7;20606:5;:16;20602:100;;20651:7;20642:16;;;;;;:::i;:::-;;;;;20686:1;20676:11;;;;20602:100;20728:7;20719:5;:16;20715:100;;20764:7;20755:16;;;;;;:::i;:::-;;;;;20799:1;20789:11;;;;20715:100;20841:7;20832:5;:16;20828:100;;20877:7;20868:16;;;;;;:::i;:::-;;;;;20912:1;20902:11;;;;20828:100;20954:7;20945:5;:16;20941:66;;20991:1;20981:11;;;;20941:66;21033:6;21026:13;;;20130:916;;;:::o;49372:327::-;49453:1;49439:16;;:2;:16;;;49435:87;;49508:1;49478:33;;;;;;;;;;;:::i;:::-;;;;;;;;49435:87;49531:21;49555:32;49563:2;49567:7;49584:1;49555:7;:32::i;:::-;49531:56;;49626:1;49601:27;;:13;:27;;;49597:96;;49679:1;49651:31;;;;;;;;;;;:::i;:::-;;;;;;;;49597:96;49425:274;49372:327;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:60::-;5543:3;5564:5;5557:12;;5515:60;;;:::o;5581:142::-;5631:9;5664:53;5682:34;5691:24;5709:5;5691:24;:::i;:::-;5682:34;:::i;:::-;5664:53;:::i;:::-;5651:66;;5581:142;;;:::o;5729:126::-;5779:9;5812:37;5843:5;5812:37;:::i;:::-;5799:50;;5729:126;;;:::o;5861:144::-;5929:9;5962:37;5993:5;5962:37;:::i;:::-;5949:50;;5861:144;;;:::o;6011:167::-;6116:55;6165:5;6116:55;:::i;:::-;6111:3;6104:68;6011:167;;:::o;6184:258::-;6295:4;6333:2;6322:9;6318:18;6310:26;;6346:89;6432:1;6421:9;6417:17;6408:6;6346:89;:::i;:::-;6184:258;;;;:::o;6448:329::-;6507:6;6556:2;6544:9;6535:7;6531:23;6527:32;6524:119;;;6562:79;;:::i;:::-;6524:119;6682:1;6707:53;6752:7;6743:6;6732:9;6728:22;6707:53;:::i;:::-;6697:63;;6653:117;6448:329;;;;:::o;6783:118::-;6870:24;6888:5;6870:24;:::i;:::-;6865:3;6858:37;6783:118;;:::o;6907:222::-;7000:4;7038:2;7027:9;7023:18;7015:26;;7051:71;7119:1;7108:9;7104:17;7095:6;7051:71;:::i;:::-;6907:222;;;;:::o;7135:116::-;7205:21;7220:5;7205:21;:::i;:::-;7198:5;7195:32;7185:60;;7241:1;7238;7231:12;7185:60;7135:116;:::o;7257:133::-;7300:5;7338:6;7325:20;7316:29;;7354:30;7378:5;7354:30;:::i;:::-;7257:133;;;;:::o;7396:468::-;7461:6;7469;7518:2;7506:9;7497:7;7493:23;7489:32;7486:119;;;7524:79;;:::i;:::-;7486:119;7644:1;7669:53;7714:7;7705:6;7694:9;7690:22;7669:53;:::i;:::-;7659:63;;7615:117;7771:2;7797:50;7839:7;7830:6;7819:9;7815:22;7797:50;:::i;:::-;7787:60;;7742:115;7396:468;;;;;:::o;7870:117::-;7979:1;7976;7969:12;7993:117;8102:1;8099;8092:12;8116:180;8164:77;8161:1;8154:88;8261:4;8258:1;8251:15;8285:4;8282:1;8275:15;8302:281;8385:27;8407:4;8385:27;:::i;:::-;8377:6;8373:40;8515:6;8503:10;8500:22;8479:18;8467:10;8464:34;8461:62;8458:88;;;8526:18;;:::i;:::-;8458:88;8566:10;8562:2;8555:22;8345:238;8302:281;;:::o;8589:129::-;8623:6;8650:20;;:::i;:::-;8640:30;;8679:33;8707:4;8699:6;8679:33;:::i;:::-;8589:129;;;:::o;8724:307::-;8785:4;8875:18;8867:6;8864:30;8861:56;;;8897:18;;:::i;:::-;8861:56;8935:29;8957:6;8935:29;:::i;:::-;8927:37;;9019:4;9013;9009:15;9001:23;;8724:307;;;:::o;9037:146::-;9134:6;9129:3;9124;9111:30;9175:1;9166:6;9161:3;9157:16;9150:27;9037:146;;;:::o;9189:423::-;9266:5;9291:65;9307:48;9348:6;9307:48;:::i;:::-;9291:65;:::i;:::-;9282:74;;9379:6;9372:5;9365:21;9417:4;9410:5;9406:16;9455:3;9446:6;9441:3;9437:16;9434:25;9431:112;;;9462:79;;:::i;:::-;9431:112;9552:54;9599:6;9594:3;9589;9552:54;:::i;:::-;9272:340;9189:423;;;;;:::o;9631:338::-;9686:5;9735:3;9728:4;9720:6;9716:17;9712:27;9702:122;;9743:79;;:::i;:::-;9702:122;9860:6;9847:20;9885:78;9959:3;9951:6;9944:4;9936:6;9932:17;9885:78;:::i;:::-;9876:87;;9692:277;9631:338;;;;:::o;9975:943::-;10070:6;10078;10086;10094;10143:3;10131:9;10122:7;10118:23;10114:33;10111:120;;;10150:79;;:::i;:::-;10111:120;10270:1;10295:53;10340:7;10331:6;10320:9;10316:22;10295:53;:::i;:::-;10285:63;;10241:117;10397:2;10423:53;10468:7;10459:6;10448:9;10444:22;10423:53;:::i;:::-;10413:63;;10368:118;10525:2;10551:53;10596:7;10587:6;10576:9;10572:22;10551:53;:::i;:::-;10541:63;;10496:118;10681:2;10670:9;10666:18;10653:32;10712:18;10704:6;10701:30;10698:117;;;10734:79;;:::i;:::-;10698:117;10839:62;10893:7;10884:6;10873:9;10869:22;10839:62;:::i;:::-;10829:72;;10624:287;9975:943;;;;;;;:::o;10924:308::-;10986:4;11076:18;11068:6;11065:30;11062:56;;;11098:18;;:::i;:::-;11062:56;11136:29;11158:6;11136:29;:::i;:::-;11128:37;;11220:4;11214;11210:15;11202:23;;10924:308;;;:::o;11238:425::-;11316:5;11341:66;11357:49;11399:6;11357:49;:::i;:::-;11341:66;:::i;:::-;11332:75;;11430:6;11423:5;11416:21;11468:4;11461:5;11457:16;11506:3;11497:6;11492:3;11488:16;11485:25;11482:112;;;11513:79;;:::i;:::-;11482:112;11603:54;11650:6;11645:3;11640;11603:54;:::i;:::-;11322:341;11238:425;;;;;:::o;11683:340::-;11739:5;11788:3;11781:4;11773:6;11769:17;11765:27;11755:122;;11796:79;;:::i;:::-;11755:122;11913:6;11900:20;11938:79;12013:3;12005:6;11998:4;11990:6;11986:17;11938:79;:::i;:::-;11929:88;;11745:278;11683:340;;;;:::o;12029:509::-;12098:6;12147:2;12135:9;12126:7;12122:23;12118:32;12115:119;;;12153:79;;:::i;:::-;12115:119;12301:1;12290:9;12286:17;12273:31;12331:18;12323:6;12320:30;12317:117;;;12353:79;;:::i;:::-;12317:117;12458:63;12513:7;12504:6;12493:9;12489:22;12458:63;:::i;:::-;12448:73;;12244:287;12029:509;;;;:::o;12544:474::-;12612:6;12620;12669:2;12657:9;12648:7;12644:23;12640:32;12637:119;;;12675:79;;:::i;:::-;12637:119;12795:1;12820:53;12865:7;12856:6;12845:9;12841:22;12820:53;:::i;:::-;12810:63;;12766:117;12922:2;12948:53;12993:7;12984:6;12973:9;12969:22;12948:53;:::i;:::-;12938:63;;12893:118;12544:474;;;;;:::o;13024:180::-;13072:77;13069:1;13062:88;13169:4;13166:1;13159:15;13193:4;13190:1;13183:15;13210:320;13254:6;13291:1;13285:4;13281:12;13271:22;;13338:1;13332:4;13328:12;13359:18;13349:81;;13415:4;13407:6;13403:17;13393:27;;13349:81;13477:2;13469:6;13466:14;13446:18;13443:38;13440:84;;13496:18;;:::i;:::-;13440:84;13261:269;13210:320;;;:::o;13536:442::-;13685:4;13723:2;13712:9;13708:18;13700:26;;13736:71;13804:1;13793:9;13789:17;13780:6;13736:71;:::i;:::-;13817:72;13885:2;13874:9;13870:18;13861:6;13817:72;:::i;:::-;13899;13967:2;13956:9;13952:18;13943:6;13899:72;:::i;:::-;13536:442;;;;;;:::o;13984:148::-;14086:11;14123:3;14108:18;;13984:148;;;;:::o;14138:390::-;14244:3;14272:39;14305:5;14272:39;:::i;:::-;14327:89;14409:6;14404:3;14327:89;:::i;:::-;14320:96;;14425:65;14483:6;14478:3;14471:4;14464:5;14460:16;14425:65;:::i;:::-;14515:6;14510:3;14506:16;14499:23;;14248:280;14138:390;;;;:::o;14534:435::-;14714:3;14736:95;14827:3;14818:6;14736:95;:::i;:::-;14729:102;;14848:95;14939:3;14930:6;14848:95;:::i;:::-;14841:102;;14960:3;14953:10;;14534:435;;;;;:::o;14975:222::-;15115:34;15111:1;15103:6;15099:14;15092:58;15184:5;15179:2;15171:6;15167:15;15160:30;14975:222;:::o;15203:366::-;15345:3;15366:67;15430:2;15425:3;15366:67;:::i;:::-;15359:74;;15442:93;15531:3;15442:93;:::i;:::-;15560:2;15555:3;15551:12;15544:19;;15203:366;;;:::o;15575:419::-;15741:4;15779:2;15768:9;15764:18;15756:26;;15828:9;15822:4;15818:20;15814:1;15803:9;15799:17;15792:47;15856:131;15982:4;15856:131;:::i;:::-;15848:139;;15575:419;;;:::o;16000:180::-;16048:77;16045:1;16038:88;16145:4;16142:1;16135:15;16169:4;16166:1;16159:15;16186:233;16225:3;16248:24;16266:5;16248:24;:::i;:::-;16239:33;;16294:66;16287:5;16284:77;16281:103;;16364:18;;:::i;:::-;16281:103;16411:1;16404:5;16400:13;16393:20;;16186:233;;;:::o;16425:98::-;16476:6;16510:5;16504:12;16494:22;;16425:98;;;:::o;16529:168::-;16612:11;16646:6;16641:3;16634:19;16686:4;16681:3;16677:14;16662:29;;16529:168;;;;:::o;16703:373::-;16789:3;16817:38;16849:5;16817:38;:::i;:::-;16871:70;16934:6;16929:3;16871:70;:::i;:::-;16864:77;;16950:65;17008:6;17003:3;16996:4;16989:5;16985:16;16950:65;:::i;:::-;17040:29;17062:6;17040:29;:::i;:::-;17035:3;17031:39;17024:46;;16793:283;16703:373;;;;:::o;17082:640::-;17277:4;17315:3;17304:9;17300:19;17292:27;;17329:71;17397:1;17386:9;17382:17;17373:6;17329:71;:::i;:::-;17410:72;17478:2;17467:9;17463:18;17454:6;17410:72;:::i;:::-;17492;17560:2;17549:9;17545:18;17536:6;17492:72;:::i;:::-;17611:9;17605:4;17601:20;17596:2;17585:9;17581:18;17574:48;17639:76;17710:4;17701:6;17639:76;:::i;:::-;17631:84;;17082:640;;;;;;;:::o;17728:141::-;17784:5;17815:6;17809:13;17800:22;;17831:32;17857:5;17831:32;:::i;:::-;17728:141;;;;:::o;17875:349::-;17944:6;17993:2;17981:9;17972:7;17968:23;17964:32;17961:119;;;17999:79;;:::i;:::-;17961:119;18119:1;18144:63;18199:7;18190:6;18179:9;18175:22;18144:63;:::i;:::-;18134:73;;18090:127;17875:349;;;;:::o;18230:141::-;18279:4;18302:3;18294:11;;18325:3;18322:1;18315:14;18359:4;18356:1;18346:18;18338:26;;18230:141;;;:::o;18377:93::-;18414:6;18461:2;18456;18449:5;18445:14;18441:23;18431:33;;18377:93;;;:::o;18476:107::-;18520:8;18570:5;18564:4;18560:16;18539:37;;18476:107;;;;:::o;18589:393::-;18658:6;18708:1;18696:10;18692:18;18731:97;18761:66;18750:9;18731:97;:::i;:::-;18849:39;18879:8;18868:9;18849:39;:::i;:::-;18837:51;;18921:4;18917:9;18910:5;18906:21;18897:30;;18970:4;18960:8;18956:19;18949:5;18946:30;18936:40;;18665:317;;18589:393;;;;;:::o;18988:142::-;19038:9;19071:53;19089:34;19098:24;19116:5;19098:24;:::i;:::-;19089:34;:::i;:::-;19071:53;:::i;:::-;19058:66;;18988:142;;;:::o;19136:75::-;19179:3;19200:5;19193:12;;19136:75;;;:::o;19217:269::-;19327:39;19358:7;19327:39;:::i;:::-;19388:91;19437:41;19461:16;19437:41;:::i;:::-;19429:6;19422:4;19416:11;19388:91;:::i;:::-;19382:4;19375:105;19293:193;19217:269;;;:::o;19492:73::-;19537:3;19492:73;:::o;19571:189::-;19648:32;;:::i;:::-;19689:65;19747:6;19739;19733:4;19689:65;:::i;:::-;19624:136;19571:189;;:::o;19766:186::-;19826:120;19843:3;19836:5;19833:14;19826:120;;;19897:39;19934:1;19927:5;19897:39;:::i;:::-;19870:1;19863:5;19859:13;19850:22;;19826:120;;;19766:186;;:::o;19958:543::-;20059:2;20054:3;20051:11;20048:446;;;20093:38;20125:5;20093:38;:::i;:::-;20177:29;20195:10;20177:29;:::i;:::-;20167:8;20163:44;20360:2;20348:10;20345:18;20342:49;;;20381:8;20366:23;;20342:49;20404:80;20460:22;20478:3;20460:22;:::i;:::-;20450:8;20446:37;20433:11;20404:80;:::i;:::-;20063:431;;20048:446;19958:543;;;:::o;20507:117::-;20561:8;20611:5;20605:4;20601:16;20580:37;;20507:117;;;;:::o;20630:169::-;20674:6;20707:51;20755:1;20751:6;20743:5;20740:1;20736:13;20707:51;:::i;:::-;20703:56;20788:4;20782;20778:15;20768:25;;20681:118;20630:169;;;;:::o;20804:295::-;20880:4;21026:29;21051:3;21045:4;21026:29;:::i;:::-;21018:37;;21088:3;21085:1;21081:11;21075:4;21072:21;21064:29;;20804:295;;;;:::o;21104:1395::-;21221:37;21254:3;21221:37;:::i;:::-;21323:18;21315:6;21312:30;21309:56;;;21345:18;;:::i;:::-;21309:56;21389:38;21421:4;21415:11;21389:38;:::i;:::-;21474:67;21534:6;21526;21520:4;21474:67;:::i;:::-;21568:1;21592:4;21579:17;;21624:2;21616:6;21613:14;21641:1;21636:618;;;;22298:1;22315:6;22312:77;;;22364:9;22359:3;22355:19;22349:26;22340:35;;22312:77;22415:67;22475:6;22468:5;22415:67;:::i;:::-;22409:4;22402:81;22271:222;21606:887;;21636:618;21688:4;21684:9;21676:6;21672:22;21722:37;21754:4;21722:37;:::i;:::-;21781:1;21795:208;21809:7;21806:1;21803:14;21795:208;;;21888:9;21883:3;21879:19;21873:26;21865:6;21858:42;21939:1;21931:6;21927:14;21917:24;;21986:2;21975:9;21971:18;21958:31;;21832:4;21829:1;21825:12;21820:17;;21795:208;;;22031:6;22022:7;22019:19;22016:179;;;22089:9;22084:3;22080:19;22074:26;22132:48;22174:4;22166:6;22162:17;22151:9;22132:48;:::i;:::-;22124:6;22117:64;22039:156;22016:179;22241:1;22237;22229:6;22225:14;22221:22;22215:4;22208:36;21643:611;;;21606:887;;21196:1303;;;21104:1395;;:::o;22505:332::-;22626:4;22664:2;22653:9;22649:18;22641:26;;22677:71;22745:1;22734:9;22730:17;22721:6;22677:71;:::i;:::-;22758:72;22826:2;22815:9;22811:18;22802:6;22758:72;:::i;:::-;22505:332;;;;;:::o;22843:180::-;22891:77;22888:1;22881:88;22988:4;22985:1;22978:15;23012:4;23009:1;23002:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2047400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Progress()": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(string)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"ownerOf(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setProgressSC(address)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenCount()": "2492",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60122,
									"end": 60167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60045,
									"end": 60055,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "496E63656E746976657300000000000000000000000000000000000000000000"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "PUSH",
									"source": 0,
									"value": "494E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40872,
									"end": 40877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40869,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 40864,
									"end": 40877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40864,
									"end": 40877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40897,
									"end": 40904,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40894,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 40887,
									"end": 40904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40887,
									"end": 40904,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 40798,
									"end": 40911,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28327,
									"end": 28328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28303,
									"end": 28329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28303,
									"end": 28329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28303,
									"end": 28315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28303,
									"end": 28329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 28303,
									"end": 28329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 28303,
									"end": 28329,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28299,
									"end": 28394,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28299,
									"end": 28394,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28380,
									"end": 28381,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 28352,
									"end": 28383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28352,
									"end": 28383,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28299,
									"end": 28394,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 28299,
									"end": 28394,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28403,
									"end": 28435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28422,
									"end": 28434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28403,
									"end": 28421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 28403,
									"end": 28421,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28403,
									"end": 28421,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28403,
									"end": 28435,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28403,
									"end": 28435,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28403,
									"end": 28435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28403,
									"end": 28435,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 28403,
									"end": 28435,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28255,
									"end": 28442,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29942,
									"end": 30129,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 29942,
									"end": 30129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30015,
									"end": 30031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30034,
									"end": 30040,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30015,
									"end": 30040,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30015,
									"end": 30040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30059,
									"end": 30067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30056,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 30050,
									"end": 30056,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30050,
									"end": 30067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30113,
									"end": 30121,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30103,
									"end": 30111,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30082,
									"end": 30122,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 30005,
									"end": 30129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29942,
									"end": 30129,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29942,
									"end": 30129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59993,
									"end": 60801,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eaea9ea8e823e8af3cc66426d6c856cea0b892d3d003c41d50550939ea54537c64736f6c63430008170033",
									".code": [
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "D85D3D27"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "9F181B5E"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "B876E3B6"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "5F53575F"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59993,
											"end": 60801,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 58739,
											"end": 58946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 58739,
											"end": 58946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 58739,
											"end": 58946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41782,
											"end": 41871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41782,
											"end": 41871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 42914,
											"end": 43068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42914,
											"end": 43068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42914,
											"end": 43068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 42740,
											"end": 42853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 42740,
											"end": 42853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 43560,
											"end": 44138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 43560,
											"end": 44138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 44204,
											"end": 44336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 44204,
											"end": 44336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 60063,
											"end": 60088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 60063,
											"end": 60088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41602,
											"end": 41720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41602,
											"end": 41720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41602,
											"end": 41720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 41337,
											"end": 41545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41337,
											"end": 41545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 41337,
											"end": 41545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29323,
											"end": 29424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28668,
											"end": 28753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28668,
											"end": 28753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 41935,
											"end": 42028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41935,
											"end": 42028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60094,
											"end": 60116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 60094,
											"end": 60116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43135,
											"end": 43279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43135,
											"end": 43279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 60313,
											"end": 60425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60313,
											"end": 60425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 44402,
											"end": 44610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 44402,
											"end": 44610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 59012,
											"end": 59605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59012,
											"end": 59605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 59012,
											"end": 59605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 60501,
											"end": 60797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 60501,
											"end": 60797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 60501,
											"end": 60797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43345,
											"end": 43498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 43345,
											"end": 43498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 43345,
											"end": 43498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29573,
											"end": 29788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29573,
											"end": 29788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58841,
											"end": 58845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58562,
											"end": 58572,
											"name": "PUSH",
											"source": 0,
											"value": "49064906"
										},
										{
											"begin": 58555,
											"end": 58573,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58555,
											"end": 58573,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58875,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58899,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58903,
											"end": 58939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 58927,
											"end": 58938,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58903,
											"end": 58926,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 58903,
											"end": 58939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58903,
											"end": 58939,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 58903,
											"end": 58939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 58864,
											"end": 58939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58857,
											"end": 58939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58857,
											"end": 58939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58739,
											"end": 58946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41827,
											"end": 41840,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41859,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41852,
											"end": 41864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 41852,
											"end": 41864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41852,
											"end": 41864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41782,
											"end": 41871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42981,
											"end": 42988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43000,
											"end": 43022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 43014,
											"end": 43021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 43000,
											"end": 43022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43022,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 43000,
											"end": 43022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43040,
											"end": 43061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 43053,
											"end": 43060,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43040,
											"end": 43052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 43040,
											"end": 43061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43040,
											"end": 43061,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 43040,
											"end": 43061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43033,
											"end": 43061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43033,
											"end": 43061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42914,
											"end": 43068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42811,
											"end": 42846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42820,
											"end": 42822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42824,
											"end": 42831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42833,
											"end": 42845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42833,
											"end": 42843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 42833,
											"end": 42845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42833,
											"end": 42845,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 42833,
											"end": 42845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42811,
											"end": 42819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 42811,
											"end": 42846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42811,
											"end": 42846,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 42811,
											"end": 42846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42740,
											"end": 42853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43654,
											"end": 43670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43654,
											"end": 43670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43654,
											"end": 43656,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43654,
											"end": 43670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43654,
											"end": 43670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43654,
											"end": 43670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43650,
											"end": 43737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43650,
											"end": 43737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43723,
											"end": 43724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43693,
											"end": 43726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43693,
											"end": 43726,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43650,
											"end": 43737,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 43650,
											"end": 43737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 43976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43979,
											"end": 44013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 43987,
											"end": 43989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43991,
											"end": 43998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44000,
											"end": 44012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 44000,
											"end": 44010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 44000,
											"end": 44012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44000,
											"end": 44012,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 44000,
											"end": 44012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43979,
											"end": 43986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 43979,
											"end": 44013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43979,
											"end": 44013,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 43979,
											"end": 44013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 44013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43955,
											"end": 44013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44044,
											"end": 44048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44027,
											"end": 44048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44027,
											"end": 44048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44027,
											"end": 44040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44027,
											"end": 44048,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44027,
											"end": 44048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44027,
											"end": 44048,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44023,
											"end": 44132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44023,
											"end": 44132,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44092,
											"end": 44096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44098,
											"end": 44105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44107,
											"end": 44120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 44071,
											"end": 44121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44071,
											"end": 44121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44023,
											"end": 44132,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 44023,
											"end": 44132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43640,
											"end": 44138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43560,
											"end": 44138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 44307,
											"end": 44311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44313,
											"end": 44315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44317,
											"end": 44324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 44290,
											"end": 44329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 44290,
											"end": 44329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60063,
											"end": 60088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41665,
											"end": 41672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41691,
											"end": 41713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 41705,
											"end": 41712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41691,
											"end": 41704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 41691,
											"end": 41713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41691,
											"end": 41713,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 41691,
											"end": 41713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41684,
											"end": 41713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41684,
											"end": 41713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41602,
											"end": 41720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41400,
											"end": 41407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41440,
											"end": 41441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41423,
											"end": 41442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41442,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41423,
											"end": 41442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41423,
											"end": 41442,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41419,
											"end": 41506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 41419,
											"end": 41506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41492,
											"end": 41493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41465,
											"end": 41495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41465,
											"end": 41495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41419,
											"end": 41506,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 41419,
											"end": 41506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41531,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41532,
											"end": 41537,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41522,
											"end": 41538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41515,
											"end": 41538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41515,
											"end": 41538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41337,
											"end": 41545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 29323,
											"end": 29424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 28561,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28561,
											"end": 28574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29414,
											"end": 29415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29387,
											"end": 29405,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29387,
											"end": 29417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29387,
											"end": 29417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 29387,
											"end": 29417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29323,
											"end": 29424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28714,
											"end": 28721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28740,
											"end": 28746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28733,
											"end": 28746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28733,
											"end": 28746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28668,
											"end": 28753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41982,
											"end": 41995,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42014,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 42007,
											"end": 42021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 42007,
											"end": 42021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42007,
											"end": 42021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41935,
											"end": 42028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60094,
											"end": 60116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43220,
											"end": 43272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 43239,
											"end": 43251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 43239,
											"end": 43249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 43239,
											"end": 43251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43239,
											"end": 43251,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 43239,
											"end": 43251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43253,
											"end": 43261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43263,
											"end": 43271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43220,
											"end": 43238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 43220,
											"end": 43272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43220,
											"end": 43272,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 43220,
											"end": 43272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43135,
											"end": 43279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28561,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28561,
											"end": 28574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60406,
											"end": 60417,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60385,
											"end": 60393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60385,
											"end": 60418,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60313,
											"end": 60425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44515,
											"end": 44546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 44528,
											"end": 44532,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44534,
											"end": 44536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44538,
											"end": 44545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44515,
											"end": 44527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 44515,
											"end": 44546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44515,
											"end": 44546,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 44515,
											"end": 44546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44556,
											"end": 44603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 44579,
											"end": 44583,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44585,
											"end": 44587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44589,
											"end": 44596,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44598,
											"end": 44602,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44556,
											"end": 44578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 44556,
											"end": 44603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44556,
											"end": 44603,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 44556,
											"end": 44603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44402,
											"end": 44610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59085,
											"end": 59098,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59110,
											"end": 59132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 59124,
											"end": 59131,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 59110,
											"end": 59132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59132,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 59110,
											"end": 59132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59110,
											"end": 59132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59169,
											"end": 59179,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59180,
											"end": 59187,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59169,
											"end": 59188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59143,
											"end": 59188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 59143,
											"end": 59188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59143,
											"end": 59188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59219,
											"end": 59229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 59219,
											"end": 59227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 59219,
											"end": 59229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59229,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 59219,
											"end": 59229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59198,
											"end": 59229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59324,
											"end": 59325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59308,
											"end": 59312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59302,
											"end": 59320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59302,
											"end": 59325,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59298,
											"end": 59368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 59298,
											"end": 59368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59348,
											"end": 59357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 59341,
											"end": 59357,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59298,
											"end": 59368,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 59298,
											"end": 59368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59493,
											"end": 59494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59473,
											"end": 59482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59467,
											"end": 59490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59467,
											"end": 59494,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 59463,
											"end": 59558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59531,
											"end": 59535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59537,
											"end": 59546,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 59517,
											"end": 59547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59517,
											"end": 59547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 59510,
											"end": 59547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59558,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 59463,
											"end": 59558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59575,
											"end": 59598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 59590,
											"end": 59597,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59575,
											"end": 59589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 59575,
											"end": 59598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59575,
											"end": 59598,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 59575,
											"end": 59598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59568,
											"end": 59598,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59568,
											"end": 59598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59568,
											"end": 59598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59568,
											"end": 59598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59012,
											"end": 59605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60557,
											"end": 60561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60602,
											"end": 60610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60580,
											"end": 60611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60580,
											"end": 60611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60580,
											"end": 60590,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60580,
											"end": 60611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60580,
											"end": 60611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60580,
											"end": 60611,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 60572,
											"end": 60651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 60572,
											"end": 60651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60671,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60661,
											"end": 60671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 60661,
											"end": 60673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60661,
											"end": 60673,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60683,
											"end": 60716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 60693,
											"end": 60703,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 60705,
											"end": 60715,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60705,
											"end": 60715,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60683,
											"end": 60692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 60683,
											"end": 60716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60683,
											"end": 60716,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 60683,
											"end": 60716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60727,
											"end": 60762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 60740,
											"end": 60750,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60740,
											"end": 60750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60752,
											"end": 60761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60727,
											"end": 60739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 60727,
											"end": 60762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60727,
											"end": 60762,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 60727,
											"end": 60762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60779,
											"end": 60789,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60779,
											"end": 60789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 60772,
											"end": 60790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60772,
											"end": 60790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60501,
											"end": 60797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43433,
											"end": 43437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43456,
											"end": 43474,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43475,
											"end": 43480,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43456,
											"end": 43481,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43482,
											"end": 43490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43456,
											"end": 43491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43449,
											"end": 43491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43449,
											"end": 43491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43345,
											"end": 43498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28561,
											"end": 28572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28561,
											"end": 28574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 28561,
											"end": 28574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29677,
											"end": 29678,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29657,
											"end": 29679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29657,
											"end": 29679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29657,
											"end": 29665,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29657,
											"end": 29679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29657,
											"end": 29679,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29657,
											"end": 29679,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29653,
											"end": 29744,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 29653,
											"end": 29744,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 29702,
											"end": 29733,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29702,
											"end": 29733,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29653,
											"end": 29744,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 29653,
											"end": 29744,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29753,
											"end": 29781,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 29772,
											"end": 29780,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29753,
											"end": 29771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29753,
											"end": 29781,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29753,
											"end": 29781,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 29753,
											"end": 29781,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29573,
											"end": 29788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40978,
											"end": 41278,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40978,
											"end": 41278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41080,
											"end": 41084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41130,
											"end": 41155,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41126,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41186,
											"end": 41219,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41182,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41171,
											"end": 41219,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 41115,
											"end": 41219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41235,
											"end": 41271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41259,
											"end": 41270,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41235,
											"end": 41258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 41235,
											"end": 41271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41235,
											"end": 41271,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 41235,
											"end": 41271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 41115,
											"end": 41271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41096,
											"end": 41271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41096,
											"end": 41271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40978,
											"end": 41278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40978,
											"end": 41278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40978,
											"end": 41278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40978,
											"end": 41278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55796,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 55555,
											"end": 55796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55618,
											"end": 55625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55637,
											"end": 55650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55653,
											"end": 55670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 55662,
											"end": 55669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55653,
											"end": 55661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 55653,
											"end": 55670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55653,
											"end": 55670,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 55653,
											"end": 55670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55637,
											"end": 55670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55637,
											"end": 55670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55701,
											"end": 55702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55684,
											"end": 55703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55684,
											"end": 55703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55703,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55684,
											"end": 55703,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55684,
											"end": 55703,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55680,
											"end": 55768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 55680,
											"end": 55768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55749,
											"end": 55756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 55726,
											"end": 55757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55726,
											"end": 55757,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55680,
											"end": 55768,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 55680,
											"end": 55768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55784,
											"end": 55789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55777,
											"end": 55789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55777,
											"end": 55789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55777,
											"end": 55789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55555,
											"end": 55796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45355,
											"end": 45482,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 45355,
											"end": 45482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45425,
											"end": 45432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45451,
											"end": 45466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45467,
											"end": 45474,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45451,
											"end": 45475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45444,
											"end": 45475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45444,
											"end": 45475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45355,
											"end": 45482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45355,
											"end": 45482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45355,
											"end": 45482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45355,
											"end": 45482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26746,
											"end": 26842,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 26746,
											"end": 26842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26799,
											"end": 26806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26825,
											"end": 26835,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26818,
											"end": 26835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26818,
											"end": 26835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26746,
											"end": 26842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26746,
											"end": 26842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53835,
											"end": 53955,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 53835,
											"end": 53955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 53948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 53924,
											"end": 53926,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53928,
											"end": 53935,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53937,
											"end": 53941,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53943,
											"end": 53947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53915,
											"end": 53923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 53915,
											"end": 53948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53915,
											"end": 53948,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 53915,
											"end": 53948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53835,
											"end": 53955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53835,
											"end": 53955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53835,
											"end": 53955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53835,
											"end": 53955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48341,
											"end": 48348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48360,
											"end": 48372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48375,
											"end": 48392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 48384,
											"end": 48391,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48375,
											"end": 48383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 48375,
											"end": 48392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48375,
											"end": 48392,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 48375,
											"end": 48392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48360,
											"end": 48392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48360,
											"end": 48392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48468,
											"end": 48469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48452,
											"end": 48470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48452,
											"end": 48470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48452,
											"end": 48456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48452,
											"end": 48470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48452,
											"end": 48470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48452,
											"end": 48470,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48448,
											"end": 48534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 48448,
											"end": 48534,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48486,
											"end": 48523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 48503,
											"end": 48507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48509,
											"end": 48513,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48515,
											"end": 48522,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48486,
											"end": 48502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 48486,
											"end": 48523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48486,
											"end": 48523,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 48486,
											"end": 48523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48448,
											"end": 48534,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 48448,
											"end": 48534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48594,
											"end": 48595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48578,
											"end": 48596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48578,
											"end": 48596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48578,
											"end": 48582,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48578,
											"end": 48596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48578,
											"end": 48596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48578,
											"end": 48596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48574,
											"end": 48830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 48574,
											"end": 48830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48694,
											"end": 48742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 48711,
											"end": 48712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48715,
											"end": 48722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48732,
											"end": 48733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48736,
											"end": 48741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48694,
											"end": 48702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 48694,
											"end": 48742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48694,
											"end": 48742,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 48694,
											"end": 48742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48804,
											"end": 48805,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48785,
											"end": 48794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48795,
											"end": 48799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48785,
											"end": 48805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48574,
											"end": 48830,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 48574,
											"end": 48830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48858,
											"end": 48859,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48844,
											"end": 48860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48844,
											"end": 48860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48844,
											"end": 48846,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48844,
											"end": 48860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48844,
											"end": 48860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48844,
											"end": 48860,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48840,
											"end": 48947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 48840,
											"end": 48947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48921,
											"end": 48922,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48904,
											"end": 48913,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48914,
											"end": 48916,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48904,
											"end": 48922,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48840,
											"end": 48947,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 48840,
											"end": 48947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48976,
											"end": 48978,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48964,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48965,
											"end": 48972,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48957,
											"end": 48978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49013,
											"end": 49020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49009,
											"end": 49011,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49003,
											"end": 49007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48994,
											"end": 49021,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 49039,
											"end": 49043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49032,
											"end": 49043,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49032,
											"end": 49043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49032,
											"end": 49043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48255,
											"end": 49050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28826,
											"end": 28988,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28826,
											"end": 28988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 28896,
											"end": 28906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28896,
											"end": 28908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28896,
											"end": 28908,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 28896,
											"end": 28908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28885,
											"end": 28908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28885,
											"end": 28908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28885,
											"end": 28892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28885,
											"end": 28890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 28885,
											"end": 28892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28885,
											"end": 28892,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 28885,
											"end": 28892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28885,
											"end": 28908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28885,
											"end": 28908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28885,
											"end": 28908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28881,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28881,
											"end": 28982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 28958,
											"end": 28968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28958,
											"end": 28970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 28958,
											"end": 28970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28931,
											"end": 28971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28931,
											"end": 28971,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28881,
											"end": 28982,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 28881,
											"end": 28982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28826,
											"end": 28988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 30129,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 29942,
											"end": 30129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30015,
											"end": 30031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30034,
											"end": 30040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30015,
											"end": 30040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30015,
											"end": 30040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30059,
											"end": 30067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30056,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30050,
											"end": 30056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30050,
											"end": 30067,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30113,
											"end": 30121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30103,
											"end": 30111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30082,
											"end": 30122,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 30129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29942,
											"end": 30129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55320,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 55008,
											"end": 55320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55135,
											"end": 55136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55115,
											"end": 55137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55115,
											"end": 55137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55137,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55115,
											"end": 55137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55115,
											"end": 55137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55111,
											"end": 55202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55111,
											"end": 55202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55182,
											"end": 55190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 55160,
											"end": 55191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55160,
											"end": 55191,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55111,
											"end": 55202,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 55111,
											"end": 55202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55249,
											"end": 55257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55229,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55230,
											"end": 55235,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55211,
											"end": 55236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55237,
											"end": 55245,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55294,
											"end": 55302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55287,
											"end": 55292,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 55304,
											"end": 55312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 55272,
											"end": 55313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55272,
											"end": 55313,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55008,
											"end": 55320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56468,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56451,
											"end": 56453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56451,
											"end": 56465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56451,
											"end": 56465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56451,
											"end": 56465,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 56451,
											"end": 56469,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56447,
											"end": 57111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56447,
											"end": 57111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 56447,
											"end": 57111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56525,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56489,
											"end": 56525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56525,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 56526,
											"end": 56538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56526,
											"end": 56536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 56526,
											"end": 56538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56526,
											"end": 56538,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56526,
											"end": 56538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56540,
											"end": 56544,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56546,
											"end": 56553,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56555,
											"end": 56559,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 56489,
											"end": 56560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 56489,
											"end": 56560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 56489,
											"end": 56560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56815,
											"end": 56816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56798,
											"end": 56804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56798,
											"end": 56811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56798,
											"end": 56816,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56794,
											"end": 57087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56794,
											"end": 57087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56869,
											"end": 56871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56847,
											"end": 56872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56847,
											"end": 56872,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56794,
											"end": 57087,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56794,
											"end": 57087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57039,
											"end": 57045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57033,
											"end": 57046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57020,
											"end": 57022,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57016,
											"end": 57031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57009,
											"end": 57047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 56485,
											"end": 57101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56617,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 56617,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56617,
											"end": 56658,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56607,
											"end": 56658,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56603,
											"end": 56733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56603,
											"end": 56733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56711,
											"end": 56713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 56689,
											"end": 56714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56689,
											"end": 56714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56603,
											"end": 56733,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56603,
											"end": 56733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56561,
											"end": 56747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56447,
											"end": 57111,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 56447,
											"end": 57111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56335,
											"end": 57117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42683,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42591,
											"end": 42683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42642,
											"end": 42655,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42667,
											"end": 42676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42094,
											"end": 42349,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42094,
											"end": 42349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42158,
											"end": 42171,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42183,
											"end": 42205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 42197,
											"end": 42204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 42183,
											"end": 42205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42205,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 42183,
											"end": 42205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42216,
											"end": 42237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42240,
											"end": 42250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 42240,
											"end": 42248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42240,
											"end": 42250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42240,
											"end": 42250,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 42240,
											"end": 42250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42216,
											"end": 42250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42216,
											"end": 42250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42291,
											"end": 42292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42273,
											"end": 42280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42292,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42309,
											"end": 42316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42318,
											"end": 42336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42318,
											"end": 42325,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42318,
											"end": 42334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 42318,
											"end": 42336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42318,
											"end": 42336,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42318,
											"end": 42336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 42295,
											"end": 42337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42295,
											"end": 42337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 42267,
											"end": 42342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42094,
											"end": 42349,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42094,
											"end": 42349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42094,
											"end": 42349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42094,
											"end": 42349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50050,
											"end": 50150,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 50050,
											"end": 50150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 50127,
											"end": 50129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 50117,
											"end": 50143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 50117,
											"end": 50143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50050,
											"end": 50150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50050,
											"end": 50150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50050,
											"end": 50150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59724,
											"end": 59891,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 59724,
											"end": 59891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59837,
											"end": 59846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59825,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59826,
											"end": 59833,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59815,
											"end": 59834,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59815,
											"end": 59846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59815,
											"end": 59846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "PUSH",
											"source": 0,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 59876,
											"end": 59883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 59861,
											"end": 59884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59861,
											"end": 59884,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 59724,
											"end": 59891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59724,
											"end": 59891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59724,
											"end": 59891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32986,
											"end": 33132,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 32986,
											"end": 33132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33062,
											"end": 33066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33100,
											"end": 33125,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33096,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33085,
											"end": 33125,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33078,
											"end": 33125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33078,
											"end": 33125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32986,
											"end": 33132,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32986,
											"end": 33132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32986,
											"end": 33132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32986,
											"end": 33132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45124,
											"end": 45239,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 45124,
											"end": 45239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45190,
											"end": 45197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45216,
											"end": 45223,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45224,
											"end": 45231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45216,
											"end": 45232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45209,
											"end": 45232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45209,
											"end": 45232,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45124,
											"end": 45239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45124,
											"end": 45239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45124,
											"end": 45239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45124,
											"end": 45239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54326,
											"end": 54327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54310,
											"end": 54314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54310,
											"end": 54328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 54297,
											"end": 54328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54293,
											"end": 54753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54293,
											"end": 54753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 54293,
											"end": 54753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54344,
											"end": 54357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54360,
											"end": 54382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 54374,
											"end": 54381,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54360,
											"end": 54373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 54360,
											"end": 54382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54360,
											"end": 54382,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 54360,
											"end": 54382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54344,
											"end": 54382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54344,
											"end": 54382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54526,
											"end": 54527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54514,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54541,
											"end": 54545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 54537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 54545,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 54510,
											"end": 54545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 54567,
											"end": 54572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54574,
											"end": 54578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 54550,
											"end": 54579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54550,
											"end": 54579,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 54550,
											"end": 54579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54549,
											"end": 54579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 54510,
											"end": 54579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54506,
											"end": 54648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54506,
											"end": 54648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 54506,
											"end": 54648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54628,
											"end": 54632,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54606,
											"end": 54633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54606,
											"end": 54633,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54506,
											"end": 54648,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 54506,
											"end": 54648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54666,
											"end": 54675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54662,
											"end": 54743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54662,
											"end": 54743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 54662,
											"end": 54743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54720,
											"end": 54727,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54716,
											"end": 54718,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54709,
											"end": 54714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54700,
											"end": 54728,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 54662,
											"end": 54743,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 54662,
											"end": 54743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54330,
											"end": 54753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54293,
											"end": 54753,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 54293,
											"end": 54753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54790,
											"end": 54792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54779,
											"end": 54786,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54763,
											"end": 54792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54137,
											"end": 54799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46867,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 46499,
											"end": 46867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46611,
											"end": 46649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 46625,
											"end": 46630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46632,
											"end": 46639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46641,
											"end": 46648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46611,
											"end": 46624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 46611,
											"end": 46649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46611,
											"end": 46649,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 46611,
											"end": 46649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46606,
											"end": 46861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 46606,
											"end": 46861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46686,
											"end": 46687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46669,
											"end": 46688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46669,
											"end": 46688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46669,
											"end": 46688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46669,
											"end": 46688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46665,
											"end": 46851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 46665,
											"end": 46851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46738,
											"end": 46745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 46715,
											"end": 46746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46715,
											"end": 46746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46665,
											"end": 46851,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 46665,
											"end": 46851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46819,
											"end": 46826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46828,
											"end": 46835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 46792,
											"end": 46836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46836,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46606,
											"end": 46861,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 46606,
											"end": 46861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46499,
											"end": 46867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23606,
											"end": 24304,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 23606,
											"end": 24304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23662,
											"end": 23675,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23711,
											"end": 23725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23748,
											"end": 23749,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23728,
											"end": 23745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23739,
											"end": 23744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23728,
											"end": 23738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 23728,
											"end": 23745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23728,
											"end": 23745,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 23728,
											"end": 23745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23728,
											"end": 23749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23797,
											"end": 23803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 23786,
											"end": 23804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23786,
											"end": 23804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23804,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23818,
											"end": 23829,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23944,
											"end": 23950,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23940,
											"end": 23942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23936,
											"end": 23951,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23928,
											"end": 23934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23924,
											"end": 23952,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23917,
											"end": 23952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23986,
											"end": 23990,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24010,
											"end": 24015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24149,
											"end": 24159,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 24144,
											"end": 24146,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24137,
											"end": 24142,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24133,
											"end": 24147,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 24128,
											"end": 24160,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 24123,
											"end": 24126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24115,
											"end": 24161,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 24205,
											"end": 24207,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 24196,
											"end": 24207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 24196,
											"end": 24207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24238,
											"end": 24239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24229,
											"end": 24234,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 24229,
											"end": 24239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 24225,
											"end": 24246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 23979,
											"end": 24261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24281,
											"end": 24287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24287,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24274,
											"end": 24287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23606,
											"end": 24304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23606,
											"end": 24304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23606,
											"end": 24304,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23606,
											"end": 24304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50371,
											"end": 50553,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 50371,
											"end": 50553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50465,
											"end": 50483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 50471,
											"end": 50473,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50475,
											"end": 50482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50465,
											"end": 50470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 50465,
											"end": 50483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50465,
											"end": 50483,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 50465,
											"end": 50483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50493,
											"end": 50546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 50524,
											"end": 50525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50528,
											"end": 50530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50532,
											"end": 50539,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50541,
											"end": 50545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50493,
											"end": 50515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 50493,
											"end": 50546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50493,
											"end": 50546,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 50493,
											"end": 50546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50371,
											"end": 50553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50371,
											"end": 50553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50371,
											"end": 50553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50371,
											"end": 50553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45896,
											"end": 45900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45950,
											"end": 45951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 45938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 45952,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45978,
											"end": 45985,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 45985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45969,
											"end": 45985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 45974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 45985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45969,
											"end": 45985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 45985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 46006,
											"end": 46011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46013,
											"end": 46020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 45989,
											"end": 46021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45989,
											"end": 46021,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 45989,
											"end": 46021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 45969,
											"end": 46021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46050,
											"end": 46057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46025,
											"end": 46057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 46038,
											"end": 46045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 46025,
											"end": 46046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46046,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 46025,
											"end": 46046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46025,
											"end": 46057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46025,
											"end": 46057,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 45969,
											"end": 46057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 45931,
											"end": 46058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45912,
											"end": 46058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45912,
											"end": 46058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45793,
											"end": 46065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20130,
											"end": 21046,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 20130,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20183,
											"end": 20190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20202,
											"end": 20216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20219,
											"end": 20220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20202,
											"end": 20220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20202,
											"end": 20220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20267,
											"end": 20275,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20258,
											"end": 20263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20258,
											"end": 20275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20254,
											"end": 20357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20304,
											"end": 20312,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20295,
											"end": 20312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20295,
											"end": 20312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20340,
											"end": 20342,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20330,
											"end": 20342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20330,
											"end": 20342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20254,
											"end": 20357,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 20254,
											"end": 20357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20383,
											"end": 20391,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20374,
											"end": 20379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20374,
											"end": 20391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20370,
											"end": 20473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20370,
											"end": 20473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20428,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20411,
											"end": 20428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20411,
											"end": 20428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20456,
											"end": 20458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20446,
											"end": 20458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20446,
											"end": 20458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20446,
											"end": 20458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20446,
											"end": 20458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20370,
											"end": 20473,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 20370,
											"end": 20473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20499,
											"end": 20507,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20490,
											"end": 20495,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20490,
											"end": 20507,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20486,
											"end": 20589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20486,
											"end": 20589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20536,
											"end": 20544,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20527,
											"end": 20544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20527,
											"end": 20544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20572,
											"end": 20574,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20562,
											"end": 20574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20562,
											"end": 20574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20486,
											"end": 20589,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 20486,
											"end": 20589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20615,
											"end": 20622,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20606,
											"end": 20611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20606,
											"end": 20622,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20602,
											"end": 20702,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20651,
											"end": 20658,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20642,
											"end": 20658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20642,
											"end": 20658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20686,
											"end": 20687,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 20676,
											"end": 20687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20676,
											"end": 20687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20676,
											"end": 20687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20676,
											"end": 20687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20602,
											"end": 20702,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 20602,
											"end": 20702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20728,
											"end": 20735,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20719,
											"end": 20724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20719,
											"end": 20735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20715,
											"end": 20815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20715,
											"end": 20815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20764,
											"end": 20771,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20755,
											"end": 20771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20799,
											"end": 20800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20789,
											"end": 20800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20789,
											"end": 20800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20715,
											"end": 20815,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 20715,
											"end": 20815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20841,
											"end": 20848,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20832,
											"end": 20837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20848,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20828,
											"end": 20928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20828,
											"end": 20928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20877,
											"end": 20884,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 20868,
											"end": 20884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20868,
											"end": 20884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20912,
											"end": 20913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20902,
											"end": 20913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20902,
											"end": 20913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20828,
											"end": 20928,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 20828,
											"end": 20928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20954,
											"end": 20961,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 20945,
											"end": 20950,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20945,
											"end": 20961,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20941,
											"end": 21007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20941,
											"end": 21007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20991,
											"end": 20992,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20981,
											"end": 20992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 20992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 20992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 20992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20941,
											"end": 21007,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 20941,
											"end": 21007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21033,
											"end": 21039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21026,
											"end": 21039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20130,
											"end": 21046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20130,
											"end": 21046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20130,
											"end": 21046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20130,
											"end": 21046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49372,
											"end": 49699,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 49372,
											"end": 49699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49453,
											"end": 49454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49439,
											"end": 49455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49439,
											"end": 49455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49441,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49439,
											"end": 49455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49439,
											"end": 49455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49435,
											"end": 49522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 49435,
											"end": 49522,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49508,
											"end": 49509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 49478,
											"end": 49511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49478,
											"end": 49511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49435,
											"end": 49522,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 49435,
											"end": 49522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49555,
											"end": 49587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49563,
											"end": 49565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49567,
											"end": 49574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49584,
											"end": 49585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49555,
											"end": 49562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 49555,
											"end": 49587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49555,
											"end": 49587,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 49555,
											"end": 49587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49626,
											"end": 49627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49601,
											"end": 49628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49601,
											"end": 49628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49601,
											"end": 49614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49601,
											"end": 49628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49601,
											"end": 49628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49601,
											"end": 49628,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49597,
											"end": 49693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49597,
											"end": 49693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49679,
											"end": 49680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 49651,
											"end": 49682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49651,
											"end": 49682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49597,
											"end": 49693,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 49597,
											"end": 49693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49425,
											"end": 49699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49372,
											"end": 49699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49372,
											"end": 49699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49372,
											"end": 49699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5575,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5515,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5543,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5557,
											"end": 5569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5575,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5723,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5581,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5631,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5691,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 5691,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5682,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 5664,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 5664,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 5729,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5788,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 5843,
											"end": 5848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5812,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 5812,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 6005,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5861,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5929,
											"end": 5938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 5993,
											"end": 5998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 5962,
											"end": 5999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 5962,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 6005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 6005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 6005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5861,
											"end": 6005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6178,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6011,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 6165,
											"end": 6170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 6116,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6171,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 6116,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6104,
											"end": 6172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6322,
											"end": 6331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6310,
											"end": 6336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 6432,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6430,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 6346,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6435,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 6346,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6184,
											"end": 6442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6531,
											"end": 6554,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6562,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6752,
											"end": 6759,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6732,
											"end": 6741,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6707,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6760,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6770,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 6888,
											"end": 6893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6870,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6894,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 6870,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7038,
											"end": 7040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7095,
											"end": 7101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 7051,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7051,
											"end": 7122,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 7051,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 7129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7251,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7135,
											"end": 7251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 7205,
											"end": 7226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 7205,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7227,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7239,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7243,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 7251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7345,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7316,
											"end": 7345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7354,
											"end": 7384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 7354,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7461,
											"end": 7467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7518,
											"end": 7520,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7506,
											"end": 7515,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7493,
											"end": 7516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7489,
											"end": 7521,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7605,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7486,
											"end": 7605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 7524,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 7524,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7603,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 7524,
											"end": 7603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7605,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7486,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7669,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 7714,
											"end": 7721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7694,
											"end": 7703,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7669,
											"end": 7722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7669,
											"end": 7722,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 7669,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7722,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7659,
											"end": 7722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7797,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7839,
											"end": 7846,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7830,
											"end": 7836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7828,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 7797,
											"end": 7847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7847,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 7797,
											"end": 7847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7742,
											"end": 7857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7987,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7870,
											"end": 7987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7969,
											"end": 7981,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 8110,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 7993,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8104,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8296,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8116,
											"end": 8296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8241,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8242,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 8258,
											"end": 8259,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8251,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8583,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8302,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8385,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 8407,
											"end": 8411,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8385,
											"end": 8412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8385,
											"end": 8412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8385,
											"end": 8412,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 8385,
											"end": 8412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8515,
											"end": 8521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8500,
											"end": 8522,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8467,
											"end": 8477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8498,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8461,
											"end": 8523,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8546,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8546,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8458,
											"end": 8546,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8526,
											"end": 8544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 8526,
											"end": 8544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8458,
											"end": 8546,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8458,
											"end": 8546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8566,
											"end": 8576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8562,
											"end": 8564,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8555,
											"end": 8577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8718,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 8589,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 8650,
											"end": 8670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 8650,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8640,
											"end": 8670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8679,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 8707,
											"end": 8711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8679,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8679,
											"end": 8712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8679,
											"end": 8712,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 8679,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8718,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 9031,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 8724,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8875,
											"end": 8893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8867,
											"end": 8873,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8894,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8917,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 8861,
											"end": 8917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 8897,
											"end": 8915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 8897,
											"end": 8915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8861,
											"end": 8917,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 8861,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 8957,
											"end": 8963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 8964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 8935,
											"end": 8964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8935,
											"end": 8964,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 8935,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9023,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9009,
											"end": 9024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9001,
											"end": 9024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9001,
											"end": 9024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 9031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 9031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 9031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 9031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9183,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9037,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9134,
											"end": 9140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9124,
											"end": 9127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9111,
											"end": 9141,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 9175,
											"end": 9176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9164,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9177,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9266,
											"end": 9271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 9307,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9348,
											"end": 9354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 9307,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9307,
											"end": 9355,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 9307,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9291,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 9291,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9291,
											"end": 9356,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 9291,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9379,
											"end": 9385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9372,
											"end": 9377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9455,
											"end": 9458,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9441,
											"end": 9444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9459,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 9431,
											"end": 9543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 9462,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 9462,
											"end": 9541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9541,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 9462,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 9431,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 9599,
											"end": 9605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9594,
											"end": 9597,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9589,
											"end": 9592,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9552,
											"end": 9606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9552,
											"end": 9606,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 9552,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9272,
											"end": 9612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9686,
											"end": 9691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9728,
											"end": 9732,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9712,
											"end": 9739,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9702,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 9702,
											"end": 9824,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 9743,
											"end": 9822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 9743,
											"end": 9822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9822,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 9743,
											"end": 9822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9702,
											"end": 9824,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 9702,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9860,
											"end": 9866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9847,
											"end": 9867,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 9959,
											"end": 9962,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9936,
											"end": 9942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 9949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9885,
											"end": 9963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 9885,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9963,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9692,
											"end": 9969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10070,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10086,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10094,
											"end": 10100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10143,
											"end": 10146,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10131,
											"end": 10140,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10129,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10118,
											"end": 10141,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10147,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 10111,
											"end": 10231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 10150,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 10150,
											"end": 10229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10229,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 10150,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10231,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 10111,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10270,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 10340,
											"end": 10347,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10331,
											"end": 10337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10329,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10295,
											"end": 10348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 10295,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10348,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10423,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 10468,
											"end": 10475,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10459,
											"end": 10465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10457,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 10423,
											"end": 10476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10476,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 10423,
											"end": 10476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10476,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10525,
											"end": 10527,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 10596,
											"end": 10603,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10585,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 10551,
											"end": 10604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 10551,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10604,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10681,
											"end": 10683,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10670,
											"end": 10679,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10685,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10704,
											"end": 10710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10731,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10734,
											"end": 10813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 10734,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 10698,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 10893,
											"end": 10900,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10873,
											"end": 10882,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 10839,
											"end": 10901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10901,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 10839,
											"end": 10901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10624,
											"end": 10911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 11232,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 10924,
											"end": 11232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10986,
											"end": 10990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11094,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11068,
											"end": 11074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11065,
											"end": 11095,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11118,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 11062,
											"end": 11118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 11098,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11062,
											"end": 11118,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 11062,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 11136,
											"end": 11165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11165,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 11136,
											"end": 11165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11128,
											"end": 11165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11224,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11210,
											"end": 11225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 11232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 11232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 11232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 11232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 11357,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 11399,
											"end": 11405,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 11357,
											"end": 11406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11406,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 11357,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 11341,
											"end": 11407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11407,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 11341,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11416,
											"end": 11437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11468,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11461,
											"end": 11466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11457,
											"end": 11473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11492,
											"end": 11495,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11488,
											"end": 11504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11485,
											"end": 11510,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 11482,
											"end": 11594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 11513,
											"end": 11592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 11513,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11482,
											"end": 11594,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 11482,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 11650,
											"end": 11656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 11603,
											"end": 11657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11657,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 11603,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11322,
											"end": 11663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11739,
											"end": 11744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11788,
											"end": 11791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11785,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11773,
											"end": 11779,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11792,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 11755,
											"end": 11877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 11796,
											"end": 11875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 11796,
											"end": 11875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11796,
											"end": 11875,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 11796,
											"end": 11875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11877,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 11755,
											"end": 11877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11913,
											"end": 11919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11900,
											"end": 11920,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 12013,
											"end": 12016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12002,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11990,
											"end": 11996,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 12003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 12017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 11938,
											"end": 12017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11938,
											"end": 12017,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 11938,
											"end": 12017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 12017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 12023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 12023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12098,
											"end": 12104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12147,
											"end": 12149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12126,
											"end": 12133,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12145,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12150,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12115,
											"end": 12234,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12115,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 12115,
											"end": 12234,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 12153,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12153,
											"end": 12232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12232,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 12153,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12115,
											"end": 12234,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 12115,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12290,
											"end": 12299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12273,
											"end": 12304,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12323,
											"end": 12329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12350,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 12317,
											"end": 12434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12353,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 12353,
											"end": 12432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 12353,
											"end": 12432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12353,
											"end": 12432,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 12353,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12317,
											"end": 12434,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 12317,
											"end": 12434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 12513,
											"end": 12520,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12504,
											"end": 12510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12493,
											"end": 12502,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12489,
											"end": 12511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 12458,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12458,
											"end": 12521,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 12458,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12448,
											"end": 12521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12448,
											"end": 12521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12244,
											"end": 12531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12612,
											"end": 12618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12620,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12669,
											"end": 12671,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12648,
											"end": 12655,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12644,
											"end": 12667,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12640,
											"end": 12672,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 12637,
											"end": 12756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 12675,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 12675,
											"end": 12754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12754,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 12675,
											"end": 12754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12756,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 12637,
											"end": 12756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12795,
											"end": 12796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12820,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 12865,
											"end": 12872,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12845,
											"end": 12854,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12820,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12820,
											"end": 12873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12820,
											"end": 12873,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 12820,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12873,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12810,
											"end": 12873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12922,
											"end": 12924,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12948,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 12993,
											"end": 13000,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12984,
											"end": 12990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12973,
											"end": 12982,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 12991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 12948,
											"end": 13001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13001,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 12948,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 13001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 13001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12893,
											"end": 13011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12544,
											"end": 13018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13204,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 13024,
											"end": 13204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13149,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13069,
											"end": 13070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13062,
											"end": 13150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13169,
											"end": 13173,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 13166,
											"end": 13167,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13197,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13190,
											"end": 13191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13198,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13530,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 13210,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13254,
											"end": 13260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13292,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13285,
											"end": 13289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13293,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13271,
											"end": 13293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13271,
											"end": 13293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13339,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13332,
											"end": 13336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13328,
											"end": 13340,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13359,
											"end": 13377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 13349,
											"end": 13430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13419,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 13407,
											"end": 13413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13403,
											"end": 13420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13430,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 13349,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13477,
											"end": 13479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13469,
											"end": 13475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13480,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13440,
											"end": 13524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 13440,
											"end": 13524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 13496,
											"end": 13514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 13496,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13440,
											"end": 13524,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 13440,
											"end": 13524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13210,
											"end": 13530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13685,
											"end": 13689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13723,
											"end": 13725,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13712,
											"end": 13721,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13736,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 13804,
											"end": 13805,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13793,
											"end": 13802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 13806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13786,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13736,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 13736,
											"end": 13807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13736,
											"end": 13807,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 13736,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13817,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 13885,
											"end": 13887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13874,
											"end": 13883,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13870,
											"end": 13888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13861,
											"end": 13867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13817,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 13817,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13817,
											"end": 13889,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 13817,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13956,
											"end": 13965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13952,
											"end": 13970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13943,
											"end": 13949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 13899,
											"end": 13971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 13899,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13536,
											"end": 13978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14086,
											"end": 14097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14123,
											"end": 14126,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14108,
											"end": 14126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14272,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 14305,
											"end": 14310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14272,
											"end": 14311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14311,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 14272,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 14409,
											"end": 14415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14404,
											"end": 14407,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 14327,
											"end": 14416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 14327,
											"end": 14416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14320,
											"end": 14416,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14320,
											"end": 14416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 14483,
											"end": 14489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14478,
											"end": 14481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14464,
											"end": 14469,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14460,
											"end": 14476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14425,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 14425,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14515,
											"end": 14521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14510,
											"end": 14513,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14499,
											"end": 14522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14248,
											"end": 14528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14714,
											"end": 14717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14736,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14827,
											"end": 14830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14818,
											"end": 14824,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 14736,
											"end": 14831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14736,
											"end": 14831,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14736,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14729,
											"end": 14831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14729,
											"end": 14831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 14939,
											"end": 14942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14930,
											"end": 14936,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 14848,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14848,
											"end": 14943,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 14848,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14960,
											"end": 14963,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14534,
											"end": 14969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14975,
											"end": 15197,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 14975,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15149,
											"name": "PUSH",
											"source": 1,
											"value": "5468652063616C6C65722063616E6E6F742072756E20746869732066756E6374"
										},
										{
											"begin": 15111,
											"end": 15112,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15099,
											"end": 15113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15184,
											"end": 15189,
											"name": "PUSH",
											"source": 1,
											"value": "696F6E0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15179,
											"end": 15181,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15171,
											"end": 15177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15167,
											"end": 15182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15160,
											"end": 15190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14975,
											"end": 15197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14975,
											"end": 15197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 15430,
											"end": 15432,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 15425,
											"end": 15428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 15366,
											"end": 15433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 15366,
											"end": 15433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15359,
											"end": 15433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15359,
											"end": 15433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 15531,
											"end": 15534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 15442,
											"end": 15535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 15442,
											"end": 15535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15560,
											"end": 15562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15555,
											"end": 15558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15551,
											"end": 15563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15203,
											"end": 15569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15741,
											"end": 15745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15781,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15768,
											"end": 15777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15764,
											"end": 15782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15756,
											"end": 15782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15756,
											"end": 15782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15837,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15822,
											"end": 15826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15814,
											"end": 15815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15812,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15799,
											"end": 15816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15792,
											"end": 15839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 15982,
											"end": 15986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 15856,
											"end": 15987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 15856,
											"end": 15987,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15848,
											"end": 15987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15848,
											"end": 15987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15575,
											"end": 15994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16000,
											"end": 16180,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 16000,
											"end": 16180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16048,
											"end": 16125,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16045,
											"end": 16046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16038,
											"end": 16126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16145,
											"end": 16149,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 16142,
											"end": 16143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16135,
											"end": 16150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16169,
											"end": 16173,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16166,
											"end": 16167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16159,
											"end": 16174,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16419,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 16186,
											"end": 16419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16225,
											"end": 16228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16248,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 16266,
											"end": 16271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 16248,
											"end": 16272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16248,
											"end": 16272,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 16248,
											"end": 16272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16239,
											"end": 16272,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16239,
											"end": 16272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16360,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16287,
											"end": 16292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16284,
											"end": 16361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16281,
											"end": 16384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 16281,
											"end": 16384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 16364,
											"end": 16382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 16364,
											"end": 16382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16382,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 16364,
											"end": 16382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16281,
											"end": 16384,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 16281,
											"end": 16384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16411,
											"end": 16412,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16404,
											"end": 16409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16400,
											"end": 16413,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16393,
											"end": 16413,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16393,
											"end": 16413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16186,
											"end": 16419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16523,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 16425,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16476,
											"end": 16482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16510,
											"end": 16515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16504,
											"end": 16516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16425,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16612,
											"end": 16623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16641,
											"end": 16644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16634,
											"end": 16653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16686,
											"end": 16690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16681,
											"end": 16684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16677,
											"end": 16691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16662,
											"end": 16691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16789,
											"end": 16792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16817,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 16849,
											"end": 16854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 16817,
											"end": 16855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16817,
											"end": 16855,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 16817,
											"end": 16855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 16934,
											"end": 16940,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16929,
											"end": 16932,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 16871,
											"end": 16941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16941,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 16871,
											"end": 16941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16864,
											"end": 16941,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16864,
											"end": 16941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 17008,
											"end": 17014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17003,
											"end": 17006,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16996,
											"end": 17000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16989,
											"end": 16994,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16985,
											"end": 17001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 17015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 16950,
											"end": 17015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16950,
											"end": 17015,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 16950,
											"end": 17015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 17062,
											"end": 17068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 17040,
											"end": 17069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17069,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 17040,
											"end": 17069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17035,
											"end": 17038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17031,
											"end": 17070,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16793,
											"end": 17076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16703,
											"end": 17076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17277,
											"end": 17281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17315,
											"end": 17318,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17304,
											"end": 17313,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17292,
											"end": 17319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17292,
											"end": 17319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17329,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 17397,
											"end": 17398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17382,
											"end": 17399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17373,
											"end": 17379,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17329,
											"end": 17400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 17329,
											"end": 17400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17329,
											"end": 17400,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 17329,
											"end": 17400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17410,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 17478,
											"end": 17480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17463,
											"end": 17481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17454,
											"end": 17460,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17410,
											"end": 17482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 17410,
											"end": 17482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17410,
											"end": 17482,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 17410,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 17560,
											"end": 17562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17549,
											"end": 17558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17545,
											"end": 17563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17536,
											"end": 17542,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 17492,
											"end": 17564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17492,
											"end": 17564,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 17492,
											"end": 17564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17611,
											"end": 17620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17605,
											"end": 17609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17601,
											"end": 17621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17596,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17585,
											"end": 17594,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17581,
											"end": 17599,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17574,
											"end": 17622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17639,
											"end": 17715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 17710,
											"end": 17714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17701,
											"end": 17707,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17639,
											"end": 17715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 17639,
											"end": 17715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17639,
											"end": 17715,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 17639,
											"end": 17715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17631,
											"end": 17715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17631,
											"end": 17715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17082,
											"end": 17722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17784,
											"end": 17789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17815,
											"end": 17821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17809,
											"end": 17822,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17822,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17800,
											"end": 17822,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 17857,
											"end": 17862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 17831,
											"end": 17863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17863,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 17831,
											"end": 17863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17944,
											"end": 17950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17993,
											"end": 17995,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17981,
											"end": 17990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17972,
											"end": 17979,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17968,
											"end": 17991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17964,
											"end": 17996,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17961,
											"end": 18080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17961,
											"end": 18080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17961,
											"end": 18080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 17999,
											"end": 18078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 17999,
											"end": 18078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18078,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 17999,
											"end": 18078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17961,
											"end": 18080,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 17961,
											"end": 18080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18119,
											"end": 18120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18144,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18199,
											"end": 18206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18190,
											"end": 18196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18179,
											"end": 18188,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18144,
											"end": 18207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 18144,
											"end": 18207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18144,
											"end": 18207,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 18144,
											"end": 18207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18134,
											"end": 18207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18134,
											"end": 18207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18090,
											"end": 18217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17875,
											"end": 18224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18371,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 18230,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18279,
											"end": 18283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18302,
											"end": 18305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18294,
											"end": 18305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18294,
											"end": 18305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18325,
											"end": 18328,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18322,
											"end": 18323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18315,
											"end": 18329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18359,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18356,
											"end": 18357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18346,
											"end": 18364,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18338,
											"end": 18364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18230,
											"end": 18371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18470,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 18377,
											"end": 18470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18414,
											"end": 18420,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18461,
											"end": 18463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18456,
											"end": 18458,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 18449,
											"end": 18454,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18445,
											"end": 18459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18441,
											"end": 18464,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18431,
											"end": 18464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18431,
											"end": 18464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18520,
											"end": 18528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18570,
											"end": 18575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18564,
											"end": 18568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18560,
											"end": 18576,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 18539,
											"end": 18576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18539,
											"end": 18576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18476,
											"end": 18583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18658,
											"end": 18664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18708,
											"end": 18709,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 18696,
											"end": 18706,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18692,
											"end": 18710,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18731,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 18761,
											"end": 18827,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18750,
											"end": 18759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18731,
											"end": 18828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 18731,
											"end": 18828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18731,
											"end": 18828,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 18731,
											"end": 18828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 18879,
											"end": 18887,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 18877,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 18849,
											"end": 18888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 18849,
											"end": 18888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18837,
											"end": 18888,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18837,
											"end": 18888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18921,
											"end": 18925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18917,
											"end": 18926,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 18910,
											"end": 18915,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18906,
											"end": 18927,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18927,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18897,
											"end": 18927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18970,
											"end": 18974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18960,
											"end": 18968,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18956,
											"end": 18975,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18949,
											"end": 18954,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18946,
											"end": 18976,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 18936,
											"end": 18976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18936,
											"end": 18976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18665,
											"end": 18982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18589,
											"end": 18982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19130,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 18988,
											"end": 19130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19038,
											"end": 19047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19071,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 19089,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19116,
											"end": 19121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 19098,
											"end": 19122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 19098,
											"end": 19122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19089,
											"end": 19123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 19089,
											"end": 19123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19089,
											"end": 19123,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 19089,
											"end": 19123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 19071,
											"end": 19124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19071,
											"end": 19124,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 19071,
											"end": 19124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19058,
											"end": 19124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19058,
											"end": 19124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 19130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19211,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 19136,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19179,
											"end": 19182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19200,
											"end": 19205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19193,
											"end": 19205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19136,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19486,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 19217,
											"end": 19486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19327,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 19358,
											"end": 19365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19327,
											"end": 19366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 19327,
											"end": 19366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19327,
											"end": 19366,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 19327,
											"end": 19366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19388,
											"end": 19479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 19437,
											"end": 19478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19461,
											"end": 19477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 19437,
											"end": 19478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19437,
											"end": 19478,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 19437,
											"end": 19478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19429,
											"end": 19435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19422,
											"end": 19426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19416,
											"end": 19427,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 19388,
											"end": 19479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 19388,
											"end": 19479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19388,
											"end": 19479,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 19388,
											"end": 19479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19382,
											"end": 19386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19375,
											"end": 19480,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 19293,
											"end": 19486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19217,
											"end": 19486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19492,
											"end": 19565,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 19492,
											"end": 19565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19537,
											"end": 19540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19492,
											"end": 19565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19492,
											"end": 19565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19571,
											"end": 19760,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 19571,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19648,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 19648,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 19648,
											"end": 19680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19648,
											"end": 19680,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 19648,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19689,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 19747,
											"end": 19753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19739,
											"end": 19745,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19733,
											"end": 19737,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19689,
											"end": 19754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 19689,
											"end": 19754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19689,
											"end": 19754,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 19689,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19624,
											"end": 19760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19571,
											"end": 19760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19571,
											"end": 19760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19571,
											"end": 19760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19766,
											"end": 19952,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 19766,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19843,
											"end": 19846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19833,
											"end": 19847,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19897,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 19934,
											"end": 19935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19927,
											"end": 19932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19897,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 19897,
											"end": 19936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19897,
											"end": 19936,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 19897,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19870,
											"end": 19871,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 19863,
											"end": 19868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19859,
											"end": 19872,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19872,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19850,
											"end": 19872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 19826,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19766,
											"end": 19952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19766,
											"end": 19952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19766,
											"end": 19952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20501,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 19958,
											"end": 20501,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20059,
											"end": 20061,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 20054,
											"end": 20057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20051,
											"end": 20062,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20494,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20048,
											"end": 20494,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20093,
											"end": 20131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 20125,
											"end": 20130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20093,
											"end": 20131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 20093,
											"end": 20131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20093,
											"end": 20131,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 20093,
											"end": 20131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20177,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 20195,
											"end": 20205,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20177,
											"end": 20206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 20177,
											"end": 20206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20177,
											"end": 20206,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 20177,
											"end": 20206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20167,
											"end": 20175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20163,
											"end": 20207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20360,
											"end": 20362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20348,
											"end": 20358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20345,
											"end": 20363,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20391,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 20342,
											"end": 20391,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20381,
											"end": 20389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20366,
											"end": 20389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20366,
											"end": 20389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20391,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 20342,
											"end": 20391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20404,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 20460,
											"end": 20482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 20478,
											"end": 20481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 20460,
											"end": 20482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20460,
											"end": 20482,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 20460,
											"end": 20482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20450,
											"end": 20458,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20446,
											"end": 20483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20433,
											"end": 20444,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20404,
											"end": 20484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 20404,
											"end": 20484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20404,
											"end": 20484,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 20404,
											"end": 20484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20063,
											"end": 20494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20063,
											"end": 20494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20048,
											"end": 20494,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 20048,
											"end": 20494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20561,
											"end": 20569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20611,
											"end": 20616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20605,
											"end": 20609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20601,
											"end": 20617,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 20580,
											"end": 20617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20580,
											"end": 20617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20507,
											"end": 20624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 20680,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20707,
											"end": 20758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 20755,
											"end": 20756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20751,
											"end": 20757,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20743,
											"end": 20748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20740,
											"end": 20741,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 20736,
											"end": 20749,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 20707,
											"end": 20758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 20707,
											"end": 20758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20707,
											"end": 20758,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 20707,
											"end": 20758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20703,
											"end": 20759,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 20788,
											"end": 20792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20782,
											"end": 20786,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20778,
											"end": 20793,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20768,
											"end": 20793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20768,
											"end": 20793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20681,
											"end": 20799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20630,
											"end": 20799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 20884,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21026,
											"end": 21055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 21051,
											"end": 21054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21045,
											"end": 21049,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21026,
											"end": 21055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 21026,
											"end": 21055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21026,
											"end": 21055,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 21026,
											"end": 21055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21018,
											"end": 21055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21018,
											"end": 21055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21088,
											"end": 21091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21085,
											"end": 21086,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 21081,
											"end": 21092,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 21075,
											"end": 21079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21072,
											"end": 21093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21064,
											"end": 21093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20804,
											"end": 21099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21104,
											"end": 22499,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 21104,
											"end": 22499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21221,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 21254,
											"end": 21257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21221,
											"end": 21258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 21221,
											"end": 21258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21221,
											"end": 21258,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 21221,
											"end": 21258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21323,
											"end": 21341,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21315,
											"end": 21321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21312,
											"end": 21342,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21309,
											"end": 21365,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21309,
											"end": 21365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 21309,
											"end": 21365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21345,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 21345,
											"end": 21363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 21345,
											"end": 21363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21345,
											"end": 21363,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 21345,
											"end": 21363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21309,
											"end": 21365,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 21309,
											"end": 21365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21389,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 21421,
											"end": 21425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21415,
											"end": 21426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 21389,
											"end": 21427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 21389,
											"end": 21427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21389,
											"end": 21427,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 21389,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 21534,
											"end": 21540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21526,
											"end": 21532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21520,
											"end": 21524,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 21474,
											"end": 21541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21541,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 21474,
											"end": 21541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21568,
											"end": 21569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21592,
											"end": 21596,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21579,
											"end": 21596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21579,
											"end": 21596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21624,
											"end": 21626,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21616,
											"end": 21622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21613,
											"end": 21627,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 21641,
											"end": 21642,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22298,
											"end": 22299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22315,
											"end": 22321,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22312,
											"end": 22389,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22312,
											"end": 22389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 22312,
											"end": 22389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22364,
											"end": 22373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22359,
											"end": 22362,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 22355,
											"end": 22374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22349,
											"end": 22375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22340,
											"end": 22375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22340,
											"end": 22375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22312,
											"end": 22389,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 22312,
											"end": 22389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 22475,
											"end": 22481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22468,
											"end": 22473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 22415,
											"end": 22482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22482,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 22415,
											"end": 22482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22409,
											"end": 22413,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22402,
											"end": 22483,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22271,
											"end": 22493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21606,
											"end": 22493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 21606,
											"end": 22493,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 21636,
											"end": 22254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21688,
											"end": 21692,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 21684,
											"end": 21693,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 21676,
											"end": 21682,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21672,
											"end": 21694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21722,
											"end": 21759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 21754,
											"end": 21758,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21722,
											"end": 21759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 21722,
											"end": 21759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21722,
											"end": 21759,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 21722,
											"end": 21759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21781,
											"end": 21782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21806,
											"end": 21807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21803,
											"end": 21817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21888,
											"end": 21897,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21883,
											"end": 21886,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 21879,
											"end": 21898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21873,
											"end": 21899,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21865,
											"end": 21871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21858,
											"end": 21900,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 21940,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21931,
											"end": 21937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21927,
											"end": 21941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21917,
											"end": 21941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21917,
											"end": 21941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 21988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21975,
											"end": 21984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21971,
											"end": 21989,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21958,
											"end": 21989,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 21958,
											"end": 21989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21832,
											"end": 21836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21829,
											"end": 21830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21825,
											"end": 21837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21820,
											"end": 21837,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21820,
											"end": 21837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 21795,
											"end": 22003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22031,
											"end": 22037,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22022,
											"end": 22029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22019,
											"end": 22038,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 22016,
											"end": 22195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22089,
											"end": 22098,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22084,
											"end": 22087,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 22080,
											"end": 22099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22074,
											"end": 22100,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 22132,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 22174,
											"end": 22178,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22166,
											"end": 22172,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 22162,
											"end": 22179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22151,
											"end": 22160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22132,
											"end": 22180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 22132,
											"end": 22180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22132,
											"end": 22180,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 22132,
											"end": 22180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22124,
											"end": 22130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22117,
											"end": 22181,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22016,
											"end": 22195,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 22016,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22241,
											"end": 22242,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 22237,
											"end": 22238,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 22229,
											"end": 22235,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 22225,
											"end": 22239,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22221,
											"end": 22243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22215,
											"end": 22219,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 22208,
											"end": 22244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 21643,
											"end": 22254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21643,
											"end": 22254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21643,
											"end": 22254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21606,
											"end": 22493,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 21606,
											"end": 22493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21606,
											"end": 22493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 22499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 22499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21196,
											"end": 22499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21104,
											"end": 22499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21104,
											"end": 22499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21104,
											"end": 22499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22626,
											"end": 22630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22664,
											"end": 22666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 22653,
											"end": 22662,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22649,
											"end": 22667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22641,
											"end": 22667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22677,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 22745,
											"end": 22746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22734,
											"end": 22743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22730,
											"end": 22747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22721,
											"end": 22727,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 22677,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 22677,
											"end": 22748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22677,
											"end": 22748,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 22677,
											"end": 22748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 22826,
											"end": 22828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22815,
											"end": 22824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22811,
											"end": 22829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22802,
											"end": 22808,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 22758,
											"end": 22830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22758,
											"end": 22830,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 22758,
											"end": 22830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22505,
											"end": 22837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22843,
											"end": 23023,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 22843,
											"end": 23023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22891,
											"end": 22968,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22888,
											"end": 22889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22881,
											"end": 22969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22988,
											"end": 22992,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 22985,
											"end": 22986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22978,
											"end": 22993,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23012,
											"end": 23016,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 23009,
											"end": 23010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23002,
											"end": 23017,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"NFTIncentives_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Progress()": "5f53575f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(string)": "d85d3d27",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setProgressSC(address)": "b876e3b6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenCount()": "9f181b5e",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Progress\",\"outputs\":[{\"internalType\":\"contract IProgress\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_progressSC\",\"type\":\"address\"}],\"name\":\"setProgressSC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"IncentiveNFTs\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1943,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1945,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1949,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1953,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1957,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1963,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2962,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 1578,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 3071,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "Progress",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IProgress)3062"
							},
							{
								"astId": 3073,
								"contract": "NFTIncentives_flattened.sol:IncentiveNFTs",
								"label": "tokenCount",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IProgress)3062": {
								"encoding": "inplace",
								"label": "contract IProgress",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTIncentives_flattened.sol\":8119:23033  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTIncentives_flattened.sol\":8119:23033  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122036e292e0af6df2ed6ed8aefde6e5d7394ea8e82dcce2c11a539e0fe40331320664736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036e292e0af6df2ed6ed8aefde6e5d7394ea8e82dcce2c11a539e0fe40331320664736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xE2 SWAP3 0xE0 0xAF PUSH14 0xF2ED6ED8AEFDE6E5D7394EA8E82D 0xCC 0xE2 0xC1 BYTE MSTORE8 SWAP15 0xF 0xE4 SUB BALANCE ORIGIN MOD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "8119:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122036e292e0af6df2ed6ed8aefde6e5d7394ea8e82dcce2c11a539e0fe40331320664736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xE2 SWAP3 0xE0 0xAF PUSH14 0xF2ED6ED8AEFDE6E5D7394EA8E82D 0xCC 0xE2 0xC1 BYTE MSTORE8 SWAP15 0xF 0xE4 SUB BALANCE ORIGIN MOD PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "8119:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8119,
									"end": 23033,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122036e292e0af6df2ed6ed8aefde6e5d7394ea8e82dcce2c11a539e0fe40331320664736f6c63430008170033",
									".code": [
										{
											"begin": 8119,
											"end": 23033,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8119,
											"end": 23033,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTIncentives_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1578,
								"contract": "NFTIncentives_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTIncentives_flattened.sol\":6844:7891  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTIncentives_flattened.sol\":6844:7891  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220eb04e953454161ebf642e4202b9f975f2e828ac894257a255b4fd679dd3ca19d64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eb04e953454161ebf642e4202b9f975f2e828ac894257a255b4fd679dd3ca19d64736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DIV 0xE9 MSTORE8 GASLIMIT COINBASE PUSH2 0xEBF6 TIMESTAMP 0xE4 KECCAK256 0x2B SWAP16 SWAP8 PUSH0 0x2E DUP3 DUP11 0xC8 SWAP5 0x25 PUSH27 0x255B4FD679DD3CA19D64736F6C6343000817003300000000000000 ",
							"sourceMap": "6844:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eb04e953454161ebf642e4202b9f975f2e828ac894257a255b4fd679dd3ca19d64736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB DIV 0xE9 MSTORE8 GASLIMIT COINBASE PUSH2 0xEBF6 TIMESTAMP 0xE4 KECCAK256 0x2B SWAP16 SWAP8 PUSH0 0x2E DUP3 DUP11 0xC8 SWAP5 0x25 PUSH27 0x255B4FD679DD3CA19D64736F6C6343000817003300000000000000 ",
							"sourceMap": "6844:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6844,
									"end": 7891,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb04e953454161ebf642e4202b9f975f2e828ac894257a255b4fd679dd3ca19d64736f6c63430008170033",
									".code": [
										{
											"begin": 6844,
											"end": 7891,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 7891,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTIncentives_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTIncentives_flattened.sol\":23220:26067  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTIncentives_flattened.sol\":23220:26067  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122068238f7830f407b510584ac887851916509beea9299260e107e673cd4a7e4d4164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068238f7830f407b510584ac887851916509beea9299260e107e673cd4a7e4d4164736f6c63430008170033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x238F7830F407B51058 0x4A 0xC8 DUP8 DUP6 NOT AND POP SWAP12 0xEE 0xA9 0x29 SWAP3 PUSH1 0xE1 SMOD 0xE6 PUSH20 0xCD4A7E4D4164736F6C6343000817003300000000 ",
							"sourceMap": "23220:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122068238f7830f407b510584ac887851916509beea9299260e107e673cd4a7e4d4164736f6c63430008170033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x238F7830F407B51058 0x4A 0xC8 DUP8 DUP6 NOT AND POP SWAP12 0xEE 0xA9 0x29 SWAP3 PUSH1 0xE1 SMOD 0xE6 PUSH20 0xCD4A7E4D4164736F6C6343000817003300000000 ",
							"sourceMap": "23220:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23220,
									"end": 26067,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068238f7830f407b510584ac887851916509beea9299260e107e673cd4a7e4d4164736f6c63430008170033",
									".code": [
										{
											"begin": 23220,
											"end": 26067,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23220,
											"end": 26067,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTIncentives_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTIncentives_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTIncentives_flattened.sol\":{\"keccak256\":\"0xa6d15a9ad9d8d11d073a599f91e412da7947d6baf4e8f315321d036440ac3cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75591d2180738bc7137f539bea833194989c4117fcec38a3061e828b5f2d4062\",\"dweb:/ipfs/QmZBicHeoXdbkeBhmRpjsMiM5ESmwoU2uYdPJCWo65rYd4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NFTIncentives_flattened.sol": {
				"ast": {
					"absolutePath": "NFTIncentives_flattened.sol",
					"exportedSymbols": {
						"Context": [
							1572
						],
						"ERC165": [
							1767
						],
						"ERC721": [
							2919
						],
						"ERC721Burnable": [
							2943
						],
						"ERC721URIStorage": [
							3060
						],
						"IERC1155Errors": [
							136
						],
						"IERC165": [
							1745
						],
						"IERC20Errors": [
							41
						],
						"IERC4906": [
							1901
						],
						"IERC721": [
							1881
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1926
						],
						"IERC721Receiver": [
							1734
						],
						"IProgress": [
							3062
						],
						"IncentiveNFTs": [
							3132
						],
						"Math": [
							1293
						],
						"Ownable": [
							1717
						],
						"SignedMath": [
							240
						],
						"Strings": [
							1543
						]
					},
					"id": 3133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "178:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "204:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "354:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "373:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "693:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "726:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "718:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "742:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "734:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "759:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:49:0"
									},
									"src": "687:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "773:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "936:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "963:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "955:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:16:0"
									},
									"src": "930:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "977:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1147:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1176:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1168:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:18:0"
									},
									"src": "1141:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1192:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1548:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1583:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1575:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1600:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1619:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1574:52:0"
									},
									"src": "1542:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1633:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1818:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1847:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1839:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:18:0"
									},
									"src": "1812:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1863:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2069:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2097:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2089:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:17:0"
									},
									"src": "2063:43:0"
								}
							],
							"scope": 3133,
							"src": "344:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2110:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2262:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2282:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2512:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:0"
									},
									"src": "2506:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2552:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2695:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2726:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2718:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:17:0"
									},
									"src": "2689:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2741:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3041:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3070:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3062:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3061:48:0"
									},
									"src": "3035:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3116:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3279:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3307:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:16:0"
									},
									"src": "3273:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3321:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3491:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3521:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3513:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3513:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3512:18:0"
									},
									"src": "3485:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3537:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3795:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3830:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3822:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3848:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3840:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3821:35:0"
									},
									"src": "3789:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3863:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4048:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4078:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4070:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:18:0"
									},
									"src": "4042:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4094:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4302:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4323:18:0"
									},
									"src": "4296:46:0"
								}
							],
							"scope": 3133,
							"src": "2252:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4346:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4500:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4521:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4893:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4928:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4920:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4944:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4961:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4953:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4977:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4969:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:66:0"
									},
									"src": "4887:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4992:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5155:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5175:16:0"
									},
									"src": "5149:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5198:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5368:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5399:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5391:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5390:18:0"
									},
									"src": "5362:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5415:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5682:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5719:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5711:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5737:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5729:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5729:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5710:33:0"
									},
									"src": "5676:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5750:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5935:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5966:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5958:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5957:18:0"
									},
									"src": "5929:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5982:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6190:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6221:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6213:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6212:18:0"
									},
									"src": "6184:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6237:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6528:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6562:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6554:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6581:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6573:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6553:41:0"
									},
									"src": "6522:73:0"
								}
							],
							"scope": 3133,
							"src": "4490:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6737:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6763:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "SignedMath",
							"nameLocation": "6852:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7004:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "7021:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "7025:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7021:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 152,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "7033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7021:13:0",
													"trueExpression": {
														"id": 151,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "7029:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 147,
												"id": 154,
												"nodeType": "Return",
												"src": "7014:20:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6869:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "6949:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6960:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6953:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 140,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6953:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6970:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6963:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 142,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6963:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6952:20:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "6996:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 145,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "6996:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6995:8:0"
									},
									"scope": 240,
									"src": "6940:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "7183:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 166,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "7200:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 167,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "7204:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7200:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 170,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "7212:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "7200:13:0",
													"trueExpression": {
														"id": 169,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "7208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 165,
												"id": 172,
												"nodeType": "Return",
												"src": "7193:20:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "7047:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "7128:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7139:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7132:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 158,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7132:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7149:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7142:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 160,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7131:20:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "7175:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 163,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7175:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7174:8:0"
									},
									"scope": 240,
									"src": "7119:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "7425:162:0",
										"statements": [
											{
												"assignments": [
													185
												],
												"declarations": [
													{
														"constant": false,
														"id": 185,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "7494:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "7487:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 184,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7487:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "7499:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 187,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "7503:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7499:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 189,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7498:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 190,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7510:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 191,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7514:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7510:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 193,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7509:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7520:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7509:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 196,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7508:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7498:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7487:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 199,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "7539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 204,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 185,
																						"src": "7559:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7551:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 202,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7551:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7551:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7565:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "7551:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7544:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 200,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7544:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7544:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 209,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 177,
																				"src": "7573:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 210,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "7577:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "7573:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 212,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7572:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7544:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 214,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7543:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7539:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 183,
												"id": 216,
												"nodeType": "Return",
												"src": "7532:48:0"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "7226:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "7366:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7381:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7374:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7374:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7391:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7384:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7373:20:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "7417:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7417:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7416:8:0"
									},
									"scope": 240,
									"src": "7357:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7731:158:0",
										"statements": [
											{
												"id": 237,
												"nodeType": "UncheckedBlock",
												"src": "7741:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 228,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7856:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7861:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7856:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "7869:2:0",
																		"subExpression": {
																			"id": 232,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 221,
																			"src": "7870:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "7856:15:0",
																	"trueExpression": {
																		"id": 231,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "7865:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7848:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7848:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 225,
														"id": 236,
														"nodeType": "Return",
														"src": "7841:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "7593:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "7685:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "7696:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7689:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 220,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "7689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7688:10:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7722:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7721:9:0"
									},
									"scope": 240,
									"src": "7676:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "6844:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8019:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 242,
								"nodeType": "StructuredDocumentation",
								"src": "8045:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293
							],
							"name": "Math",
							"nameLocation": "8127:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "8138:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 245,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "8199:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8219:2:0"
									},
									"src": "8193:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 250,
									"members": [
										{
											"id": 246,
											"name": "Floor",
											"nameLocation": "8252:5:0",
											"nodeType": "EnumValue",
											"src": "8252:5:0"
										},
										{
											"id": 247,
											"name": "Ceil",
											"nameLocation": "8295:4:0",
											"nodeType": "EnumValue",
											"src": "8295:4:0"
										},
										{
											"id": 248,
											"name": "Trunc",
											"nameLocation": "8337:5:0",
											"nodeType": "EnumValue",
											"src": "8337:5:0"
										},
										{
											"id": 249,
											"name": "Expand",
											"nameLocation": "8367:6:0",
											"nodeType": "EnumValue",
											"src": "8367:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "8233:8:0",
									"nodeType": "EnumDefinition",
									"src": "8228:169:0"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "8577:140:0",
										"statements": [
											{
												"id": 280,
												"nodeType": "UncheckedBlock",
												"src": "8587:124:0",
												"statements": [
													{
														"assignments": [
															263
														],
														"declarations": [
															{
																"constant": false,
																"id": 263,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8619:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 280,
																"src": "8611:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 262,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8611:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 267,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8623:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "8627:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8623:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8611:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 268,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "8646:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 269,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8650:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8646:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 275,
														"nodeType": "IfStatement",
														"src": "8642:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8661:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8668:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 273,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8660:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 261,
															"id": 274,
															"nodeType": "Return",
															"src": "8653:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8692:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 277,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "8698:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 278,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8691:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 261,
														"id": 279,
														"nodeType": "Return",
														"src": "8684:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "8403:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "8510:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8525:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8517:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8536:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8528:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8516:22:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8562:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 257,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8562:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "8568:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8561:15:0"
									},
									"scope": 1293,
									"src": "8501:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "8900:113:0",
										"statements": [
											{
												"id": 308,
												"nodeType": "UncheckedBlock",
												"src": "8910:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 287,
																"src": "8938:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "8942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 301,
														"nodeType": "IfStatement",
														"src": "8934:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8953:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8960:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8952:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 293,
															"id": 300,
															"nodeType": "Return",
															"src": "8945:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8984:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 303,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "8990:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 304,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8994:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8990:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 306,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8983:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 293,
														"id": 307,
														"nodeType": "Return",
														"src": "8976:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "8723:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "8833:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8840:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8859:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8851:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8839:22:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8885:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "8891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8884:15:0"
									},
									"scope": 1293,
									"src": "8824:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "9199:417:0",
										"statements": [
											{
												"id": 350,
												"nodeType": "UncheckedBlock",
												"src": "9209:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 322,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9467:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9472:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 329,
														"nodeType": "IfStatement",
														"src": "9463:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9483:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9489:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9482:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 328,
															"nodeType": "Return",
															"src": "9475:16:0"
														}
													},
													{
														"assignments": [
															331
														],
														"declarations": [
															{
																"constant": false,
																"id": 331,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "9513:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 350,
																"src": "9505:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 330,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9505:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 335,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9517:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 333,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9521:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9517:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9505:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9540:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "9544:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9540:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "9549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9540:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 345,
														"nodeType": "IfStatement",
														"src": "9536:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9560:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9567:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9559:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 321,
															"id": 344,
															"nodeType": "Return",
															"src": "9552:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9591:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 347,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "9597:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9590:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 321,
														"id": 349,
														"nodeType": "Return",
														"src": "9583:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "9019:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "9132:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:22:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9184:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "9190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9183:15:0"
									},
									"scope": 1293,
									"src": "9123:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "9803:114:0",
										"statements": [
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "9813:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "9841:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9846:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9841:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 371,
														"nodeType": "IfStatement",
														"src": "9837:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9857:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9864:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9856:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 363,
															"id": 370,
															"nodeType": "Return",
															"src": "9849:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9888:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "9894:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 374,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "9898:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9894:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 376,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9887:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 363,
														"id": 377,
														"nodeType": "Return",
														"src": "9880:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "9622:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "9736:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9751:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9743:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9762:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9754:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9742:22:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "9794:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9787:15:0"
									},
									"scope": 1293,
									"src": "9727:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "10114:114:0",
										"statements": [
											{
												"id": 406,
												"nodeType": "UncheckedBlock",
												"src": "10124:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 392,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "10152:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10152:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 399,
														"nodeType": "IfStatement",
														"src": "10148:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10168:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10175:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10167:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 391,
															"id": 398,
															"nodeType": "Return",
															"src": "10160:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10199:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 401,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 383,
																		"src": "10205:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 402,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 385,
																		"src": "10209:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10205:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 404,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10198:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 391,
														"id": 405,
														"nodeType": "Return",
														"src": "10191:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "9923:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "10047:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10073:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10065:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10053:22:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10099:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10099:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10098:15:0"
									},
									"scope": 1293,
									"src": "10038:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "10365:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 418,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "10382:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 419,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "10386:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10382:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 422,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "10394:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10382:13:0",
													"trueExpression": {
														"id": 421,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "10390:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 424,
												"nodeType": "Return",
												"src": "10375:20:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "10234:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10307:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10319:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10311:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10311:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10330:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10322:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10310:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "10356:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10355:9:0"
									},
									"scope": 1293,
									"src": "10298:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10540:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 436,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "10557:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 437,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "10561:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10557:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "10569:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10557:13:0",
													"trueExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "10565:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 435,
												"id": 442,
												"nodeType": "Return",
												"src": "10550:20:0"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "10408:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "10482:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10494:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10486:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10505:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10497:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10485:22:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10530:9:0"
									},
									"scope": 1293,
									"src": "10473:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "10761:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 454,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "10816:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 455,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "10820:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10816:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "10826:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 459,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "10830:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10835:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "10825:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10815:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 453,
												"id": 465,
												"nodeType": "Return",
												"src": "10808:28:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10583:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "10699:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10715:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10726:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10706:22:0"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "10752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10751:9:0"
									},
									"scope": 1293,
									"src": "10690:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "11135:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "11149:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11154:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "11145:127:0",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "11157:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 480,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "11256:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 481,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "11260:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11256:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 476,
															"id": 483,
															"nodeType": "Return",
															"src": "11249:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "11360:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11365:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11360:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 490,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "11374:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11378:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11374:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 493,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "11383:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11373:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11387:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "11373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11360:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11369:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 476,
												"id": 499,
												"nodeType": "Return",
												"src": "11353:35:0"
											}
										]
									},
									"documentation": {
										"id": 468,
										"nodeType": "StructuredDocumentation",
										"src": "10849:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "11073:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11089:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11081:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11100:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11092:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11080:22:0"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "11126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11125:9:0"
									},
									"scope": 1293,
									"src": "11064:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "11817:4018:0",
										"statements": [
											{
												"id": 625,
												"nodeType": "UncheckedBlock",
												"src": "11827:4002:0",
												"statements": [
													{
														"assignments": [
															514
														],
														"declarations": [
															{
																"constant": false,
																"id": 514,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "12156:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12148:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 513,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 518,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "12164:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 516,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "12168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12164:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12148:21:0"
													},
													{
														"assignments": [
															520
														],
														"declarations": [
															{
																"constant": false,
																"id": 520,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "12236:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "12228:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 519,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12228:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 521,
														"nodeType": "VariableDeclarationStatement",
														"src": "12228:13:0"
													},
													{
														"AST": {
															"nativeSrc": "12308:122:0",
															"nodeType": "YulBlock",
															"src": "12308:122:0",
															"statements": [
																{
																	"nativeSrc": "12326:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12326:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "12343:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12343:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "12346:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12346:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12353:1:0",
																						"nodeType": "YulLiteral",
																						"src": "12353:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12349:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "12349:3:0"
																				},
																				"nativeSrc": "12349:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12349:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "12336:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "12336:6:0"
																		},
																		"nativeSrc": "12336:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12336:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "12330:2:0",
																			"nodeType": "YulTypedName",
																			"src": "12330:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12373:43:0",
																	"nodeType": "YulAssignment",
																	"src": "12373:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "12390:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "12390:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "12394:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "12394:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12386:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "12386:3:0"
																				},
																				"nativeSrc": "12386:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12386:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "12405:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "12405:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "12409:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "12409:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "12402:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "12402:2:0"
																				},
																				"nativeSrc": "12402:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12402:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12382:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12382:3:0"
																		},
																		"nativeSrc": "12382:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12382:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "12373:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "12373:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12394:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "12409:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "12373:5:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "12343:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "12346:1:0",
																"valueSize": 1
															}
														],
														"id": 522,
														"nodeType": "InlineAssembly",
														"src": "12299:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12511:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12520:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12511:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 531,
														"nodeType": "IfStatement",
														"src": "12507:368:0",
														"trueBody": {
															"id": 530,
															"nodeType": "Block",
															"src": "12523:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 526,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "12841:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 527,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "12849:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12841:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 512,
																	"id": 529,
																	"nodeType": "Return",
																	"src": "12834:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "12981:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 533,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "12996:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12981:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 539,
														"nodeType": "IfStatement",
														"src": "12977:88:0",
														"trueBody": {
															"id": 538,
															"nodeType": "Block",
															"src": "13003:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 535,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 245,
																			"src": "13028:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13028:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 537,
																	"nodeType": "RevertStatement",
																	"src": "13021:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13328:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13320:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 542,
														"nodeType": "VariableDeclarationStatement",
														"src": "13320:17:0"
													},
													{
														"AST": {
															"nativeSrc": "13360:291:0",
															"nodeType": "YulBlock",
															"src": "13360:291:0",
															"statements": [
																{
																	"nativeSrc": "13429:38:0",
																	"nodeType": "YulAssignment",
																	"src": "13429:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13449:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13449:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "13452:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13452:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "13455:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "13455:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "13442:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "13442:6:0"
																		},
																		"nativeSrc": "13442:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13442:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "13429:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "13429:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "13549:41:0",
																	"nodeType": "YulAssignment",
																	"src": "13549:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "13562:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "13562:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "13572:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "13572:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13583:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13583:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "13569:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "13569:2:0"
																				},
																				"nativeSrc": "13569:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13569:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13558:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13558:3:0"
																		},
																		"nativeSrc": "13558:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13558:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "13549:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13549:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "13607:30:0",
																	"nodeType": "YulAssignment",
																	"src": "13607:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "13620:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "13620:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "13627:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "13627:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13616:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13616:3:0"
																		},
																		"nativeSrc": "13616:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13616:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "13607:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13607:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13455:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13583:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13607:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "13620:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13549:5:0",
																"valueSize": 1
															},
															{
																"declaration": 520,
																"isOffset": false,
																"isSlot": false,
																"src": "13562:5:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13429:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13572:9:0",
																"valueSize": 1
															},
															{
																"declaration": 541,
																"isOffset": false,
																"isSlot": false,
																"src": "13627:9:0",
																"valueSize": 1
															},
															{
																"declaration": 504,
																"isOffset": false,
																"isSlot": false,
																"src": "13449:1:0",
																"valueSize": 1
															},
															{
																"declaration": 506,
																"isOffset": false,
																"isSlot": false,
																"src": "13452:1:0",
																"valueSize": 1
															}
														],
														"id": 543,
														"nodeType": "InlineAssembly",
														"src": "13351:300:0"
													},
													{
														"assignments": [
															545
														],
														"declarations": [
															{
																"constant": false,
																"id": 545,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "13863:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "13855:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13855:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 552,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "13870:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 548,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "13889:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13885:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13884:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13870:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13855:46:0"
													},
													{
														"AST": {
															"nativeSrc": "13924:362:0",
															"nodeType": "YulBlock",
															"src": "13924:362:0",
															"statements": [
																{
																	"nativeSrc": "13989:37:0",
																	"nodeType": "YulAssignment",
																	"src": "13989:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "14008:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14008:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14021:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14021:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14004:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14004:3:0"
																		},
																		"nativeSrc": "14004:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14004:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "13989:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "13989:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14093:25:0",
																	"nodeType": "YulAssignment",
																	"src": "14093:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "14106:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14106:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "14113:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "14113:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "14102:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14102:3:0"
																		},
																		"nativeSrc": "14102:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14102:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14093:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14093:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14233:39:0",
																	"nodeType": "YulAssignment",
																	"src": "14233:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14253:1:0",
																								"nodeType": "YulLiteral",
																								"src": "14253:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "14256:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "14256:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "14249:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "14249:3:0"
																						},
																						"nativeSrc": "14249:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "14249:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "14263:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "14263:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "14245:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "14245:3:0"
																				},
																				"nativeSrc": "14245:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14245:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14270:1:0",
																				"nodeType": "YulLiteral",
																				"src": "14270:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14241:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14241:3:0"
																		},
																		"nativeSrc": "14241:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14241:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "14233:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "14233:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "13989:11:0",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "14008:11:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14093:5:0",
																"valueSize": 1
															},
															{
																"declaration": 514,
																"isOffset": false,
																"isSlot": false,
																"src": "14106:5:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14021:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14113:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14233:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14256:4:0",
																"valueSize": 1
															},
															{
																"declaration": 545,
																"isOffset": false,
																"isSlot": false,
																"src": "14263:4:0",
																"valueSize": 1
															}
														],
														"id": 553,
														"nodeType": "InlineAssembly",
														"src": "13915:371:0"
													},
													{
														"expression": {
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 554,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "14352:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 555,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "14361:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 556,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "14369:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14361:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14352:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 559,
														"nodeType": "ExpressionStatement",
														"src": "14352:21:0"
													},
													{
														"assignments": [
															561
														],
														"declarations": [
															{
																"constant": false,
																"id": 561,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "14699:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 625,
																"src": "14691:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 560,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14691:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 568,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14710:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 563,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "14714:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14710:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 565,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14709:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 566,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14729:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "14709:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14691:39:0"
													},
													{
														"expression": {
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 569,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "14947:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14958:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 571,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "14962:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 572,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "14976:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14962:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14958:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14947:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 576,
														"nodeType": "ExpressionStatement",
														"src": "14947:36:0"
													},
													{
														"expression": {
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 577,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15016:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15027:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 579,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15031:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 580,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15045:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15031:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15027:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15016:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 584,
														"nodeType": "ExpressionStatement",
														"src": "15016:36:0"
													},
													{
														"expression": {
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 585,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15086:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 587,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15101:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 588,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15115:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15101:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15097:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15086:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 592,
														"nodeType": "ExpressionStatement",
														"src": "15086:36:0"
													},
													{
														"expression": {
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 593,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15156:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15167:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 595,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15171:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 596,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15185:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15171:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15167:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15156:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 600,
														"nodeType": "ExpressionStatement",
														"src": "15156:36:0"
													},
													{
														"expression": {
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 601,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15226:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15237:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 603,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15241:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 604,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15255:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15241:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15237:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15226:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"nodeType": "ExpressionStatement",
														"src": "15226:36:0"
													},
													{
														"expression": {
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 609,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "15297:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 611,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "15312:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 612,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "15326:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15312:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15308:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15297:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 616,
														"nodeType": "ExpressionStatement",
														"src": "15297:36:0"
													},
													{
														"expression": {
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 617,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "15767:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 618,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "15776:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 619,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "15784:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15776:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15767:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 622,
														"nodeType": "ExpressionStatement",
														"src": "15767:24:0"
													},
													{
														"expression": {
															"id": 623,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15812:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 512,
														"id": 624,
														"nodeType": "Return",
														"src": "15805:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "11401:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11728:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11743:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11735:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11754:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11746:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11765:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11757:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:43:0"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11809:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "11801:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11800:16:0"
									},
									"scope": 1293,
									"src": "11719:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "16077:192:0",
										"statements": [
											{
												"assignments": [
													643
												],
												"declarations": [
													{
														"constant": false,
														"id": 643,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16095:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 669,
														"src": "16087:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 645,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "16111:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 646,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "16114:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 647,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "16117:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 644,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															670
														],
														"referencedDeclaration": 627,
														"src": "16104:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16104:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16087:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 651,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "16160:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$250",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 650,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "16143:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16143:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 654,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "16180:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 655,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "16183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 656,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "16186:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 653,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "16173:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16173:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16201:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16173:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16143:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 666,
												"nodeType": "IfStatement",
												"src": "16139:101:0",
												"trueBody": {
													"id": 665,
													"nodeType": "Block",
													"src": "16204:36:0",
													"statements": [
														{
															"expression": {
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 661,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "16218:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16228:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16218:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 664,
															"nodeType": "ExpressionStatement",
															"src": "16218:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "16256:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 641,
												"id": 668,
												"nodeType": "Return",
												"src": "16249:13:0"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "15841:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "16002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "15994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "16013:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16005:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16035:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16026:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 636,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 635,
														"name": "Rounding",
														"nameLocations": [
															"16026:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "16026:8:0"
													},
													"referencedDeclaration": 250,
													"src": "16026:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15982:62:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "16068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16067:9:0"
									},
									"scope": 1293,
									"src": "15967:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "16560:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "16574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16579:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16574:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "IfStatement",
												"src": "16570:45:0",
												"trueBody": {
													"id": 683,
													"nodeType": "Block",
													"src": "16582:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 677,
															"id": 682,
															"nodeType": "Return",
															"src": "16596:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													686
												],
												"declarations": [
													{
														"constant": false,
														"id": 686,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17302:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "17294:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 685,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17311:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 689,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 673,
																			"src": "17322:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 688,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			949,
																			984
																		],
																		"referencedDeclaration": 949,
																		"src": "17317:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17317:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17328:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17317:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17316:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17311:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17294:36:0"
											},
											{
												"id": 780,
												"nodeType": "UncheckedBlock",
												"src": "17731:408:0",
												"statements": [
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 696,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17755:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 697,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17765:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 700,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 698,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17774:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 699,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17778:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17774:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17765:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 702,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17764:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17764:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17755:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "17755:35:0"
													},
													{
														"expression": {
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17804:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 708,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17814:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 709,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17823:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 710,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17827:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17823:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17814:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 713,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17813:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17838:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17813:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17804:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 717,
														"nodeType": "ExpressionStatement",
														"src": "17804:35:0"
													},
													{
														"expression": {
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 718,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17853:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 719,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17863:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 720,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17872:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 721,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17876:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17872:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17863:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 724,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17862:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17887:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17862:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17853:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 728,
														"nodeType": "ExpressionStatement",
														"src": "17853:35:0"
													},
													{
														"expression": {
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 729,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17902:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 730,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17912:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 731,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17921:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 732,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17925:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17921:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17912:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17911:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17936:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17911:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17902:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 739,
														"nodeType": "ExpressionStatement",
														"src": "17902:35:0"
													},
													{
														"expression": {
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 740,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "17951:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 741,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "17961:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 742,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "17970:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 743,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "17974:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17970:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17961:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 746,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "17960:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17985:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17960:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17951:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 750,
														"nodeType": "ExpressionStatement",
														"src": "17951:35:0"
													},
													{
														"expression": {
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 751,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "18000:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 752,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "18010:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 753,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "18019:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 754,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "18023:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18019:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18010:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 757,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18009:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18034:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18009:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18000:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 761,
														"nodeType": "ExpressionStatement",
														"src": "18000:35:0"
													},
													{
														"expression": {
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 762,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "18049:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 763,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "18059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 764,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 673,
																					"src": "18068:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 765,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 686,
																					"src": "18072:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18068:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "18059:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 768,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "18058:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18083:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18058:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18049:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "18049:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 774,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "18109:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 775,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "18117:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 776,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "18121:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18117:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 773,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "18105:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18105:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 677,
														"id": 779,
														"nodeType": "Return",
														"src": "18098:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "16275:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "16512:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16525:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16517:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16516:11:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "16551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16550:9:0"
									},
									"scope": 1293,
									"src": "16503:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "18321:164:0",
										"statements": [
											{
												"id": 815,
												"nodeType": "UncheckedBlock",
												"src": "18331:148:0",
												"statements": [
													{
														"assignments": [
															794
														],
														"declarations": [
															{
																"constant": false,
																"id": 794,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "18363:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 815,
																"src": "18355:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 793,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18355:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 798,
														"initialValue": {
															"arguments": [
																{
																	"id": 796,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "18377:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 795,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	782,
																	817
																],
																"referencedDeclaration": 782,
																"src": "18372:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18372:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18355:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "18400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 801,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 788,
																						"src": "18427:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 800,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "18410:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18410:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 803,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18440:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 804,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 794,
																						"src": "18449:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18440:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 806,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 785,
																					"src": "18458:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18440:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18410:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18466:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "18410:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18462:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 812,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18409:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "18400:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 792,
														"id": 814,
														"nodeType": "Return",
														"src": "18393:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "18151:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "18254:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "18267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18259:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18279:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18270:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 787,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 786,
														"name": "Rounding",
														"nameLocations": [
															"18270:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "18270:8:0"
													},
													"referencedDeclaration": 250,
													"src": "18270:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18258:30:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "18312:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18312:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18311:9:0"
									},
									"scope": 1293,
									"src": "18245:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "18676:922:0",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18694:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "18686:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 828,
												"initialValue": {
													"hexValue": "30",
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18703:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18686:18:0"
											},
											{
												"id": 945,
												"nodeType": "UncheckedBlock",
												"src": "18714:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18742:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18751:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "18742:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18757:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18742:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "18738:99:0",
														"trueBody": {
															"id": 842,
															"nodeType": "Block",
															"src": "18760:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 834,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18778:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18788:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18778:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "18778:13:0"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18809:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18819:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "18809:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "18809:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 844,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18854:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18863:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "18854:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18854:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 858,
														"nodeType": "IfStatement",
														"src": "18850:96:0",
														"trueBody": {
															"id": 857,
															"nodeType": "Block",
															"src": "18871:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18889:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18899:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18889:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 852,
																	"nodeType": "ExpressionStatement",
																	"src": "18889:12:0"
																},
																{
																	"expression": {
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 853,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "18919:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18929:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "18919:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 856,
																	"nodeType": "ExpressionStatement",
																	"src": "18919:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "18963:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18972:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "18963:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18977:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18963:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 873,
														"nodeType": "IfStatement",
														"src": "18959:96:0",
														"trueBody": {
															"id": 872,
															"nodeType": "Block",
															"src": "18980:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 864,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "18998:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19008:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "18998:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "18998:12:0"
																},
																{
																	"expression": {
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 868,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19028:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19038:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19028:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 871,
																	"nodeType": "ExpressionStatement",
																	"src": "19028:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 874,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19072:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19081:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19072:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19086:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19072:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "19068:96:0",
														"trueBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "19089:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 879,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19107:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19117:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19107:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 882,
																	"nodeType": "ExpressionStatement",
																	"src": "19107:12:0"
																},
																{
																	"expression": {
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 883,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19137:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19147:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19137:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 886,
																	"nodeType": "ExpressionStatement",
																	"src": "19137:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 889,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19181:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19190:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19194:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19181:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 903,
														"nodeType": "IfStatement",
														"src": "19177:93:0",
														"trueBody": {
															"id": 902,
															"nodeType": "Block",
															"src": "19197:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 894,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19215:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19225:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19215:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 897,
																	"nodeType": "ExpressionStatement",
																	"src": "19215:11:0"
																},
																{
																	"expression": {
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 898,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19244:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19254:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19244:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 901,
																	"nodeType": "ExpressionStatement",
																	"src": "19244:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19287:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19296:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "19287:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19300:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19287:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 918,
														"nodeType": "IfStatement",
														"src": "19283:93:0",
														"trueBody": {
															"id": 917,
															"nodeType": "Block",
															"src": "19303:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 909,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19321:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19321:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 912,
																	"nodeType": "ExpressionStatement",
																	"src": "19321:11:0"
																},
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 913,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19350:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19360:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19350:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "19350:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19393:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19402:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "19393:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19406:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19393:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "19389:93:0",
														"trueBody": {
															"id": 932,
															"nodeType": "Block",
															"src": "19409:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 924,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 820,
																			"src": "19427:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19437:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19427:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 927,
																	"nodeType": "ExpressionStatement",
																	"src": "19427:11:0"
																},
																{
																	"expression": {
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 928,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19456:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19466:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19456:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 931,
																	"nodeType": "ExpressionStatement",
																	"src": "19456:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "19499:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19508:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19499:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19512:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19499:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 944,
														"nodeType": "IfStatement",
														"src": "19495:64:0",
														"trueBody": {
															"id": 943,
															"nodeType": "Block",
															"src": "19515:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "19533:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19543:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19533:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 942,
																	"nodeType": "ExpressionStatement",
																	"src": "19533:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 946,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 826,
													"src": "19585:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 824,
												"id": 947,
												"nodeType": "Return",
												"src": "19578:13:0"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "18491:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "18624:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18628:15:0"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "18667:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18666:9:0"
									},
									"scope": 1293,
									"src": "18615:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "19831:168:0",
										"statements": [
											{
												"id": 982,
												"nodeType": "UncheckedBlock",
												"src": "19841:152:0",
												"statements": [
													{
														"assignments": [
															961
														],
														"declarations": [
															{
																"constant": false,
																"id": 961,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19873:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 982,
																"src": "19865:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 960,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19865:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 965,
														"initialValue": {
															"arguments": [
																{
																	"id": 963,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "19887:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 962,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	949,
																	984
																],
																"referencedDeclaration": 949,
																"src": "19882:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19882:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19865:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 966,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "19914:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 968,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 955,
																						"src": "19941:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 967,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "19924:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19924:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19954:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 971,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 961,
																						"src": "19959:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19954:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 973,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 952,
																					"src": "19968:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19954:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19924:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19980:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19924:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19976:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19923:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19914:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 959,
														"id": 981,
														"nodeType": "Return",
														"src": "19907:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "19604:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "19760:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19765:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19789:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19780:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 954,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 953,
														"name": "Rounding",
														"nameLocations": [
															"19780:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "19780:8:0"
													},
													"referencedDeclaration": 250,
													"src": "19780:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19764:34:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "19822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19821:9:0"
									},
									"scope": 1293,
									"src": "19751:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "20192:854:0",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20210:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1112,
														"src": "20202:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20219:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20202:18:0"
											},
											{
												"id": 1109,
												"nodeType": "UncheckedBlock",
												"src": "20230:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20267:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20273:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20267:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "20258:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1012,
														"nodeType": "IfStatement",
														"src": "20254:103:0",
														"trueBody": {
															"id": 1011,
															"nodeType": "Block",
															"src": "20277:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20295:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20304:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20310:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "20304:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "20295:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "20295:17:0"
																},
																{
																	"expression": {
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1007,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20330:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20340:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20330:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1010,
																	"nodeType": "ExpressionStatement",
																	"src": "20330:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1013,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20374:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20383:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20389:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20383:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "20374:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1029,
														"nodeType": "IfStatement",
														"src": "20370:103:0",
														"trueBody": {
															"id": 1028,
															"nodeType": "Block",
															"src": "20393:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20411:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20420:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20426:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "20420:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "20411:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "20411:17:0"
																},
																{
																	"expression": {
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1024,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20446:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20456:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20446:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1027,
																	"nodeType": "ExpressionStatement",
																	"src": "20446:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1030,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20490:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20499:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1032,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20505:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20499:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "20490:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1046,
														"nodeType": "IfStatement",
														"src": "20486:103:0",
														"trueBody": {
															"id": 1045,
															"nodeType": "Block",
															"src": "20509:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20527:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20536:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1037,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20542:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "20536:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "20527:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1040,
																	"nodeType": "ExpressionStatement",
																	"src": "20527:17:0"
																},
																{
																	"expression": {
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1041,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20562:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20572:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20562:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1044,
																	"nodeType": "ExpressionStatement",
																	"src": "20562:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20606:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20615:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "20606:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1063,
														"nodeType": "IfStatement",
														"src": "20602:100:0",
														"trueBody": {
															"id": 1062,
															"nodeType": "Block",
															"src": "20624:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1056,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1052,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20642:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20651:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20657:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "20651:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "20642:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1057,
																	"nodeType": "ExpressionStatement",
																	"src": "20642:16:0"
																},
																{
																	"expression": {
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1058,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20676:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20686:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20676:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "20676:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1064,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20728:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20728:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "20719:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1080,
														"nodeType": "IfStatement",
														"src": "20715:100:0",
														"trueBody": {
															"id": 1079,
															"nodeType": "Block",
															"src": "20737:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1069,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20755:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20764:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20770:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "20764:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "20755:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1074,
																	"nodeType": "ExpressionStatement",
																	"src": "20755:16:0"
																},
																{
																	"expression": {
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1075,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20789:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20799:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20789:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1078,
																	"nodeType": "ExpressionStatement",
																	"src": "20789:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20832:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1082,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20841:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20841:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "20832:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "20828:100:0",
														"trueBody": {
															"id": 1096,
															"nodeType": "Block",
															"src": "20850:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1086,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "20868:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20877:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20883:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "20877:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "20868:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "20868:16:0"
																},
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20902:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20912:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20902:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "20902:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1098,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "20945:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20954:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20960:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "20945:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1108,
														"nodeType": "IfStatement",
														"src": "20941:66:0",
														"trueBody": {
															"id": 1107,
															"nodeType": "Block",
															"src": "20963:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "20981:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20991:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20981:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "20981:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1110,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 993,
													"src": "21033:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 991,
												"id": 1111,
												"nodeType": "Return",
												"src": "21026:13:0"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "20005:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "20139:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20144:15:0"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "20183:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20182:9:0"
									},
									"scope": 1293,
									"src": "20130:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1147,
										"nodeType": "Block",
										"src": "21281:170:0",
										"statements": [
											{
												"id": 1146,
												"nodeType": "UncheckedBlock",
												"src": "21291:154:0",
												"statements": [
													{
														"assignments": [
															1125
														],
														"declarations": [
															{
																"constant": false,
																"id": 1125,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21323:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1146,
																"src": "21315:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1124,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21315:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1129,
														"initialValue": {
															"arguments": [
																{
																	"id": 1127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "21338:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1126,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1113,
																	1148
																],
																"referencedDeclaration": 1113,
																"src": "21332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21332:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21315:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "21365:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1132,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1119,
																						"src": "21392:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1131,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "21375:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21375:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1138,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21405:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1135,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1125,
																						"src": "21411:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21405:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1137,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1116,
																					"src": "21420:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21405:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21375:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21432:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21375:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21428:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21374:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21365:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1123,
														"id": 1145,
														"nodeType": "Return",
														"src": "21358:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "21052:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21209:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21223:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21215:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21239:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21230:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1117,
														"name": "Rounding",
														"nameLocations": [
															"21230:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "21230:8:0"
													},
													"referencedDeclaration": 250,
													"src": "21230:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21214:34:0"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1148,
												"src": "21272:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21271:9:0"
									},
									"scope": 1293,
									"src": "21200:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "21771:600:0",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21789:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "21781:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"hexValue": "30",
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21798:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21781:18:0"
											},
											{
												"id": 1231,
												"nodeType": "UncheckedBlock",
												"src": "21809:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21837:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21846:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "21837:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21837:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1174,
														"nodeType": "IfStatement",
														"src": "21833:98:0",
														"trueBody": {
															"id": 1173,
															"nodeType": "Block",
															"src": "21855:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21873:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21883:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21873:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "21873:13:0"
																},
																{
																	"expression": {
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "21904:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21914:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21904:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "21904:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21948:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21957:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21948:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21962:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21948:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1189,
														"nodeType": "IfStatement",
														"src": "21944:95:0",
														"trueBody": {
															"id": 1188,
															"nodeType": "Block",
															"src": "21965:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1180,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "21983:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21993:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21983:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1183,
																	"nodeType": "ExpressionStatement",
																	"src": "21983:12:0"
																},
																{
																	"expression": {
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1184,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22013:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22013:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "22013:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1190,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22056:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22065:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22056:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22056:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1204,
														"nodeType": "IfStatement",
														"src": "22052:95:0",
														"trueBody": {
															"id": 1203,
															"nodeType": "Block",
															"src": "22073:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22091:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22101:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22091:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1198,
																	"nodeType": "ExpressionStatement",
																	"src": "22091:12:0"
																},
																{
																	"expression": {
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1199,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22121:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22131:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22121:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1202,
																	"nodeType": "ExpressionStatement",
																	"src": "22121:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1205,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22164:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22173:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "22164:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22178:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22164:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1219,
														"nodeType": "IfStatement",
														"src": "22160:95:0",
														"trueBody": {
															"id": 1218,
															"nodeType": "Block",
															"src": "22181:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1210,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "22199:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1211,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22209:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22199:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1213,
																	"nodeType": "ExpressionStatement",
																	"src": "22199:12:0"
																},
																{
																	"expression": {
																		"id": 1216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1214,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22229:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1215,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22239:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22229:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1217,
																	"nodeType": "ExpressionStatement",
																	"src": "22229:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22272:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22281:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22272:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22272:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1230,
														"nodeType": "IfStatement",
														"src": "22268:64:0",
														"trueBody": {
															"id": 1229,
															"nodeType": "Block",
															"src": "22288:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1225,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "22306:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22316:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22306:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1228,
																	"nodeType": "ExpressionStatement",
																	"src": "22306:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1232,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "22358:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1155,
												"id": 1233,
												"nodeType": "Return",
												"src": "22351:13:0"
											}
										]
									},
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "21457:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "21717:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21724:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21723:15:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "21762:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21761:9:0"
									},
									"scope": 1293,
									"src": "21708:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "22608:177:0",
										"statements": [
											{
												"id": 1271,
												"nodeType": "UncheckedBlock",
												"src": "22618:161:0",
												"statements": [
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22650:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1271,
																"src": "22642:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22642:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"arguments": [
																{
																	"id": 1249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "22666:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1248,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1235,
																	1273
																],
																"referencedDeclaration": 1235,
																"src": "22659:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22659:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22642:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "22693:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1254,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1241,
																						"src": "22720:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$250",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1253,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "22703:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$250_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1255,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22703:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1256,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22733:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1259,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1257,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1247,
																									"src": "22739:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1258,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "22749:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "22739:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1260,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "22738:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22733:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1262,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1238,
																					"src": "22754:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22733:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22703:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22766:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22703:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22762:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22702:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22693:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1245,
														"id": 1270,
														"nodeType": "Return",
														"src": "22686:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "22377:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "22535:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22550:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22566:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22557:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "Rounding",
														"nameLocations": [
															"22557:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22557:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22557:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22541:34:0"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "22599:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22598:9:0"
									},
									"scope": 1293,
									"src": "22526:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "22983:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1284,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "23006:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$250",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23000:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1282,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "23000:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23000:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "23000:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "23000:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1281,
												"id": 1290,
												"nodeType": "Return",
												"src": "22993:31:0"
											}
										]
									},
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "22791:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "22918:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22944:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22935:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$250",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "Rounding",
														"nameLocations": [
															"22935:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 250,
														"src": "22935:8:0"
													},
													"referencedDeclaration": 250,
													"src": "22935:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$250",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22934:19:0"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "22977:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22977:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22976:6:0"
									},
									"scope": 1293,
									"src": "22909:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "8119:14914:0",
							"usedErrors": [
								245
							],
							"usedEvents": []
						},
						{
							"id": 1294,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23157:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "23185:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543
							],
							"name": "Strings",
							"nameLocation": "23228:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1298,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "23267:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23242:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1296,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "23242:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1297,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23280:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1301,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "23327:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "23304:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1299,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "23304:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1300,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "23344:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "23353:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1308,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "23445:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23482:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23474:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "23497:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23489:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23489:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23473:31:0"
									},
									"src": "23439:66:0"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "23677:627:0",
										"statements": [
											{
												"id": 1354,
												"nodeType": "UncheckedBlock",
												"src": "23687:611:0",
												"statements": [
													{
														"assignments": [
															1317
														],
														"declarations": [
															{
																"constant": false,
																"id": 1317,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "23719:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23711:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1316,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23711:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1324,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1320,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "23739:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1318,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "23728:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "23733:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "23728:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23728:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "23728:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23711:38:0"
													},
													{
														"assignments": [
															1326
														],
														"declarations": [
															{
																"constant": false,
																"id": 1326,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "23777:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23763:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1325,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23763:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1331,
														"initialValue": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "23797:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "23786:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1327,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "23790:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23786:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23763:41:0"
													},
													{
														"assignments": [
															1333
														],
														"declarations": [
															{
																"constant": false,
																"id": 1333,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "23826:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1354,
																"src": "23818:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1332,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1334,
														"nodeType": "VariableDeclarationStatement",
														"src": "23818:11:0"
													},
													{
														"AST": {
															"nativeSrc": "23899:67:0",
															"nodeType": "YulBlock",
															"src": "23899:67:0",
															"statements": [
																{
																	"nativeSrc": "23917:35:0",
																	"nodeType": "YulAssignment",
																	"src": "23917:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "23928:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "23928:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23940:2:0",
																						"nodeType": "YulLiteral",
																						"src": "23940:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "23944:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "23944:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23936:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "23936:3:0"
																				},
																				"nativeSrc": "23936:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "23936:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23924:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "23924:3:0"
																		},
																		"nativeSrc": "23924:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "23924:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "23917:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "23917:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1326,
																"isOffset": false,
																"isSlot": false,
																"src": "23928:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1317,
																"isOffset": false,
																"isSlot": false,
																"src": "23944:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1333,
																"isOffset": false,
																"isSlot": false,
																"src": "23917:3:0",
																"valueSize": 1
															}
														],
														"id": 1335,
														"nodeType": "InlineAssembly",
														"src": "23890:76:0"
													},
													{
														"body": {
															"id": 1350,
															"nodeType": "Block",
															"src": "23992:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "24010:5:0",
																		"subExpression": {
																			"id": 1337,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1333,
																			"src": "24010:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "24010:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "24093:86:0",
																		"nodeType": "YulBlock",
																		"src": "24093:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "24123:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "24123:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "24137:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "24137:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "24144:2:0",
																											"nodeType": "YulLiteral",
																											"src": "24144:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "24133:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "24133:3:0"
																									},
																									"nativeSrc": "24133:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "24133:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "24149:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "24149:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "24128:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "24128:4:0"
																							},
																							"nativeSrc": "24128:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "24128:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "24115:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "24115:7:0"
																					},
																					"nativeSrc": "24115:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "24115:46:0"
																				},
																				"nativeSrc": "24115:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "24115:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1298,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24149:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1333,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24123:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1311,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "24137:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1340,
																	"nodeType": "InlineAssembly",
																	"src": "24084:95:0"
																},
																{
																	"expression": {
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1341,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24196:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24205:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "24196:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1344,
																	"nodeType": "ExpressionStatement",
																	"src": "24196:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1345,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "24229:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24238:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24229:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1349,
																	"nodeType": "IfStatement",
																	"src": "24225:21:0",
																	"trueBody": {
																		"id": 1348,
																		"nodeType": "Break",
																		"src": "24241:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23986:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1351,
														"nodeType": "WhileStatement",
														"src": "23979:282:0"
													},
													{
														"expression": {
															"id": 1352,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "24281:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1315,
														"id": 1353,
														"nodeType": "Return",
														"src": "24274:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "23511:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "23615:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23632:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23624:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23623:15:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "23662:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23661:15:0"
									},
									"scope": 1543,
									"src": "23606:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "24480:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "24511:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24519:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "24511:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24529:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "24511:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24523:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1359,
																			"src": "24557:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1374,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 240,
																			"src": "24542:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$240_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "24553:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 239,
																		"src": "24542:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24542:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1373,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "24533:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24533:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24497:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1364,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "24497:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24504:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "24497:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24497:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1363,
												"id": 1380,
												"nodeType": "Return",
												"src": "24490:75:0"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "24310:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "24413:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24435:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24428:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24427:14:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "24465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24464:15:0"
									},
									"scope": 1543,
									"src": "24404:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "24751:100:0",
										"statements": [
											{
												"id": 1400,
												"nodeType": "UncheckedBlock",
												"src": "24761:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1391,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1385,
																	"src": "24804:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "24823:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1392,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "24811:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1293_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "24816:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1235,
																			"src": "24811:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24811:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24832:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "24811:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1390,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1402,
																	1485,
																	1505
																],
																"referencedDeclaration": 1485,
																"src": "24792:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24792:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1389,
														"id": 1399,
														"nodeType": "Return",
														"src": "24785:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "24578:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24686:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24706:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24698:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24697:15:0"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "24736:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24736:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24735:15:0"
									},
									"scope": 1543,
									"src": "24677:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "25064:435:0",
										"statements": [
											{
												"assignments": [
													1413
												],
												"declarations": [
													{
														"constant": false,
														"id": 1413,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "25082:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25074:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1415,
												"initialValue": {
													"id": 1414,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1405,
													"src": "25095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25074:26:0"
											},
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "25123:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1484,
														"src": "25110:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1416,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1426,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25142:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1421,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "25146:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25142:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25155:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "25142:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "25132:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1418,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "25136:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25132:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25110:47:0"
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25167:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1429,
														"indexExpression": {
															"hexValue": "30",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25174:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25167:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25179:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "25167:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "25167:15:0"
											},
											{
												"expression": {
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1433,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1435,
														"indexExpression": {
															"hexValue": "31",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25199:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25192:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25204:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "25192:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "25192:15:0"
											},
											{
												"body": {
													"id": 1467,
													"nodeType": "Block",
													"src": "25262:95:0",
													"statements": [
														{
															"expression": {
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1453,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1417,
																		"src": "25276:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1455,
																	"indexExpression": {
																		"id": 1454,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "25283:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "25276:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1456,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "25288:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1460,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1457,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1413,
																			"src": "25299:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25312:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "25299:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "25288:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "25276:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1462,
															"nodeType": "ExpressionStatement",
															"src": "25276:40:0"
														},
														{
															"expression": {
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1463,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1413,
																	"src": "25330:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "25330:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1466,
															"nodeType": "ExpressionStatement",
															"src": "25330:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "25250:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25254:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "25250:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1468,
												"initializationExpression": {
													"assignments": [
														1440
													],
													"declarations": [
														{
															"constant": false,
															"id": 1440,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "25230:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1468,
															"src": "25222:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1439,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "25222:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1446,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25234:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1442,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1407,
																"src": "25238:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25234:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25247:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "25234:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "25222:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "25257:3:0",
														"subExpression": {
															"id": 1450,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "25259:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ExpressionStatement",
													"src": "25257:3:0"
												},
												"nodeType": "ForStatement",
												"src": "25217:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "25370:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25384:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25370:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1478,
												"nodeType": "IfStatement",
												"src": "25366:96:0",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "25387:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "25437:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1474,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "25444:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1472,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "25408:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25408:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1476,
															"nodeType": "RevertStatement",
															"src": "25401:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1481,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "25485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "25478:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1479,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "25478:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25478:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1483,
												"nodeType": "Return",
												"src": "25471:21:0"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "24857:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "24983:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25003:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "24995:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "25018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "25010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24994:31:0"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "25049:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25048:15:0"
									},
									"scope": 1543,
									"src": "24974:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1504,
										"nodeType": "Block",
										"src": "25731:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1498,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "25776:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "25768:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1496,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "25768:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25768:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "25760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25760:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25760:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1501,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "25784:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1493,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1402,
															1485,
															1505
														],
														"referencedDeclaration": 1485,
														"src": "25748:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25748:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1503,
												"nodeType": "Return",
												"src": "25741:58:0"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "25505:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "25667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "25687:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25679:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25678:14:0"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1505,
												"src": "25716:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25716:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25715:15:0"
									},
									"scope": 1543,
									"src": "25658:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "25961:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1517,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1508,
																		"src": "25984:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25978:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25978:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25978:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25987:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25978:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1522,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "26003:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1520,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25997:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25997:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26006:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25997:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "25978:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1529,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "26032:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26026:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1527,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "26026:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26026:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1526,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26016:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26016:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1535,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "26055:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "26049:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1533,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "26049:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26049:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1532,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "26039:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26039:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "26016:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25978:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1540,
												"nodeType": "Return",
												"src": "25971:87:0"
											}
										]
									},
									"documentation": {
										"id": 1506,
										"nodeType": "StructuredDocumentation",
										"src": "25812:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "25892:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25912:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25898:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1507,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25898:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25929:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25915:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25915:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25897:34:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "25955:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25955:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25954:6:0"
									},
									"scope": 1543,
									"src": "25883:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "23220:2847:0",
							"usedErrors": [
								1308
							],
							"usedEvents": []
						},
						{
							"id": 1544,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "26191:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1545,
								"nodeType": "StructuredDocumentation",
								"src": "26217:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1572,
							"linearizedBaseContracts": [
								1572
							],
							"name": "Context",
							"nameLocation": "26732:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "26808:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1550,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26825:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26829:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "26825:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1552,
												"nodeType": "Return",
												"src": "26818:17:0"
											}
										]
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "26755:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26765:2:0"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "26799:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26799:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26798:9:0"
									},
									"scope": 1572,
									"src": "26746:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "26915:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "26932:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26936:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "26932:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1558,
												"id": 1561,
												"nodeType": "Return",
												"src": "26925:15:0"
											}
										]
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "26857:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26865:2:0"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "26899:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26899:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26898:16:0"
									},
									"scope": 1572,
									"src": "26848:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "27025:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27042:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1567,
												"id": 1569,
												"nodeType": "Return",
												"src": "27035:8:0"
											}
										]
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "26962:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26982:2:0"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "27016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27015:9:0"
									},
									"scope": 1572,
									"src": "26953:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "26714:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1573,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27178:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1575,
										"name": "Context",
										"nameLocations": [
											"27722:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1572,
										"src": "27722:7:0"
									},
									"id": 1576,
									"nodeType": "InheritanceSpecifier",
									"src": "27722:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1574,
								"nodeType": "StructuredDocumentation",
								"src": "27205:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1717,
							"linearizedBaseContracts": [
								1717,
								1572
							],
							"name": "Ownable",
							"nameLocation": "27711:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1578,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "27752:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1717,
									"src": "27736:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1577,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "27736:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "27765:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1583,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "27861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27896:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "27888:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27887:17:0"
									},
									"src": "27855:50:0"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "27911:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1588,
									"name": "OwnableInvalidOwner",
									"nameLocation": "28004:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "28024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28023:15:0"
									},
									"src": "27998:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1594,
									"name": "OwnershipTransferred",
									"nameLocation": "28051:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "28088:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "28072:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1592,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "28119:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "28103:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28071:57:0"
									},
									"src": "28045:84:0"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "28289:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1600,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "28303:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28327:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1601,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28319:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28319:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28303:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "28299:95:0",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "28331:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28372:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1607,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28372:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28372:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1606,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "28352:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28352:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1612,
															"nodeType": "RevertStatement",
															"src": "28345:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "28422:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1615,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "28403:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28403:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "28403:32:0"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "28135:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1620,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "28275:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "28267:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28266:22:0"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28289:0:0"
									},
									"scope": 1717,
									"src": "28255:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "28551:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1623,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1654,
														"src": "28561:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28561:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "28561:13:0"
											},
											{
												"id": 1626,
												"nodeType": "PlaceholderStatement",
												"src": "28584:1:0"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "28448:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1628,
									"name": "onlyOwner",
									"nameLocation": "28539:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28548:2:0"
									},
									"src": "28530:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "28723:30:0",
										"statements": [
											{
												"expression": {
													"id": 1634,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "28740:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1633,
												"id": 1635,
												"nodeType": "Return",
												"src": "28733:13:0"
											}
										]
									},
									"documentation": {
										"id": 1629,
										"nodeType": "StructuredDocumentation",
										"src": "28598:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "28677:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28682:2:0"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "28714:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28713:9:0"
									},
									"scope": 1717,
									"src": "28668:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "28871:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1641,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "28885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28885:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1643,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "28896:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28896:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28885:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1652,
												"nodeType": "IfStatement",
												"src": "28881:101:0",
												"trueBody": {
													"id": 1651,
													"nodeType": "Block",
													"src": "28910:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1647,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "28958:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28958:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1646,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "28931:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28931:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1650,
															"nodeType": "RevertStatement",
															"src": "28924:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "28759:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "28835:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28846:2:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28871:0:0"
									},
									"scope": 1717,
									"src": "28826:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "29377:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29406:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29406:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29406:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1660,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "29387:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29387:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "29387:30:0"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "28994:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1658,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1657,
												"name": "onlyOwner",
												"nameLocations": [
													"29367:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "29367:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29367:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "29332:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29349:2:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29377:0:0"
									},
									"scope": 1717,
									"src": "29323:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "29643:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1676,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1671,
														"src": "29657:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29677:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29669:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29669:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29657:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "29653:91:0",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "29681:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29730:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29722:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29722:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29722:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1682,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "29702:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29702:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1688,
															"nodeType": "RevertStatement",
															"src": "29695:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "29772:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1691,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "29753:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29753:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "29753:28:0"
											}
										]
									},
									"documentation": {
										"id": 1669,
										"nodeType": "StructuredDocumentation",
										"src": "29430:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1673,
												"name": "onlyOwner",
												"nameLocations": [
													"29633:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "29633:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29633:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "29582:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29608:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "29600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29599:18:0"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29643:0:0"
									},
									"scope": 1717,
									"src": "29573:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "30005:124:0",
										"statements": [
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "30023:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1715,
														"src": "30015:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1702,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30015:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1705,
												"initialValue": {
													"id": 1704,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1578,
													"src": "30034:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30015:25:0"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "30050:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1707,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "30059:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30050:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "30050:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1711,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "30103:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "30113:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1710,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "30082:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30082:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "EmitStatement",
												"src": "30077:45:0"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "29794:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "29951:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "29978:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "29970:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29969:18:0"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30005:0:0"
									},
									"scope": 1717,
									"src": "29942:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "27693:2438:0",
							"usedErrors": [
								1583,
								1588
							],
							"usedEvents": [
								1594
							]
						},
						{
							"id": 1718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30285:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1719,
								"nodeType": "StructuredDocumentation",
								"src": "30311:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1734,
							"linearizedBaseContracts": [
								1734
							],
							"name": "IERC721Receiver",
							"nameLocation": "30474:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1720,
										"nodeType": "StructuredDocumentation",
										"src": "30496:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "31010:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1722,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "31044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31036:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31070:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31062:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31124:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31109:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31109:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31026:108:0"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "31153:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31153:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31152:8:0"
									},
									"scope": 1734,
									"src": "31001:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3133,
							"src": "30464:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31315:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1736,
								"nodeType": "StructuredDocumentation",
								"src": "31341:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "IERC165",
							"nameLocation": "31631:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1737,
										"nodeType": "StructuredDocumentation",
										"src": "31645:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "31999:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "32024:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "32017:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1738,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "32017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32016:20:0"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "32060:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32060:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32059:6:0"
									},
									"scope": 1745,
									"src": "31990:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3133,
							"src": "31621:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32202:24:0"
						},
						{
							"id": 1747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32377:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1749,
										"name": "IERC165",
										"nameLocations": [
											"32911:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "32911:7:0"
									},
									"id": 1750,
									"nodeType": "InheritanceSpecifier",
									"src": "32911:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1748,
								"nodeType": "StructuredDocumentation",
								"src": "32404:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1767,
							"linearizedBaseContracts": [
								1767,
								1745
							],
							"name": "ERC165",
							"nameLocation": "32901:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1744
									],
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "33068:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1758,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "33085:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1760,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1745,
																	"src": "33105:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1745_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1745_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1759,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "33100:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33100:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1745",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "33114:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "33100:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "33085:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1764,
												"nodeType": "Return",
												"src": "33078:47:0"
											}
										]
									},
									"documentation": {
										"id": 1751,
										"nodeType": "StructuredDocumentation",
										"src": "32925:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "32995:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "33020:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "33013:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1752,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "33013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33012:20:0"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "33062:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33062:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33061:6:0"
									},
									"scope": 1767,
									"src": "32986:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3133,
							"src": "32883:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33272:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1770,
										"name": "IERC165",
										"nameLocations": [
											"33388:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "33388:7:0"
									},
									"id": 1771,
									"nodeType": "InheritanceSpecifier",
									"src": "33388:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1769,
								"nodeType": "StructuredDocumentation",
								"src": "33299:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								1745
							],
							"name": "IERC721",
							"nameLocation": "33377:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "33402:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1780,
									"name": "Transfer",
									"nameLocation": "33501:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33526:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "33510:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33548:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "33532:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33568:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "33552:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33509:67:0"
									},
									"src": "33495:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "33583:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1789,
									"name": "Approval",
									"nameLocation": "33688:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33713:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "33697:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33736:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "33720:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "33746:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33696:74:0"
									},
									"src": "33682:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "33777:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1798,
									"name": "ApprovalForAll",
									"nameLocation": "33905:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33936:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "33920:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "33959:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "33943:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "33974:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "33969:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1795,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33919:64:0"
									},
									"src": "33899:85:0"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "33990:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "34080:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34098:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "34090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34089:15:0"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "34136:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "34128:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34128:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34127:17:0"
									},
									"scope": 1881,
									"src": "34071:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "34151:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "34296:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "34304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34303:17:0"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "34344:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1811,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34343:15:0"
									},
									"scope": 1881,
									"src": "34287:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "34365:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34944:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34969:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "34961:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34983:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "34975:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34995:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "34987:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "35019:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "35004:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35004:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34960:64:0"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35033:0:0"
									},
									"scope": 1881,
									"src": "34935:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "35040:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "35759:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35784:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "35776:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35798:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "35790:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35810:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "35802:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35775:43:0"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35827:0:0"
									},
									"scope": 1881,
									"src": "35750:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1837,
										"nodeType": "StructuredDocumentation",
										"src": "35834:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "36580:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "36593:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36615:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "36607:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "36619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36592:43:0"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36644:0:0"
									},
									"scope": 1881,
									"src": "36571:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1847,
										"nodeType": "StructuredDocumentation",
										"src": "36651:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "37117:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "37133:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "37125:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37145:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "37137:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37124:29:0"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37162:0:0"
									},
									"scope": 1881,
									"src": "37108:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "37169:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "37498:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37524:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "37516:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37539:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "37534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37515:33:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37557:0:0"
									},
									"scope": 1881,
									"src": "37489:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "37564:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "37717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37737:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "37729:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37728:17:0"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37777:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "37769:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37768:18:0"
									},
									"scope": 1881,
									"src": "37708:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "37793:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "37945:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37970:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "37962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37985:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "37977:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37961:33:0"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "38018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38017:6:0"
									},
									"scope": 1881,
									"src": "37936:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3133,
							"src": "33367:4659:0",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						},
						{
							"id": 1882,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38160:24:0"
						},
						{
							"id": 1883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38321:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1885,
										"name": "IERC165",
										"nameLocations": [
											"38416:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "38416:7:0"
									},
									"id": 1886,
									"nodeType": "InheritanceSpecifier",
									"src": "38416:7:0"
								},
								{
									"baseName": {
										"id": 1887,
										"name": "IERC721",
										"nameLocations": [
											"38425:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "38425:7:0"
									},
									"id": 1888,
									"nodeType": "InheritanceSpecifier",
									"src": "38425:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1884,
								"nodeType": "StructuredDocumentation",
								"src": "38349:45:0",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 1901,
							"linearizedBaseContracts": [
								1901,
								1881,
								1745
							],
							"name": "IERC4906",
							"nameLocation": "38404:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "38439:201:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 1893,
									"name": "MetadataUpdate",
									"nameLocation": "38651:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "38674:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1893,
												"src": "38666:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38665:18:0"
									},
									"src": "38645:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1894,
										"nodeType": "StructuredDocumentation",
										"src": "38690:212:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 1900,
									"name": "BatchMetadataUpdate",
									"nameLocation": "38913:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "38941:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "38933:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "38963:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "38955:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38932:42:0"
									},
									"src": "38907:68:0"
								}
							],
							"scope": 3133,
							"src": "38394:583:0",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798,
								1893,
								1900
							]
						},
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39153:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1904,
										"name": "IERC721",
										"nameLocations": [
											"39343:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "39343:7:0"
									},
									"id": 1905,
									"nodeType": "InheritanceSpecifier",
									"src": "39343:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1903,
								"nodeType": "StructuredDocumentation",
								"src": "39180:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1926,
							"linearizedBaseContracts": [
								1926,
								1881,
								1745
							],
							"name": "IERC721Metadata",
							"nameLocation": "39324:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "39357:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1911,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "39429:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39433:2:0"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "39459:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1908,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39458:15:0"
									},
									"scope": 1926,
									"src": "39420:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "39480:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "39554:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39560:2:0"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "39586:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1914,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39586:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39585:15:0"
									},
									"scope": 1926,
									"src": "39545:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "39607:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "39711:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39728:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "39720:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39720:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39719:17:0"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "39760:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39760:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39759:15:0"
									},
									"scope": 1926,
									"src": "39702:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3133,
							"src": "39314:463:0",
							"usedErrors": [],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						},
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "39913:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1929,
										"name": "Context",
										"nameLocations": [
											"40221:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1572,
										"src": "40221:7:0"
									},
									"id": 1930,
									"nodeType": "InheritanceSpecifier",
									"src": "40221:7:0"
								},
								{
									"baseName": {
										"id": 1931,
										"name": "ERC165",
										"nameLocations": [
											"40230:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1767,
										"src": "40230:6:0"
									},
									"id": 1932,
									"nodeType": "InheritanceSpecifier",
									"src": "40230:6:0"
								},
								{
									"baseName": {
										"id": 1933,
										"name": "IERC721",
										"nameLocations": [
											"40238:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1881,
										"src": "40238:7:0"
									},
									"id": 1934,
									"nodeType": "InheritanceSpecifier",
									"src": "40238:7:0"
								},
								{
									"baseName": {
										"id": 1935,
										"name": "IERC721Metadata",
										"nameLocations": [
											"40247:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1926,
										"src": "40247:15:0"
									},
									"id": 1936,
									"nodeType": "InheritanceSpecifier",
									"src": "40247:15:0"
								},
								{
									"baseName": {
										"id": 1937,
										"name": "IERC721Errors",
										"nameLocations": [
											"40264:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "40264:13:0"
									},
									"id": 1938,
									"nodeType": "InheritanceSpecifier",
									"src": "40264:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "39946:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2919,
							"linearizedBaseContracts": [
								2919,
								89,
								1926,
								1881,
								1767,
								1745,
								1572
							],
							"name": "ERC721",
							"nameLocation": "40211:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1941,
									"libraryName": {
										"id": 1939,
										"name": "Strings",
										"nameLocations": [
											"40290:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "40290:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "40284:26:0",
									"typeName": {
										"id": 1940,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "40302:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1943,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "40349:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40334:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1942,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40334:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1945,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "40396:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40381:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1944,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "40381:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1949,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "40454:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40410:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1948,
										"keyName": "tokenId",
										"keyNameLocation": "40426:7:0",
										"keyType": {
											"id": 1946,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40418:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40410:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1947,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40437:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1953,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "40510:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40468:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1952,
										"keyName": "owner",
										"keyNameLocation": "40484:5:0",
										"keyType": {
											"id": 1950,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40476:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "40468:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1951,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40493:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1957,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "40570:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40526:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1956,
										"keyName": "tokenId",
										"keyNameLocation": "40542:7:0",
										"keyType": {
											"id": 1954,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "40534:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "40526:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1955,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40553:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1963,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "40660:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2919,
									"src": "40592:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1962,
										"keyName": "owner",
										"keyNameLocation": "40608:5:0",
										"keyType": {
											"id": 1958,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "40600:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "40592:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1961,
											"keyName": "operator",
											"keyNameLocation": "40633:8:0",
											"keyType": {
												"id": 1959,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "40625:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "40617:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1960,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "40645:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "40854:57:0",
										"statements": [
											{
												"expression": {
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1971,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1943,
														"src": "40864:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1972,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1966,
														"src": "40872:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "40864:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1974,
												"nodeType": "ExpressionStatement",
												"src": "40864:13:0"
											},
											{
												"expression": {
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1975,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "40887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1976,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1968,
														"src": "40897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "40887:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1978,
												"nodeType": "ExpressionStatement",
												"src": "40887:17:0"
											}
										]
									},
									"documentation": {
										"id": 1964,
										"nodeType": "StructuredDocumentation",
										"src": "40685:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1980,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "40824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "40810:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1965,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40810:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "40845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "40831:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1967,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40831:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40809:44:0"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40854:0:0"
									},
									"scope": 2919,
									"src": "40798:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1744,
										1766
									],
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "41086:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1991,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "41115:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1993,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1881,
																			"src": "41135:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1881_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1992,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41130:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41130:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1881",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41144:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41130:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41115:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1997,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "41171:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1999,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "41191:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1926_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1926_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1998,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "41186:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41186:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1926",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "41208:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "41186:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "41171:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "41115:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2006,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "41259:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2004,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "41235:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2919_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41241:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1766,
															"src": "41235:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41235:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "41115:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1990,
												"id": 2009,
												"nodeType": "Return",
												"src": "41096:175:0"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "40917:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "40987:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1987,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1985,
												"name": "ERC165",
												"nameLocations": [
													"41054:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1767,
												"src": "41054:6:0"
											},
											{
												"id": 1986,
												"name": "IERC165",
												"nameLocations": [
													"41062:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1745,
												"src": "41062:7:0"
											}
										],
										"src": "41045:25:0"
									},
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "41012:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "41005:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "41005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41004:20:0"
									},
									"returnParameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "41080:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41080:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41079:6:0"
									},
									"scope": 2919,
									"src": "40978:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1806
									],
									"body": {
										"id": 2038,
										"nodeType": "Block",
										"src": "41409:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2019,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "41423:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41440:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2020,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41432:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41432:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41423:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "41419:87:0",
												"trueBody": {
													"id": 2032,
													"nodeType": "Block",
													"src": "41444:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "41492:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "41484:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2026,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "41484:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "41484:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2025,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "41465:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41465:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2031,
															"nodeType": "RevertStatement",
															"src": "41458:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2034,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "41522:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2036,
													"indexExpression": {
														"id": 2035,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2014,
														"src": "41532:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41522:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2018,
												"id": 2037,
												"nodeType": "Return",
												"src": "41515:23:0"
											}
										]
									},
									"documentation": {
										"id": 2012,
										"nodeType": "StructuredDocumentation",
										"src": "41284:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "41346:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41364:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "41356:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41355:15:0"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2039,
												"src": "41400:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41399:9:0"
									},
									"scope": 2919,
									"src": "41337:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1814
									],
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "41674:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "41705:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2047,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "41691:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41691:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2046,
												"id": 2050,
												"nodeType": "Return",
												"src": "41684:29:0"
											}
										]
									},
									"documentation": {
										"id": 2040,
										"nodeType": "StructuredDocumentation",
										"src": "41551:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "41611:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41627:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "41619:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41618:17:0"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "41665:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41664:9:0"
									},
									"scope": 2919,
									"src": "41602:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1911
									],
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "41842:29:0",
										"statements": [
											{
												"expression": {
													"id": 2058,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1943,
													"src": "41859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2057,
												"id": 2059,
												"nodeType": "Return",
												"src": "41852:12:0"
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "41726:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "41791:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41795:2:0"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "41827:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2055,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41826:15:0"
									},
									"scope": 2919,
									"src": "41782:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1917
									],
									"body": {
										"id": 2069,
										"nodeType": "Block",
										"src": "41997:31:0",
										"statements": [
											{
												"expression": {
													"id": 2067,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1945,
													"src": "42014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2066,
												"id": 2068,
												"nodeType": "Return",
												"src": "42007:14:0"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "41877:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "41944:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41950:2:0"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "41982:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2064,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41981:15:0"
									},
									"scope": 2919,
									"src": "41935:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1925
									],
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "42173:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2079,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "42197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2078,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "42183:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42183:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2081,
												"nodeType": "ExpressionStatement",
												"src": "42183:22:0"
											},
											{
												"assignments": [
													2083
												],
												"declarations": [
													{
														"constant": false,
														"id": 2083,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "42230:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2105,
														"src": "42216:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2082,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "42216:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2086,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2084,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "42240:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42240:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42216:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2089,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "42273:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42267:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2087,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "42267:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42267:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42282:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "42267:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42291:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "42267:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42340:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "42267:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2097,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "42309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2098,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2073,
																		"src": "42318:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "42326:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1356,
																	"src": "42318:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42318:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42295:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2094,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "42295:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "42302:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "42295:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42295:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2077,
												"id": 2104,
												"nodeType": "Return",
												"src": "42260:82:0"
											}
										]
									},
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "42034:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "42103:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42120:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "42112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42111:17:0"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "42158:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2075,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42158:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42157:15:0"
									},
									"scope": 2919,
									"src": "42094:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "42657:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "42674:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2111,
												"id": 2113,
												"nodeType": "Return",
												"src": "42667:9:0"
											}
										]
									},
									"documentation": {
										"id": 2107,
										"nodeType": "StructuredDocumentation",
										"src": "42355:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "42600:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42608:2:0"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "42642:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2109,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42641:15:0"
									},
									"scope": 2919,
									"src": "42591:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1854
									],
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "42801:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2124,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "42820:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "42824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2126,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "42833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42833:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2123,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2722,
															2788
														],
														"referencedDeclaration": 2722,
														"src": "42811:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42811:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "42811:35:0"
											}
										]
									},
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "42689:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "42749:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42765:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "42757:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42777:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "42769:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42756:29:0"
									},
									"returnParameters": {
										"id": 2122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42801:0:0"
									},
									"scope": 2919,
									"src": "42740:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1870
									],
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "42990:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2140,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "43014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2139,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "43000:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43000:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2142,
												"nodeType": "ExpressionStatement",
												"src": "43000:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2134,
															"src": "43053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2143,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2297,
														"src": "43040:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43040:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2138,
												"id": 2146,
												"nodeType": "Return",
												"src": "43033:28:0"
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "42859:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "42923:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "42935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42934:17:0"
									},
									"returnParameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "42981:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42980:9:0"
									},
									"scope": 2919,
									"src": "42914:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "43210:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2157,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "43239:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43239:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2159,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "43253:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2160,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "43263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2156,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2825,
														"src": "43220:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43220:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "43220:52:0"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "43074:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "43144:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "43170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "43162:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "43185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "43180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43161:33:0"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43210:0:0"
									},
									"scope": 2919,
									"src": "43135:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1880
									],
									"body": {
										"id": 2180,
										"nodeType": "Block",
										"src": "43439:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2174,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "43456:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2176,
														"indexExpression": {
															"id": 2175,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "43475:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "43456:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2178,
													"indexExpression": {
														"id": 2177,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "43482:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43456:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2173,
												"id": 2179,
												"nodeType": "Return",
												"src": "43449:42:0"
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "43285:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "43354:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "43371:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "43394:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "43386:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43370:33:0"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "43433:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43433:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43432:6:0"
									},
									"scope": 2919,
									"src": "43345:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1846
									],
									"body": {
										"id": 2226,
										"nodeType": "Block",
										"src": "43640:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2191,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "43654:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "43660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2192,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "43660:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43660:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43654:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2205,
												"nodeType": "IfStatement",
												"src": "43650:87:0",
												"trueBody": {
													"id": 2204,
													"nodeType": "Block",
													"src": "43672:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43723:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43715:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2198,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43715:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43715:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2197,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "43693:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43693:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2203,
															"nodeType": "RevertStatement",
															"src": "43686:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2207
												],
												"declarations": [
													{
														"constant": false,
														"id": 2207,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "43963:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2226,
														"src": "43955:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2206,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43955:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2214,
												"initialValue": {
													"arguments": [
														{
															"id": 2209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "43987:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "43991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2211,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "44000:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44000:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2208,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "43979:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43979:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43955:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2215,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "44027:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2216,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2184,
														"src": "44044:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44027:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2225,
												"nodeType": "IfStatement",
												"src": "44023:109:0",
												"trueBody": {
													"id": 2224,
													"nodeType": "Block",
													"src": "44050:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2219,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2184,
																		"src": "44092:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2220,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "44098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2221,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "44107:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2218,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "44071:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44071:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2223,
															"nodeType": "RevertStatement",
															"src": "44064:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2182,
										"nodeType": "StructuredDocumentation",
										"src": "43504:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "43569:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43590:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "43582:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43604:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "43596:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43616:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2227,
												"src": "43608:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43581:43:0"
									},
									"returnParameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43640:0:0"
									},
									"scope": 2919,
									"src": "43560:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1836
									],
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "44280:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2238,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "44307:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2239,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "44313:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2240,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "44317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44326:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2237,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2245,
															2271
														],
														"referencedDeclaration": 2271,
														"src": "44290:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44290:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "44290:39:0"
											}
										]
									},
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "44144:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44213:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44238:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "44230:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44230:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44252:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "44244:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44264:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "44256:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44229:43:0"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44280:0:0"
									},
									"scope": 2919,
									"src": "44204:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1826
									],
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "44505:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2258,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "44528:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2259,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "44534:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2260,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "44538:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2257,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2227,
														"src": "44515:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44515:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "44515:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2248,
															"src": "44579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "44585:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "44589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2267,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2254,
															"src": "44598:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2263,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "44556:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44556:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "44556:47:0"
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "44342:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "44411:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "44436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "44428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44428:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "44450:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "44442:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44462:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "44454:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "44484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "44471:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44471:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44427:62:0"
									},
									"returnParameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44505:0:0"
									},
									"scope": 2919,
									"src": "44402:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "45199:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2279,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1949,
														"src": "45216:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2281,
													"indexExpression": {
														"id": 2280,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "45224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45216:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2278,
												"id": 2282,
												"nodeType": "Return",
												"src": "45209:23:0"
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "44616:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "45133:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45150:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "45142:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45142:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45141:17:0"
									},
									"returnParameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "45190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45189:9:0"
									},
									"scope": 2919,
									"src": "45124:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "45434:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2292,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "45451:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2294,
													"indexExpression": {
														"id": 2293,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "45467:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45451:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2295,
												"nodeType": "Return",
												"src": "45444:31:0"
											}
										]
									},
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "45245:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "45364:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45376:17:0"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45424:9:0"
									},
									"scope": 2919,
									"src": "45355:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2332,
										"nodeType": "Block",
										"src": "45902:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2309,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "45931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45950:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "45942:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2310,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "45942:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45942:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "45931:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2315,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "45969:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2316,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "45978:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "45969:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2319,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2300,
																				"src": "46006:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2320,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2302,
																				"src": "46013:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2318,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2181,
																			"src": "45989:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45989:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "45969:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2324,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2304,
																				"src": "46038:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2323,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2297,
																			"src": "46025:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46025:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2326,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2302,
																		"src": "46050:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "46025:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "45969:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "45968:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45931:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2308,
												"id": 2331,
												"nodeType": "Return",
												"src": "45912:146:0"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "45488:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "45802:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45824:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "45816:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45839:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "45831:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "45848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45815:49:0"
									},
									"returnParameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "45896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2306,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45895:6:0"
									},
									"scope": 2919,
									"src": "45793:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "46596:271:0",
										"statements": [
											{
												"condition": {
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "46610:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2344,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "46625:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2345,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "46632:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2346,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2340,
																"src": "46641:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2343,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2333,
															"src": "46611:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46611:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2368,
												"nodeType": "IfStatement",
												"src": "46606:255:0",
												"trueBody": {
													"id": 2367,
													"nodeType": "Block",
													"src": "46651:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2349,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2336,
																	"src": "46669:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46686:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46678:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2350,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "46678:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46678:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "46669:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2365,
																"nodeType": "Block",
																"src": "46767:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2361,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "46819:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2362,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2340,
																					"src": "46828:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2360,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "46792:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46792:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2364,
																		"nodeType": "RevertStatement",
																		"src": "46785:51:0"
																	}
																]
															},
															"id": 2366,
															"nodeType": "IfStatement",
															"src": "46665:186:0",
															"trueBody": {
																"id": 2359,
																"nodeType": "Block",
																"src": "46690:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2356,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2340,
																					"src": "46738:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2355,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "46715:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46715:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2358,
																		"nodeType": "RevertStatement",
																		"src": "46708:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2334,
										"nodeType": "StructuredDocumentation",
										"src": "46071:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "46508:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "46533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "46525:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "46548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "46540:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46540:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46565:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "46557:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46524:49:0"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46596:0:0"
									},
									"scope": 2919,
									"src": "46499:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2385,
										"nodeType": "Block",
										"src": "47584:78:0",
										"statements": [
											{
												"id": 2384,
												"nodeType": "UncheckedBlock",
												"src": "47594:62:0",
												"statements": [
													{
														"expression": {
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2378,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1953,
																	"src": "47618:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2380,
																"indexExpression": {
																	"id": 2379,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "47628:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "47618:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2381,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "47640:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "47618:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2383,
														"nodeType": "ExpressionStatement",
														"src": "47618:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "46873:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "47518:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "47535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47560:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2386,
												"src": "47552:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2374,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "47552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47534:32:0"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47584:0:0"
									},
									"scope": 2919,
									"src": "47509:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "48350:700:0",
										"statements": [
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "48368:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "48360:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2398,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48360:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2403,
												"initialValue": {
													"arguments": [
														{
															"id": 2401,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "48384:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2400,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "48375:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48375:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48360:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2404,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2393,
														"src": "48452:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48468:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48460:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2405,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48460:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48460:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48452:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "48448:86:0",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "48472:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2411,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "48503:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2412,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2393,
																		"src": "48509:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2413,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "48515:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2410,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "48486:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48486:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2415,
															"nodeType": "ExpressionStatement",
															"src": "48486:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2418,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "48578:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48594:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2419,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48586:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48586:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48578:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2445,
												"nodeType": "IfStatement",
												"src": "48574:256:0",
												"trueBody": {
													"id": 2444,
													"nodeType": "Block",
													"src": "48598:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48711:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48703:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2425,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48703:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48703:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2429,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2391,
																		"src": "48715:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2432,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48724:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2430,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48724:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48724:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "48736:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2424,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2722,
																		2788
																	],
																	"referencedDeclaration": 2788,
																	"src": "48694:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48694:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2436,
															"nodeType": "ExpressionStatement",
															"src": "48694:48:0"
														},
														{
															"id": 2443,
															"nodeType": "UncheckedBlock",
															"src": "48757:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2437,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "48785:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2439,
																			"indexExpression": {
																				"id": 2438,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2399,
																				"src": "48795:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "48785:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48804:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48785:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2442,
																	"nodeType": "ExpressionStatement",
																	"src": "48785:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2446,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "48844:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48858:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48850:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2447,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48850:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48850:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48844:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2460,
												"nodeType": "IfStatement",
												"src": "48840:107:0",
												"trueBody": {
													"id": 2459,
													"nodeType": "Block",
													"src": "48862:85:0",
													"statements": [
														{
															"id": 2458,
															"nodeType": "UncheckedBlock",
															"src": "48876:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2452,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "48904:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2454,
																			"indexExpression": {
																				"id": 2453,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2389,
																				"src": "48914:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "48904:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2455,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48921:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "48904:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2457,
																	"nodeType": "ExpressionStatement",
																	"src": "48904:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2461,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "48957:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2463,
														"indexExpression": {
															"id": 2462,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "48965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48957:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2464,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "48976:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48957:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "48957:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "49003:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2469,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "49009:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2470,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "49013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2467,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1780,
														"src": "48994:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48994:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "EmitStatement",
												"src": "48989:32:0"
											},
											{
												"expression": {
													"id": 2473,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2399,
													"src": "49039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2397,
												"id": 2474,
												"nodeType": "Return",
												"src": "49032:11:0"
											}
										]
									},
									"documentation": {
										"id": 2387,
										"nodeType": "StructuredDocumentation",
										"src": "47668:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "48264:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48280:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "48272:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48272:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48292:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "48284:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "48309:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "48301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48271:43:0"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "48341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48340:9:0"
									},
									"scope": 2919,
									"src": "48255:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2525,
										"nodeType": "Block",
										"src": "49425:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2484,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2479,
														"src": "49439:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49453:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49445:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2485,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49445:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49445:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49439:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2498,
												"nodeType": "IfStatement",
												"src": "49435:87:0",
												"trueBody": {
													"id": 2497,
													"nodeType": "Block",
													"src": "49457:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49508:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49500:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2491,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49500:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49500:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2490,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "49478:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49478:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2496,
															"nodeType": "RevertStatement",
															"src": "49471:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2500
												],
												"declarations": [
													{
														"constant": false,
														"id": 2500,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49539:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2525,
														"src": "49531:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2499,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49531:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2509,
												"initialValue": {
													"arguments": [
														{
															"id": 2502,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "49563:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2503,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "49567:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49584:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49576:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49576:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49576:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2501,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "49555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49555:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49531:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2510,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2500,
														"src": "49601:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49626:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49618:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2511,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49618:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49618:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49601:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2524,
												"nodeType": "IfStatement",
												"src": "49597:96:0",
												"trueBody": {
													"id": 2523,
													"nodeType": "Block",
													"src": "49630:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2519,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49679:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49671:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2517,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49671:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49671:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2516,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "49651:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49651:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2522,
															"nodeType": "RevertStatement",
															"src": "49644:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "49056:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "49381:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49395:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "49387:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "49399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49386:29:0"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49425:0:0"
									},
									"scope": 2919,
									"src": "49372:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2540,
										"nodeType": "Block",
										"src": "50107:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2535,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2529,
															"src": "50127:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2536,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "50131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50140:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2534,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2541,
															2567
														],
														"referencedDeclaration": 2567,
														"src": "50117:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50117:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "50117:26:0"
											}
										]
									},
									"documentation": {
										"id": 2527,
										"nodeType": "StructuredDocumentation",
										"src": "49705:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "50059:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50077:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "50069:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50089:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2541,
												"src": "50081:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50068:29:0"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50107:0:0"
									},
									"scope": 2919,
									"src": "50050:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2566,
										"nodeType": "Block",
										"src": "50455:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2552,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "50471:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "50475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2551,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2526,
														"src": "50465:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50465:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2555,
												"nodeType": "ExpressionStatement",
												"src": "50465:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50524:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2557,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50516:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50516:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2561,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "50528:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2562,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "50532:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2563,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "50541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2556,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "50493:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50493:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2565,
												"nodeType": "ExpressionStatement",
												"src": "50493:53:0"
											}
										]
									},
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "50156:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "50380:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50398:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "50390:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50410:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "50402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "50432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2567,
												"src": "50419:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "50419:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50389:48:0"
									},
									"returnParameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50455:0:0"
									},
									"scope": 2919,
									"src": "50371:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2599,
										"nodeType": "Block",
										"src": "50920:186:0",
										"statements": [
											{
												"assignments": [
													2574
												],
												"declarations": [
													{
														"constant": false,
														"id": 2574,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50938:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2599,
														"src": "50930:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50930:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2586,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50970:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50962:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2576,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50962:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50962:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2570,
															"src": "50974:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50991:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50983:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50983:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50983:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2575,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "50954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50954:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50930:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2587,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "51008:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51033:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2588,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51025:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2591,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51025:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51008:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2598,
												"nodeType": "IfStatement",
												"src": "51004:96:0",
												"trueBody": {
													"id": 2597,
													"nodeType": "Block",
													"src": "51037:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2594,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2570,
																		"src": "51081:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2593,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "51058:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51058:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2596,
															"nodeType": "RevertStatement",
															"src": "51051:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2568,
										"nodeType": "StructuredDocumentation",
										"src": "50559:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "50888:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2600,
												"src": "50894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50893:17:0"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50920:0:0"
									},
									"scope": 2919,
									"src": "50879:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2659,
										"nodeType": "Block",
										"src": "51501:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2610,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "51515:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51529:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51521:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2611,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51521:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51521:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51515:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2624,
												"nodeType": "IfStatement",
												"src": "51511:87:0",
												"trueBody": {
													"id": 2623,
													"nodeType": "Block",
													"src": "51533:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51584:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "51576:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2617,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "51576:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51576:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2616,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "51554:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51554:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2622,
															"nodeType": "RevertStatement",
															"src": "51547:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2626
												],
												"declarations": [
													{
														"constant": false,
														"id": 2626,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "51615:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2659,
														"src": "51607:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51607:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2635,
												"initialValue": {
													"arguments": [
														{
															"id": 2628,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "51639:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2629,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "51643:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "51652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "51652:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51652:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2627,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "51631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51631:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51607:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2636,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "51677:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51702:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2637,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51694:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51694:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51677:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2647,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "51779:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "51796:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "51779:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2657,
													"nodeType": "IfStatement",
													"src": "51775:109:0",
													"trueBody": {
														"id": 2656,
														"nodeType": "Block",
														"src": "51802:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2651,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2603,
																			"src": "51844:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2652,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2607,
																			"src": "51850:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2653,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2626,
																			"src": "51859:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2650,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "51823:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51823:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2655,
																"nodeType": "RevertStatement",
																"src": "51816:57:0"
															}
														]
													}
												},
												"id": 2658,
												"nodeType": "IfStatement",
												"src": "51673:211:0",
												"trueBody": {
													"id": 2646,
													"nodeType": "Block",
													"src": "51706:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2643,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "51750:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2642,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "51727:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51727:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2645,
															"nodeType": "RevertStatement",
															"src": "51720:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2601,
										"nodeType": "StructuredDocumentation",
										"src": "51112:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "51439:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "51449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51471:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "51463:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2660,
												"src": "51475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51448:43:0"
									},
									"returnParameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51501:0:0"
									},
									"scope": 2919,
									"src": "51430:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "52898:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2671,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "52922:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2672,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2665,
															"src": "52928:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2673,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2667,
															"src": "52932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52941:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2670,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2678,
															2704
														],
														"referencedDeclaration": 2704,
														"src": "52908:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52908:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2676,
												"nodeType": "ExpressionStatement",
												"src": "52908:36:0"
											}
										]
									},
									"documentation": {
										"id": 2661,
										"nodeType": "StructuredDocumentation",
										"src": "51896:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "52832:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52854:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "52846:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52868:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "52860:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "52872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52872:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52845:43:0"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52898:0:0"
									},
									"scope": 2919,
									"src": "52823:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "53290:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2691,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "53310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2692,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "53316:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2693,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "53320:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2690,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2660,
														"src": "53300:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53300:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "53300:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2681,
															"src": "53361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2698,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "53367:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2685,
															"src": "53371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2700,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "53380:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2696,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "53338:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53338:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2702,
												"nodeType": "ExpressionStatement",
												"src": "53338:47:0"
											}
										]
									},
									"documentation": {
										"id": 2679,
										"nodeType": "StructuredDocumentation",
										"src": "52957:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "53197:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "53219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "53211:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53233:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "53225:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2685,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53245:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "53237:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "53267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "53254:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53254:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53210:62:0"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53290:0:0"
									},
									"scope": 2919,
									"src": "53188:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "53905:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2715,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "53924:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2716,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "53928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2717,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "53937:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53943:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2714,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2722,
															2788
														],
														"referencedDeclaration": 2788,
														"src": "53915:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53915:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2720,
												"nodeType": "ExpressionStatement",
												"src": "53915:33:0"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "53398:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "53844:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53861:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "53853:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "53865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2711,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "53890:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "53882:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53852:43:0"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53905:0:0"
									},
									"scope": 2919,
									"src": "53835:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2787,
										"nodeType": "Block",
										"src": "54231:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2734,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "54297:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2740,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2735,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "54310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54326:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54318:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2736,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "54318:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54318:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "54310:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54297:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2780,
												"nodeType": "IfStatement",
												"src": "54293:460:0",
												"trueBody": {
													"id": 2779,
													"nodeType": "Block",
													"src": "54330:423:0",
													"statements": [
														{
															"assignments": [
																2743
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2743,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "54352:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2779,
																	"src": "54344:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2742,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54344:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2747,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2745,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2727,
																		"src": "54374:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2744,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2854,
																	"src": "54360:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54360:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54344:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2748,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2729,
																			"src": "54510:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "54526:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2750,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "54518:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2749,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "54518:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54518:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "54510:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2754,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2743,
																			"src": "54532:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2755,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2729,
																			"src": "54541:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "54532:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "54510:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "54549:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2759,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2743,
																				"src": "54567:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2760,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2729,
																				"src": "54574:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2758,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2181,
																			"src": "54550:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54550:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "54510:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2769,
															"nodeType": "IfStatement",
															"src": "54506:142:0",
															"trueBody": {
																"id": 2768,
																"nodeType": "Block",
																"src": "54581:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2765,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2729,
																					"src": "54628:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2764,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "54606:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2766,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54606:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2767,
																		"nodeType": "RevertStatement",
																		"src": "54599:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2770,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "54666:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2778,
															"nodeType": "IfStatement",
															"src": "54662:81:0",
															"trueBody": {
																"id": 2777,
																"nodeType": "Block",
																"src": "54677:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2772,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2743,
																					"src": "54709:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2773,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2725,
																					"src": "54716:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2774,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2727,
																					"src": "54720:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2771,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1789,
																				"src": "54700:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "54700:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2776,
																		"nodeType": "EmitStatement",
																		"src": "54695:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2781,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "54763:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2783,
														"indexExpression": {
															"id": 2782,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2727,
															"src": "54779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54763:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2784,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "54790:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54763:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "54763:29:0"
											}
										]
									},
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "53961:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "54146:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54163:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "54155:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54175:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "54167:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "54192:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "54184:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "54203:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2788,
												"src": "54198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54198:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54154:59:0"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54231:0:0"
									},
									"scope": 2919,
									"src": "54137:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2824,
										"nodeType": "Block",
										"src": "55101:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2798,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2793,
														"src": "55115:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2799,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55127:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55127:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55115:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2809,
												"nodeType": "IfStatement",
												"src": "55111:91:0",
												"trueBody": {
													"id": 2808,
													"nodeType": "Block",
													"src": "55139:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2805,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2793,
																		"src": "55182:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2804,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "55160:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55160:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2807,
															"nodeType": "RevertStatement",
															"src": "55153:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2810,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "55211:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2813,
															"indexExpression": {
																"id": 2811,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2791,
																"src": "55230:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55211:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2814,
														"indexExpression": {
															"id": 2812,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "55237:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55211:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2815,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2795,
														"src": "55249:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "55211:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2817,
												"nodeType": "ExpressionStatement",
												"src": "55211:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2819,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2791,
															"src": "55287:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2820,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "55294:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2821,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2795,
															"src": "55304:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2818,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1798,
														"src": "55272:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55272:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2823,
												"nodeType": "EmitStatement",
												"src": "55267:46:0"
											}
										]
									},
									"documentation": {
										"id": 2789,
										"nodeType": "StructuredDocumentation",
										"src": "54805:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "55017:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "55044:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "55036:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55059:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "55051:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "55074:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2825,
												"src": "55069:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55035:48:0"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55101:0:0"
									},
									"scope": 2919,
									"src": "55008:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2853,
										"nodeType": "Block",
										"src": "55627:169:0",
										"statements": [
											{
												"assignments": [
													2834
												],
												"declarations": [
													{
														"constant": false,
														"id": 2834,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "55645:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2853,
														"src": "55637:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2833,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "55637:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2838,
												"initialValue": {
													"arguments": [
														{
															"id": 2836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2828,
															"src": "55662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2835,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "55653:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55653:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55637:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2839,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "55684:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2840,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55693:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55693:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55684:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2850,
												"nodeType": "IfStatement",
												"src": "55680:88:0",
												"trueBody": {
													"id": 2849,
													"nodeType": "Block",
													"src": "55705:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2846,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2828,
																		"src": "55749:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2845,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "55726:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55726:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2848,
															"nodeType": "RevertStatement",
															"src": "55719:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2851,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2834,
													"src": "55784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2832,
												"id": 2852,
												"nodeType": "Return",
												"src": "55777:12:0"
											}
										]
									},
									"documentation": {
										"id": 2826,
										"nodeType": "StructuredDocumentation",
										"src": "55326:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "55564:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55586:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "55578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55577:17:0"
									},
									"returnParameters": {
										"id": 2832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2854,
												"src": "55618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55617:9:0"
									},
									"scope": 2919,
									"src": "55555:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2917,
										"nodeType": "Block",
										"src": "56437:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2866,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2859,
																"src": "56451:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56454:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "56451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2868,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56459:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56451:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56468:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56451:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2916,
												"nodeType": "IfStatement",
												"src": "56447:664:0",
												"trueBody": {
													"id": 2915,
													"nodeType": "Block",
													"src": "56471:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2895,
																		"nodeType": "Block",
																		"src": "56585:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2888,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2884,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2882,
																						"src": "56607:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2885,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1734,
																								"src": "56617:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1734_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2886,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "56633:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1733,
																							"src": "56617:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2887,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "56650:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "56617:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "56607:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2894,
																				"nodeType": "IfStatement",
																				"src": "56603:130:0",
																				"trueBody": {
																					"id": 2893,
																					"nodeType": "Block",
																					"src": "56660:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2890,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2859,
																										"src": "56711:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2889,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "56689:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2891,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56689:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2892,
																							"nodeType": "RevertStatement",
																							"src": "56682:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2896,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2883,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2882,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "56577:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2896,
																				"src": "56570:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2881,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "56570:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56569:15:0"
																	},
																	"src": "56561:186:0"
																},
																{
																	"block": {
																		"id": 2912,
																		"nodeType": "Block",
																		"src": "56776:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2903,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2900,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2898,
																							"src": "56798:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2901,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "56805:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "56798:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2902,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "56815:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "56798:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2910,
																					"nodeType": "Block",
																					"src": "56897:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "56983:86:0",
																								"nodeType": "YulBlock",
																								"src": "56983:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "57020:2:0",
																															"nodeType": "YulLiteral",
																															"src": "57020:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "57024:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "57024:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "57016:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "57016:3:0"
																													},
																													"nativeSrc": "57016:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "57016:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "57039:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "57039:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "57033:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "57033:5:0"
																													},
																													"nativeSrc": "57033:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "57033:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "57009:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "57009:6:0"
																											},
																											"nativeSrc": "57009:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "57009:38:0"
																										},
																										"nativeSrc": "57009:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "57009:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2898,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "57024:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2898,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "57039:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2909,
																							"nodeType": "InlineAssembly",
																							"src": "56974:95:0"
																						}
																					]
																				},
																				"id": 2911,
																				"nodeType": "IfStatement",
																				"src": "56794:293:0",
																				"trueBody": {
																					"id": 2908,
																					"nodeType": "Block",
																					"src": "56818:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2905,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2859,
																										"src": "56869:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2904,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "56847:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2906,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56847:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2907,
																							"nodeType": "RevertStatement",
																							"src": "56840:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2913,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2899,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2898,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "56768:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2913,
																				"src": "56755:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2897,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "56755:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56754:21:0"
																	},
																	"src": "56748:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2875,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "56526:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56526:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2877,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2857,
																		"src": "56540:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2878,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2861,
																		"src": "56546:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2879,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2863,
																		"src": "56555:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2872,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2859,
																				"src": "56505:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2871,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1734,
																			"src": "56489:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1734_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56489:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1734",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56509:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1733,
																	"src": "56489:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56489:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2914,
															"nodeType": "TryStatement",
															"src": "56485:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2855,
										"nodeType": "StructuredDocumentation",
										"src": "55802:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "56344:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "56389:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56381:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56401:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56393:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "56423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56410:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2862,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "56410:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56366:62:0"
									},
									"returnParameters": {
										"id": 2865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56437:0:0"
									},
									"scope": 2919,
									"src": "56335:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3133,
							"src": "40193:16926:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						},
						{
							"id": 2920,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57293:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2922,
										"name": "Context",
										"nameLocations": [
											"57450:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1572,
										"src": "57450:7:0"
									},
									"id": 2923,
									"nodeType": "InheritanceSpecifier",
									"src": "57450:7:0"
								},
								{
									"baseName": {
										"id": 2924,
										"name": "ERC721",
										"nameLocations": [
											"57459:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2919,
										"src": "57459:6:0"
									},
									"id": 2925,
									"nodeType": "InheritanceSpecifier",
									"src": "57459:6:0"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2921,
								"nodeType": "StructuredDocumentation",
								"src": "57321:92:0",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 2943,
							"linearizedBaseContracts": [
								2943,
								2919,
								89,
								1926,
								1881,
								1767,
								1745,
								1572
							],
							"name": "ERC721Burnable",
							"nameLocation": "57432:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2941,
										"nodeType": "Block",
										"src": "57685:268:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "57920:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57912:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2932,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57912:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57912:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2936,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "57924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2937,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "57933:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57933:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2931,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "57904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57904:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "57904:42:0"
											}
										]
									},
									"documentation": {
										"id": 2926,
										"nodeType": "StructuredDocumentation",
										"src": "57472:162:0",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 2942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "57648:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57661:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2942,
												"src": "57653:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57652:17:0"
									},
									"returnParameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57685:0:0"
									},
									"scope": 2943,
									"src": "57639:314:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3133,
							"src": "57414:541:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798
							]
						},
						{
							"id": 2944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58133:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2946,
										"name": "IERC4906",
										"nameLocations": [
											"58271:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1901,
										"src": "58271:8:0"
									},
									"id": 2947,
									"nodeType": "InheritanceSpecifier",
									"src": "58271:8:0"
								},
								{
									"baseName": {
										"id": 2948,
										"name": "ERC721",
										"nameLocations": [
											"58281:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2919,
										"src": "58281:6:0"
									},
									"id": 2949,
									"nodeType": "InheritanceSpecifier",
									"src": "58281:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2945,
								"nodeType": "StructuredDocumentation",
								"src": "58163:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 3060,
							"linearizedBaseContracts": [
								3060,
								2919,
								89,
								1926,
								1901,
								1881,
								1767,
								1745,
								1572
							],
							"name": "ERC721URIStorage",
							"nameLocation": "58251:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2952,
									"libraryName": {
										"id": 2950,
										"name": "Strings",
										"nameLocations": [
											"58300:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1543,
										"src": "58300:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "58294:26:0",
									"typeName": {
										"id": 2951,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "58312:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2958,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "58532:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 3060,
									"src": "58508:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2953,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "58508:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 2956,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "58562:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 2955,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "58555:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 2954,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "58555:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 2957,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "58555:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2962,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "58662:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3060,
									"src": "58619:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2961,
										"keyName": "tokenId",
										"keyNameLocation": "58635:7:0",
										"keyType": {
											"id": 2959,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58627:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "58619:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2960,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "58646:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1744,
										2011
									],
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "58847:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2973,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2965,
															"src": "58864:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2974,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2958,
															"src": "58879:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "58864:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2978,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2965,
																"src": "58927:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2976,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "58903:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$3060_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 2977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58909:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2011,
															"src": "58903:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58903:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "58864:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2972,
												"id": 2981,
												"nodeType": "Return",
												"src": "58857:82:0"
											}
										]
									},
									"documentation": {
										"id": 2963,
										"nodeType": "StructuredDocumentation",
										"src": "58679:55:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "58748:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2969,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2967,
												"name": "ERC721",
												"nameLocations": [
													"58815:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2919,
												"src": "58815:6:0"
											},
											{
												"id": 2968,
												"name": "IERC165",
												"nameLocations": [
													"58823:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1745,
												"src": "58823:7:0"
											}
										],
										"src": "58806:25:0"
									},
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2965,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "58773:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "58766:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2964,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "58766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58765:20:0"
									},
									"returnParameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "58841:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "58841:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58840:6:0"
									},
									"scope": 3060,
									"src": "58739:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2106
									],
									"body": {
										"id": 3039,
										"nodeType": "Block",
										"src": "59100:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2993,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "59124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2992,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2854,
														"src": "59110:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59110:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "59110:22:0"
											},
											{
												"assignments": [
													2997
												],
												"declarations": [
													{
														"constant": false,
														"id": 2997,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "59157:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3039,
														"src": "59143:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2996,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "59143:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3001,
												"initialValue": {
													"baseExpression": {
														"id": 2998,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2962,
														"src": "59169:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3000,
													"indexExpression": {
														"id": 2999,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2986,
														"src": "59180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59169:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59143:45:0"
											},
											{
												"assignments": [
													3003
												],
												"declarations": [
													{
														"constant": false,
														"id": 3003,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "59212:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3039,
														"src": "59198:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 3002,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "59198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3006,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3004,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2115,
														"src": "59219:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59219:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59198:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3009,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3003,
																	"src": "59308:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59302:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3007,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "59302:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59302:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59314:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59302:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59302:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3017,
												"nodeType": "IfStatement",
												"src": "59298:70:0",
												"trueBody": {
													"id": 3016,
													"nodeType": "Block",
													"src": "59327:41:0",
													"statements": [
														{
															"expression": {
																"id": 3014,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2997,
																"src": "59348:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2991,
															"id": 3015,
															"nodeType": "Return",
															"src": "59341:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3020,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2997,
																	"src": "59473:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "59467:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 3018,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "59467:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59467:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59484:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59467:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59493:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59467:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3033,
												"nodeType": "IfStatement",
												"src": "59463:95:0",
												"trueBody": {
													"id": 3032,
													"nodeType": "Block",
													"src": "59496:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3028,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3003,
																		"src": "59531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 3029,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2997,
																		"src": "59537:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "59517:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 3025,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "59517:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59524:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "59517:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59517:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2991,
															"id": 3031,
															"nodeType": "Return",
															"src": "59510:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3036,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "59590:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3034,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "59575:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$3060_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 3035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59581:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2106,
														"src": "59575:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 3037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59575:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2991,
												"id": 3038,
												"nodeType": "Return",
												"src": "59568:30:0"
											}
										]
									},
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "58952:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 3040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "59021:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2988,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59067:8:0"
									},
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59038:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "59030:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59029:17:0"
									},
									"returnParameters": {
										"id": 2991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3040,
												"src": "59085:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2989,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59085:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59084:15:0"
									},
									"scope": 3060,
									"src": "59012:593:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "59805:86:0",
										"statements": [
											{
												"expression": {
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3048,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2962,
															"src": "59815:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3050,
														"indexExpression": {
															"id": 3049,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "59826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59815:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3051,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3045,
														"src": "59837:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "59815:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3053,
												"nodeType": "ExpressionStatement",
												"src": "59815:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3055,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "59876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3054,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "59861:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59861:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "EmitStatement",
												"src": "59856:28:0"
											}
										]
									},
									"documentation": {
										"id": 3041,
										"nodeType": "StructuredDocumentation",
										"src": "59611:108:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 3059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "59733:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59754:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "59746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3045,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "59777:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "59763:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3044,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "59763:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59745:42:0"
									},
									"returnParameters": {
										"id": 3047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59805:0:0"
									},
									"scope": 3060,
									"src": "59724:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3133,
							"src": "58233:1660:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1780,
								1789,
								1798,
								1893,
								1900
							]
						},
						{
							"id": 3061,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "59924:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProgress",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 3062,
							"linearizedBaseContracts": [
								3062
							],
							"name": "IProgress",
							"nameLocation": "59966:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3133,
							"src": "59956:35:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3063,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"60019:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3060,
										"src": "60019:16:0"
									},
									"id": 3064,
									"nodeType": "InheritanceSpecifier",
									"src": "60019:16:0"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 3066,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "60045:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 3067,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "60049:6:0",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "60045:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 3065,
										"name": "Ownable",
										"nameLocations": [
											"60037:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1717,
										"src": "60037:7:0"
									},
									"id": 3068,
									"nodeType": "InheritanceSpecifier",
									"src": "60037:19:0"
								}
							],
							"canonicalName": "IncentiveNFTs",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3132,
							"linearizedBaseContracts": [
								3132,
								1717,
								3060,
								2919,
								89,
								1926,
								1901,
								1881,
								1767,
								1745,
								1572
							],
							"name": "IncentiveNFTs",
							"nameLocation": "60002:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5f53575f",
									"id": 3071,
									"mutability": "mutable",
									"name": "Progress",
									"nameLocation": "60080:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3132,
									"src": "60063:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IProgress_$3062",
										"typeString": "contract IProgress"
									},
									"typeName": {
										"id": 3070,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3069,
											"name": "IProgress",
											"nameLocations": [
												"60063:9:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3062,
											"src": "60063:9:0"
										},
										"referencedDeclaration": 3062,
										"src": "60063:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IProgress_$3062",
											"typeString": "contract IProgress"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9f181b5e",
									"id": 3073,
									"mutability": "mutable",
									"name": "tokenCount",
									"nameLocation": "60106:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3132,
									"src": "60094:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3072,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "60094:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "60165:2:0",
										"statements": []
									},
									"id": 3081,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "496e63656e7469766573",
													"id": 3076,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "60144:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d8fbaab36176a28ed229739a64e81eb804625290e14419c02295785e47396f70",
														"typeString": "literal_string \"Incentives\""
													},
													"value": "Incentives"
												},
												{
													"hexValue": "494e4654",
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "60158:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ddbfdd591ff9339a8f40ca7af5e497b1afdc57cf1e7c540c22d95f7ff355f951",
														"typeString": "literal_string \"INFT\""
													},
													"value": "INFT"
												}
											],
											"id": 3078,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3075,
												"name": "ERC721",
												"nameLocations": [
													"60137:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2919,
												"src": "60137:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60137:28:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60134:2:0"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60165:0:0"
									},
									"scope": 3132,
									"src": "60122:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3094,
										"nodeType": "Block",
										"src": "60375:50:0",
										"statements": [
											{
												"expression": {
													"id": 3092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3088,
														"name": "Progress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "60385:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProgress_$3062",
															"typeString": "contract IProgress"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3090,
																"name": "_progressSC",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3083,
																"src": "60406:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3089,
															"name": "IProgress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3062,
															"src": "60396:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IProgress_$3062_$",
																"typeString": "type(contract IProgress)"
															}
														},
														"id": 3091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60396:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IProgress_$3062",
															"typeString": "contract IProgress"
														}
													},
													"src": "60385:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IProgress_$3062",
														"typeString": "contract IProgress"
													}
												},
												"id": 3093,
												"nodeType": "ExpressionStatement",
												"src": "60385:33:0"
											}
										]
									},
									"functionSelector": "b876e3b6",
									"id": 3095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3086,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3085,
												"name": "onlyOwner",
												"nameLocations": [
													"60366:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1628,
												"src": "60366:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "60366:9:0"
										}
									],
									"name": "setProgressSC",
									"nameLocation": "60322:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3083,
												"mutability": "mutable",
												"name": "_progressSC",
												"nameLocation": "60344:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3095,
												"src": "60336:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60335:21:0"
									},
									"returnParameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60375:0:0"
									},
									"scope": 3132,
									"src": "60313:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3130,
										"nodeType": "Block",
										"src": "60562:235:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3103,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "60580:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "60584:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "60580:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 3107,
																		"name": "Progress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3071,
																		"src": "60602:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IProgress_$3062",
																			"typeString": "contract IProgress"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IProgress_$3062",
																			"typeString": "contract IProgress"
																		}
																	],
																	"id": 3106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "60594:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3105,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "60594:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60594:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "60580:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652063616c6c65722063616e6e6f742072756e20746869732066756e6374696f6e",
															"id": 3110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "60613:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076",
																"typeString": "literal_string \"The caller cannot run this function\""
															},
															"value": "The caller cannot run this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d96db9448363d07de39222a0d6513d9b5350acd461e2646158377ec0bceed076",
																"typeString": "literal_string \"The caller cannot run this function\""
															}
														],
														"id": 3102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "60572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60572:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3112,
												"nodeType": "ExpressionStatement",
												"src": "60572:79:0"
											},
											{
												"expression": {
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "60661:12:0",
													"subExpression": {
														"id": 3113,
														"name": "tokenCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "60661:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3115,
												"nodeType": "ExpressionStatement",
												"src": "60661:12:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "60693:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "60697:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "60693:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3119,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "60705:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3116,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2541,
															2567
														],
														"referencedDeclaration": 2541,
														"src": "60683:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60683:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3121,
												"nodeType": "ExpressionStatement",
												"src": "60683:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3123,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "60740:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3124,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "60752:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3122,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3059,
														"src": "60727:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60727:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3126,
												"nodeType": "ExpressionStatement",
												"src": "60727:35:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3127,
															"name": "tokenCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "60779:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3128,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "60778:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3129,
												"nodeType": "Return",
												"src": "60772:18:0"
											}
										]
									},
									"functionSelector": "d85d3d27",
									"id": 3131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "60510:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "60529:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "60515:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3096,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "60515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60514:25:0"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3131,
												"src": "60557:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "60557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60556:6:0"
									},
									"scope": 3132,
									"src": "60501:296:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3133,
							"src": "59993:808:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88,
								1583,
								1588
							],
							"usedEvents": [
								1594,
								1780,
								1789,
								1798,
								1893,
								1900
							]
						}
					],
					"src": "178:60623:0"
				},
				"id": 0
			}
		}
	}
}